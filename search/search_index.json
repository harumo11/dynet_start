{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dynet start documentation in Japanese Quote dynet cpp tutorial slide examples dynet dynet\u306e\u7d39\u4ecb\u3067\u3059\uff0e qiita\u306e\u8a18\u4e8b\u304b\u3089dynet\u306e\u7d39\u4ecb\u6587\u3092\u5f15\u7528\u3057\u307e\u3059\uff0e \u672c\u8a18\u4e8b\u3067\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u4e00\u3064\u3067\u3042\u308bDyNet\u3092\u7c21\u5358\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u3053\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u7c73\u30ab\u30fc\u30cd\u30ae\u30fc\u30e1\u30ed\u30f3\u5927\u5b66\u306e\u8a00\u8a9e\u6280\u8853\u7814\u7a76\u6240\u304c\u4e2d\u5fc3\u3068\u306a\u3063\u3066\u958b\u767a\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001\u5c11\u3057\u7e01\u304c\u3042\u3063\u3066\u81ea\u5206\u3082\u88cf\u3067\u958b\u767a\u306b\u53c2\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u56fd\u969b\u4f1a\u8b70\u3067\u3042\u308bEMNLP\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u3082\u4f7f\u7528\u3055\u308c\u3066\u3001\u3053\u3061\u3089\u3067\u3082\u5272\u3068\u4eba\u6c17\u304c\u3042\u3063\u305f\u3088\u3046\u3067\u3059\u3002 DyNet\u306e\u7279\u5fb4\u3068\u3057\u3066\u306f: C++\u3068Python\u3067\u4f7f\u7528\u53ef\u80fd \u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30bf\u30eb\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a08\u7b97\u304c\u53ef\u80fd \u30df\u30cb\u30d0\u30c3\u30c1\u306e\u96a0\u853d \u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002 2\u3064\u76ee\u306e\u7279\u5fb4\u3092\u6301\u3064\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u306fPFN\u306eChainer\u306a\u3069\u3082\u6319\u3052\u3089\u308c\u3001\u4e3b\u306brecurrent/recursive neural network\u7cfb\u306e\u5b9f\u88c5\u304c\u5fc5\u8981\u3068\u306a\u308b\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u7b49\u306e\u5206\u91ce\u3067\u529b\u3092\u767a\u63ee\u3057\u307e\u3059\u3002 3\u3064\u76ee\u306e\u7279\u5fb4\u306f\u304b\u306a\u308a\u5f37\u529b\u3067\u3001\u30e6\u30fc\u30b6\u304c\u6295\u3052\u305f\u30c7\u30fc\u30bf\u306b\u5fdc\u3058\u3066\u30df\u30cb\u30d0\u30c3\u30c1\u51e6\u7406\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3001\u30df\u30cb\u30d0\u30c3\u30c1\u51e6\u7406\u306a\u3089\u30d0\u30c3\u30c1\u306e\u5927\u304d\u3055\u7b49\u3092\u81ea\u52d5\u7684\u306b\u5224\u5225\u3059\u308b\u306e\u3067\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8a18\u8ff0\u3059\u308b\u30b3\u30fc\u30c9\u4e0a\u3067\u306f\u305d\u308c\u3092\u533a\u5225\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u8ad6\u6587\u306b\u66f8\u3044\u3066\u3042\u308b\u5f0f\u3092\u305d\u306e\u307e\u307e\u66f8\u3051\u3070\u3001\u57fa\u672c\u7684\u306b\u306f\u81ea\u52d5\u7684\u306b\u30df\u30cb\u30d0\u30c3\u30c1\u51e6\u7406\u306b\u5bfe\u5fdc\u3057\u305f\u30b3\u30fc\u30c9\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002 \u30e1\u30a4\u30f3\u306e\u5bfe\u5fdc\u8a00\u8a9e\u304cC++\u306a\u306e\u3067\u3001\u4f4e\u30ec\u30d9\u30eb\u306a\u9818\u57df\u3067\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u9023\u643a\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u826f\u3044\u9078\u629e\u80a2\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002DyNet\u81ea\u4f53\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304c\u9ad8\u5ea6\u306b\u62bd\u8c61\u5316\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u7bc9\u90e8\u5206\u306e\u898b\u901a\u3057\u306f\u4ed6\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u6bd4\u8f03\u3057\u3066\u3082\u905c\u8272\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002 \u9759\u7684\u306a\u5ba3\u8a00 \u4e00\u822c\u7684\u306a\uff08Tensorflow\u306a\u3069\uff09\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u69cb\u7bc9\u306e\u4ed5\u65b9\uff0e - \u30d5\u30a7\u30fc\u30ba\uff11: \u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u69cb\u9020\u3092\u6c7a\u5b9a - \u30d5\u30a7\u30fc\u30ba\uff12: \u305f\u304f\u3055\u3093\u306e\u30c7\u30fc\u30bf\u3092\u30b0\u30e9\u30d5\u306b\u6295\u5165\u3057\u5b66\u7fd2\u3055\u305b\u308b \u52d5\u7684\u306a\u5ba3\u8a00 \u8a08\u7b97\u30b0\u30e9\u30d5\u306f\u6697\u9ed9\u306e\u3046\u3061\u306b\u524d\u65b9\u8a08\u7b97\u304c\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u6c7a\u5b9a\u3055\u308c\u307e\u3059\uff0e Installation for Ubuntu 18.04 1. cuda (\u304a\u4f7f\u3044\u306ePC\u304cnvidia\u306e\u30b0\u30e9\u30dc\u3092\u7a4d\u3093\u3067\u306a\u3044\u5834\u5408\u306f\uff0c\u3053\u306e\u7ae0\u306f\u98db\u3070\u3057\u307e\u3057\u3087\u3046) Nvidia driver \u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u5c0e\u5165\u306b\u969b\u3057\u3066 \u3053\u306e\u30da\u30fc\u30b8 \u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\uff0e \u307e\u305f\uff0c\u30c9\u30e9\u30a4\u30d0\u30fc\u306a\u3069\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306f \u3053\u3053 \u306b\u3042\u308a\u307e\u3059\uff0e \u307e\u305a\uff0c\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\uff0c\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e sudo dpkg -i cuda-repo-ubuntu1804_10.1.105-1_amd64.deb sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub sudo apt update sudo apt install cuda \u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u7d42\u4e86\u3057\u305f\u3089\uff0c\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30d1\u30bd\u30b3\u30f3\u3092\u518d\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\uff0e sudo reboot \u518d\u8d77\u52d5\u306e\u5f8c\uff0c\u554f\u984c\u306a\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u305f\u304b\u3069\u3046\u304b\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\uff0e nvidia-smi \u4e0b\u8a18\u306e\u3088\u3046\u306a\u8868\u793a\u304c\u51fa\u308c\u3070\u6210\u529f\u3067\u3059\uff0e Tue May 7 15:46:06 2019 +-----------------------------------------------------------------------------+ | NVIDIA-SMI 418.56 Driver Version: 418.56 CUDA Version: 10.1 | |-------------------------------+----------------------+----------------------+ | GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC | | Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. | |===============================+======================+======================| | 0 GeForce GTX 108... Off | 00000000:01:00.0 On | N/A | | 23% 29C P8 12W / 250W | 256MiB / 11175MiB | 1% Default | +-------------------------------+----------------------+----------------------+ +-----------------------------------------------------------------------------+ | Processes: GPU Memory | | GPU PID Type Process name Usage | |=============================================================================| | 0 1269 G /usr/lib/xorg/Xorg 162MiB | | 0 1446 G /usr/bin/gnome-shell 90MiB | +-----------------------------------------------------------------------------+ cuDNN \u8a73\u7d30 nvidia\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u5fc5\u8981\u306a\u306e\u3067\u4f5c\u6210\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046. \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30da\u30fc\u30b8 \u306b\u98db\u3093\u3067cuDNN\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u3044\u304f\u3064\u304b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\uff0c cuDNN Runtime Library for Ubuntu18.04 cuDNN Developer Library for Ubuntu18.04 cuDNN Code samples and User Guide for Ubuntu18.04 \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\uff0e sudo dpkg -i libcudnn7_7.5.1.10-1+cuda10.1_amd64.deb sudo dpkg -i libcudnn7-dev_7.5.1.10-1+cuda10.1_amd64.deb sudo dpkg -i libcudnn7-doc_7.5.1.10-1+cuda10.1_amd64.deb \u6b63\u5e38\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b \u8a66\u3057\u306b\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e cp -r /usr/src/cudnn_samples_v7/ $HOME cd $HOME/cudnn_samples_v7/mnistCUDNN make clean make make clean make \u3046\u307e\u304f\u5b9f\u884c\u3067\u304d\u308b\u3068\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e \u79c1\u306e\u74b0\u5883(Geforce GTX1080Ti)\u3067\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3057\u305f\uff0e \u6700\u5f8c\u306b Test passed! \u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308c\u3070\u3046\u307e\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u8a3c\u62e0\u3067\u3059\uff0e cudnnGetVersion() : 7501 , CUDNN_VERSION from cudnn.h : 7501 (7.5.1) Host compiler version : GCC 7.4.0 There are 1 CUDA capable devices on your machine : device 0 : sms 28 Capabilities 6.1, SmClock 1582.0 Mhz, MemSize (Mb) 11175, MemClock 5505.0 Mhz, Ecc=0, boardGroupID=0 Using device 0 Testing single precision Loading image data/one_28x28.pgm Performing forward propagation ... Testing cudnnGetConvolutionForwardAlgorithm ... Fastest algorithm is Algo 1 Testing cudnnFindConvolutionForwardAlgorithm ... ^^^^ CUDNN_STATUS_SUCCESS for Algo 0: 0.066368 time requiring 0 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.077664 time requiring 3464 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.102400 time requiring 57600 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 0.110400 time requiring 2057744 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 5: 0.132096 time requiring 203008 memory Resulting weights from Softmax: 0.0000000 0.9999399 0.0000000 0.0000000 0.0000561 0.0000000 0.0000012 0.0000017 0.0000010 0.0000000 Loading image data/three_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000000 0.0000000 0.9999288 0.0000000 0.0000711 0.0000000 0.0000000 0.0000000 0.0000000 Loading image data/five_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 0.9999820 0.0000154 0.0000000 0.0000012 0.0000006 Result of classification: 1 3 5 Test passed! Testing half precision (math in single precision) Loading image data/one_28x28.pgm Performing forward propagation ... Testing cudnnGetConvolutionForwardAlgorithm ... Fastest algorithm is Algo 1 Testing cudnnFindConvolutionForwardAlgorithm ... ^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.019584 time requiring 3464 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.032768 time requiring 28800 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 0.091136 time requiring 2057744 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 5: 0.092064 time requiring 203008 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 4: 0.094176 time requiring 207360 memory Resulting weights from Softmax: 0.0000001 1.0000000 0.0000001 0.0000000 0.0000563 0.0000001 0.0000012 0.0000017 0.0000010 0.0000001 Loading image data/three_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000714 0.0000000 0.0000000 0.0000000 0.0000000 Loading image data/five_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 1.0000000 0.0000154 0.0000000 0.0000012 0.0000006 Result of classification: 1 3 5 Test passed! \u6700\u5f8c\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u691c\u8a3c\u30c6\u30b9\u30c8\u3067\u4f7f\u7528\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u3082\u3046\u5fc5\u8981\u306a\u3044\u306e\u3067\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\uff0e cd ~/ rm -rf cudnn_samples_v7 2.Eigen (\u304a\u4f7f\u3044\u306ePC\u304cnvidia\u306e\u30b0\u30e9\u30dc\u3092\u7a4d\u3093\u3067\u306a\u3044\u5834\u5408\u306f\uff0c\u3053\u306e\u7ae0\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046) Eigen \u304b\u3089 \u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306eEigen\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fEigen\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u3066\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3061\u307e\u3057\u3087\u3046\uff0e mkdir build_dir cd build_dir cmake ../ sudo make install 3. dynet cuda\u3068eigen\u306e\u4e21\u65b9\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3053\u3068\u304c\u5fc5\u9808\u6761\u4ef6\u3067\u3059\uff0e cuda\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3067\u3082eigen\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e git clone https://github.com/clab/dynet.git cd dynet mkdir build cd build \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304ccuda\u306e\u5834\u5408\u306f\u3053\u3061\u3089 cmake .. -DENABLE_BOOST=ON -DENABLE_CPP_EXAMPLES=ON -DEIGEN3_INCLUDE_DIR=/usr/local/include/eigen3 -DCUDNN_ROOT=/usr/local/cuda/ -DBACKEND=cuda \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304ceigen\u306e\u5834\u5408\u306f\u3053\u3061\u3089 cmake .. -DENABLE_BOOST=ON -DENABLE_CPP_EXAMPLES=ON -DEIGEN3_INCLUDE_DIR=/usr/local/include/eigen3 make -j10 sudo make install \u6700\u5f8c\u306b\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u78ba\u8a8d\u306e\u305f\u3081\u306b\u7c21\u5358\u306a\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e cd example ./xor-autobatch \u30a8\u30e9\u30fc\u306a\u304f\u5b9f\u884c\u3055\u308c\u305f\u5b8c\u4e86\u3067\u3059\uff0e \u306f\u3044\uff0c\u3053\u308c\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u5b8c\u4e86\u3067\u3059\uff0e \u304a\u3064\u304b\u308c\u3055\u307e\u3067\u3057\u305f\uff0e","title":"dynet start documentation in Japanese"},{"location":"#dynet-start-documentation-in-japanese","text":"Quote dynet cpp tutorial slide examples","title":"dynet start documentation in Japanese"},{"location":"#dynet","text":"dynet\u306e\u7d39\u4ecb\u3067\u3059\uff0e qiita\u306e\u8a18\u4e8b\u304b\u3089dynet\u306e\u7d39\u4ecb\u6587\u3092\u5f15\u7528\u3057\u307e\u3059\uff0e \u672c\u8a18\u4e8b\u3067\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u4e00\u3064\u3067\u3042\u308bDyNet\u3092\u7c21\u5358\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u3053\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u7c73\u30ab\u30fc\u30cd\u30ae\u30fc\u30e1\u30ed\u30f3\u5927\u5b66\u306e\u8a00\u8a9e\u6280\u8853\u7814\u7a76\u6240\u304c\u4e2d\u5fc3\u3068\u306a\u3063\u3066\u958b\u767a\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001\u5c11\u3057\u7e01\u304c\u3042\u3063\u3066\u81ea\u5206\u3082\u88cf\u3067\u958b\u767a\u306b\u53c2\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u56fd\u969b\u4f1a\u8b70\u3067\u3042\u308bEMNLP\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u3082\u4f7f\u7528\u3055\u308c\u3066\u3001\u3053\u3061\u3089\u3067\u3082\u5272\u3068\u4eba\u6c17\u304c\u3042\u3063\u305f\u3088\u3046\u3067\u3059\u3002 DyNet\u306e\u7279\u5fb4\u3068\u3057\u3066\u306f: C++\u3068Python\u3067\u4f7f\u7528\u53ef\u80fd \u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30bf\u30eb\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a08\u7b97\u304c\u53ef\u80fd \u30df\u30cb\u30d0\u30c3\u30c1\u306e\u96a0\u853d \u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002 2\u3064\u76ee\u306e\u7279\u5fb4\u3092\u6301\u3064\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u306fPFN\u306eChainer\u306a\u3069\u3082\u6319\u3052\u3089\u308c\u3001\u4e3b\u306brecurrent/recursive neural network\u7cfb\u306e\u5b9f\u88c5\u304c\u5fc5\u8981\u3068\u306a\u308b\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u7b49\u306e\u5206\u91ce\u3067\u529b\u3092\u767a\u63ee\u3057\u307e\u3059\u3002 3\u3064\u76ee\u306e\u7279\u5fb4\u306f\u304b\u306a\u308a\u5f37\u529b\u3067\u3001\u30e6\u30fc\u30b6\u304c\u6295\u3052\u305f\u30c7\u30fc\u30bf\u306b\u5fdc\u3058\u3066\u30df\u30cb\u30d0\u30c3\u30c1\u51e6\u7406\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3001\u30df\u30cb\u30d0\u30c3\u30c1\u51e6\u7406\u306a\u3089\u30d0\u30c3\u30c1\u306e\u5927\u304d\u3055\u7b49\u3092\u81ea\u52d5\u7684\u306b\u5224\u5225\u3059\u308b\u306e\u3067\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8a18\u8ff0\u3059\u308b\u30b3\u30fc\u30c9\u4e0a\u3067\u306f\u305d\u308c\u3092\u533a\u5225\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u8ad6\u6587\u306b\u66f8\u3044\u3066\u3042\u308b\u5f0f\u3092\u305d\u306e\u307e\u307e\u66f8\u3051\u3070\u3001\u57fa\u672c\u7684\u306b\u306f\u81ea\u52d5\u7684\u306b\u30df\u30cb\u30d0\u30c3\u30c1\u51e6\u7406\u306b\u5bfe\u5fdc\u3057\u305f\u30b3\u30fc\u30c9\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002 \u30e1\u30a4\u30f3\u306e\u5bfe\u5fdc\u8a00\u8a9e\u304cC++\u306a\u306e\u3067\u3001\u4f4e\u30ec\u30d9\u30eb\u306a\u9818\u57df\u3067\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u9023\u643a\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u826f\u3044\u9078\u629e\u80a2\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002DyNet\u81ea\u4f53\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304c\u9ad8\u5ea6\u306b\u62bd\u8c61\u5316\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u7bc9\u90e8\u5206\u306e\u898b\u901a\u3057\u306f\u4ed6\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u6bd4\u8f03\u3057\u3066\u3082\u905c\u8272\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002 \u9759\u7684\u306a\u5ba3\u8a00 \u4e00\u822c\u7684\u306a\uff08Tensorflow\u306a\u3069\uff09\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u69cb\u7bc9\u306e\u4ed5\u65b9\uff0e - \u30d5\u30a7\u30fc\u30ba\uff11: \u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u69cb\u9020\u3092\u6c7a\u5b9a - \u30d5\u30a7\u30fc\u30ba\uff12: \u305f\u304f\u3055\u3093\u306e\u30c7\u30fc\u30bf\u3092\u30b0\u30e9\u30d5\u306b\u6295\u5165\u3057\u5b66\u7fd2\u3055\u305b\u308b \u52d5\u7684\u306a\u5ba3\u8a00 \u8a08\u7b97\u30b0\u30e9\u30d5\u306f\u6697\u9ed9\u306e\u3046\u3061\u306b\u524d\u65b9\u8a08\u7b97\u304c\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u6c7a\u5b9a\u3055\u308c\u307e\u3059\uff0e","title":"dynet"},{"location":"#installation-for-ubuntu-1804","text":"","title":"Installation for Ubuntu 18.04"},{"location":"#1-cuda","text":"(\u304a\u4f7f\u3044\u306ePC\u304cnvidia\u306e\u30b0\u30e9\u30dc\u3092\u7a4d\u3093\u3067\u306a\u3044\u5834\u5408\u306f\uff0c\u3053\u306e\u7ae0\u306f\u98db\u3070\u3057\u307e\u3057\u3087\u3046)","title":"1. cuda"},{"location":"#nvidia-driver","text":"\u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u5c0e\u5165\u306b\u969b\u3057\u3066 \u3053\u306e\u30da\u30fc\u30b8 \u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\uff0e \u307e\u305f\uff0c\u30c9\u30e9\u30a4\u30d0\u30fc\u306a\u3069\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306f \u3053\u3053 \u306b\u3042\u308a\u307e\u3059\uff0e \u307e\u305a\uff0c\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\uff0c\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e sudo dpkg -i cuda-repo-ubuntu1804_10.1.105-1_amd64.deb sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub sudo apt update sudo apt install cuda \u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u7d42\u4e86\u3057\u305f\u3089\uff0c\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30d1\u30bd\u30b3\u30f3\u3092\u518d\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\uff0e sudo reboot \u518d\u8d77\u52d5\u306e\u5f8c\uff0c\u554f\u984c\u306a\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u305f\u304b\u3069\u3046\u304b\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\uff0e nvidia-smi \u4e0b\u8a18\u306e\u3088\u3046\u306a\u8868\u793a\u304c\u51fa\u308c\u3070\u6210\u529f\u3067\u3059\uff0e Tue May 7 15:46:06 2019 +-----------------------------------------------------------------------------+ | NVIDIA-SMI 418.56 Driver Version: 418.56 CUDA Version: 10.1 | |-------------------------------+----------------------+----------------------+ | GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC | | Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. | |===============================+======================+======================| | 0 GeForce GTX 108... Off | 00000000:01:00.0 On | N/A | | 23% 29C P8 12W / 250W | 256MiB / 11175MiB | 1% Default | +-------------------------------+----------------------+----------------------+ +-----------------------------------------------------------------------------+ | Processes: GPU Memory | | GPU PID Type Process name Usage | |=============================================================================| | 0 1269 G /usr/lib/xorg/Xorg 162MiB | | 0 1446 G /usr/bin/gnome-shell 90MiB | +-----------------------------------------------------------------------------+","title":"Nvidia driver"},{"location":"#cudnn","text":"\u8a73\u7d30 nvidia\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u5fc5\u8981\u306a\u306e\u3067\u4f5c\u6210\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046. \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30da\u30fc\u30b8 \u306b\u98db\u3093\u3067cuDNN\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u3044\u304f\u3064\u304b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\uff0c cuDNN Runtime Library for Ubuntu18.04 cuDNN Developer Library for Ubuntu18.04 cuDNN Code samples and User Guide for Ubuntu18.04 \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\uff0e sudo dpkg -i libcudnn7_7.5.1.10-1+cuda10.1_amd64.deb sudo dpkg -i libcudnn7-dev_7.5.1.10-1+cuda10.1_amd64.deb sudo dpkg -i libcudnn7-doc_7.5.1.10-1+cuda10.1_amd64.deb \u6b63\u5e38\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b \u8a66\u3057\u306b\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e cp -r /usr/src/cudnn_samples_v7/ $HOME cd $HOME/cudnn_samples_v7/mnistCUDNN make clean make make clean make \u3046\u307e\u304f\u5b9f\u884c\u3067\u304d\u308b\u3068\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e \u79c1\u306e\u74b0\u5883(Geforce GTX1080Ti)\u3067\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3057\u305f\uff0e \u6700\u5f8c\u306b Test passed! \u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308c\u3070\u3046\u307e\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u8a3c\u62e0\u3067\u3059\uff0e cudnnGetVersion() : 7501 , CUDNN_VERSION from cudnn.h : 7501 (7.5.1) Host compiler version : GCC 7.4.0 There are 1 CUDA capable devices on your machine : device 0 : sms 28 Capabilities 6.1, SmClock 1582.0 Mhz, MemSize (Mb) 11175, MemClock 5505.0 Mhz, Ecc=0, boardGroupID=0 Using device 0 Testing single precision Loading image data/one_28x28.pgm Performing forward propagation ... Testing cudnnGetConvolutionForwardAlgorithm ... Fastest algorithm is Algo 1 Testing cudnnFindConvolutionForwardAlgorithm ... ^^^^ CUDNN_STATUS_SUCCESS for Algo 0: 0.066368 time requiring 0 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.077664 time requiring 3464 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.102400 time requiring 57600 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 0.110400 time requiring 2057744 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 5: 0.132096 time requiring 203008 memory Resulting weights from Softmax: 0.0000000 0.9999399 0.0000000 0.0000000 0.0000561 0.0000000 0.0000012 0.0000017 0.0000010 0.0000000 Loading image data/three_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000000 0.0000000 0.9999288 0.0000000 0.0000711 0.0000000 0.0000000 0.0000000 0.0000000 Loading image data/five_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 0.9999820 0.0000154 0.0000000 0.0000012 0.0000006 Result of classification: 1 3 5 Test passed! Testing half precision (math in single precision) Loading image data/one_28x28.pgm Performing forward propagation ... Testing cudnnGetConvolutionForwardAlgorithm ... Fastest algorithm is Algo 1 Testing cudnnFindConvolutionForwardAlgorithm ... ^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.019584 time requiring 3464 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.032768 time requiring 28800 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 0.091136 time requiring 2057744 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 5: 0.092064 time requiring 203008 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 4: 0.094176 time requiring 207360 memory Resulting weights from Softmax: 0.0000001 1.0000000 0.0000001 0.0000000 0.0000563 0.0000001 0.0000012 0.0000017 0.0000010 0.0000001 Loading image data/three_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000714 0.0000000 0.0000000 0.0000000 0.0000000 Loading image data/five_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 1.0000000 0.0000154 0.0000000 0.0000012 0.0000006 Result of classification: 1 3 5 Test passed! \u6700\u5f8c\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u691c\u8a3c\u30c6\u30b9\u30c8\u3067\u4f7f\u7528\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u3082\u3046\u5fc5\u8981\u306a\u3044\u306e\u3067\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\uff0e cd ~/ rm -rf cudnn_samples_v7","title":"cuDNN"},{"location":"#2eigen","text":"(\u304a\u4f7f\u3044\u306ePC\u304cnvidia\u306e\u30b0\u30e9\u30dc\u3092\u7a4d\u3093\u3067\u306a\u3044\u5834\u5408\u306f\uff0c\u3053\u306e\u7ae0\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046) Eigen \u304b\u3089 \u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306eEigen\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fEigen\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u3066\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3061\u307e\u3057\u3087\u3046\uff0e mkdir build_dir cd build_dir cmake ../ sudo make install","title":"2.Eigen"},{"location":"#3-dynet","text":"cuda\u3068eigen\u306e\u4e21\u65b9\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3053\u3068\u304c\u5fc5\u9808\u6761\u4ef6\u3067\u3059\uff0e cuda\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3067\u3082eigen\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e git clone https://github.com/clab/dynet.git cd dynet mkdir build cd build \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304ccuda\u306e\u5834\u5408\u306f\u3053\u3061\u3089 cmake .. -DENABLE_BOOST=ON -DENABLE_CPP_EXAMPLES=ON -DEIGEN3_INCLUDE_DIR=/usr/local/include/eigen3 -DCUDNN_ROOT=/usr/local/cuda/ -DBACKEND=cuda \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304ceigen\u306e\u5834\u5408\u306f\u3053\u3061\u3089 cmake .. -DENABLE_BOOST=ON -DENABLE_CPP_EXAMPLES=ON -DEIGEN3_INCLUDE_DIR=/usr/local/include/eigen3 make -j10 sudo make install \u6700\u5f8c\u306b\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u78ba\u8a8d\u306e\u305f\u3081\u306b\u7c21\u5358\u306a\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e cd example ./xor-autobatch \u30a8\u30e9\u30fc\u306a\u304f\u5b9f\u884c\u3055\u308c\u305f\u5b8c\u4e86\u3067\u3059\uff0e \u306f\u3044\uff0c\u3053\u308c\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u5b8c\u4e86\u3067\u3059\uff0e \u304a\u3064\u304b\u308c\u3055\u307e\u3067\u3057\u305f\uff0e","title":"3. dynet"},{"location":"basic/","text":"\u30d9\u30fc\u30b7\u30c3\u30af\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb \u3053\u3053\u306e\u7ffb\u8a33 \u3069\u306e\u3088\u3046\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u308b\u304b\u306e\u8aac\u660e\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059. (\u4eca\u56de\u306f\u7c21\u5358\u306a\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u7528\u3044\u307e\u3059) \u307e\u305a\u306f\u3058\u3081\u306b\uff0c\u6211\u3005\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u69cb\u9020\u4f53\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\uff0e \u30d1\u30e9\u30e1\u30fc\u30bf\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u305d\u308c\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u305f\u3081\u306e SGD \u30c8\u30ec\u30a4\u30ca\u30fc\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044. ParameterCollection pc; SimpleSGDTrainer trainer(pc); computation graph \u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\uff0e computation graph \u306f\u60c5\u5831\u306e\u6d41\u308c\u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e ComputationGraph cg; 1x3\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30d9\u30af\u30bf\u30fc\u3092\u521d\u671f\u5316\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u305d\u3057\u3066\uff0c computation graph \u306e\u4e00\u90e8\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52a0\u3048\u3066\u304f\u3060\u3055\u3044\uff0e Expression W = parameter(cg, pc.add_parameters({1, 3})); \u56de\u5e30\u306e\u5165\u529b\u3068\u51fa\u529b\u3092\u5b9a\u7fa9\u3059\u308b\u5909\u6570\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u305d\u3057\u3066\uff0c computation graph \u306e\u4e2d\u306b\u305d\u308c\u3089\u3092\u8aad\u307f\u8fbc\u307e\u305b\u3066\u304f\u3060\u3055\u3044\uff0e \u6211\u3005\u306f\u307e\u3060\u5177\u4f53\u7684\u306a\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u7121\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e vector dynet::real x_values(3); Expression x = input(cg, {3}, x_values); dynet::real y_value; Expression y = input(cg, y_value); \u6b21\u306b\uff0c\u5165\u529b\u306b\u91cd\u307f\u30d9\u30af\u30c8\u30eb\u3092\u639b\u3051\u308b\u305f\u3081\u306e\u69cb\u9020\u4f53\u3092\u8a2d\u5b9a\u3057\u307e\u3059\uff0e \u305d\u306e\u5f8c\uff0c\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570(\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30)\u3092\u901a\u3058\u3066\uff0c\u3053\u306e\u51fa\u529b\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e Expression y_pred = logistic(W*x); \u6700\u5f8c\u306b\uff0c\u8aa4\u5dee\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\uff0e \u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f computation graph \u306b\u304a\u3051\u308b\u6700\u5f8c\u306e\u95a2\u6570\u306e\u5024\u304c\u6700\u5c0f\u306b\u306a\u308b\u3088\u3046\u306b\u6700\u9069\u5316\u3055\u308c\u307e\u3059\uff0e Expression l = binary_log_loss(y_pred, y); \u3053\u308c\u3067\uff0c\u6211\u3005\u306fgraph\u306e\u8a2d\u5b9a\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\uff0e \u6211\u3005\u306f\u305d\u306e\u69cb\u9020\u3092\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\uff0e cg.print_graphviz(); \u3055\u3042\uff0c\u4e00\u3064\u306e\u4f8b\u306b\u5bfe\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\uff0e input/outpu\u306b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e x_values = {0.5, 0.3, 0.7}; y_values = 1.0; forward propagate \u306f computation graph \u3092\u901a\u3057\u3066\u5024\u3092\u524d\u306b\u4f1d\u64ad\u3055\u305b\u3066\u3044\u304f\u3053\u3068\u3067\uff0c \u8aa4\u5dee\u95a2\u6570\u306e\u5024 loss \u3092\u8fd4\u3057\u307e\u3059\uff0e dynet::real loss = as_scalar(cg.forward(l)); backward propagate \u306f\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e \u305d\u3057\u3066\uff0c ParameterCollection \u69cb\u9020\u4f53\u306e\u4e2d\u306b\u3042\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e cg.backward(l); trainer.update \u306f ParameterCollection \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u307e\u3059\uff0e \u3053\u306e ParameterCollection \u306f trainer \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3057\u305f\u3082\u306e\u3067\u3059\uff0e \u3053\u3053\u3067\u306e1.0\u306f\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a1\u30af\u30bf\u30fc\u3068\u3044\u3044\uff0c\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u30b5\u30a4\u30ba\u3092\u6211\u3005\u304c\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\uff0e trainer.update(); \u3053\u308c\u306f\u3068\u3066\u3082\u7c21\u5358\u306a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067 memory initialization , reading/writing parameter collection , recurrent/LSTM network , \u3082\u3057\u304f\u306f\uff0c\u95a2\u6570\u306b\u30d0\u30a4\u30a2\u30b9\u3092\u52a0\u3048\u308b\u3053\u3068\u306b\u89e6\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u306b\u6c17\u3092\u3064\u3051\u3066\u304f\u3060\u3055\u3044\uff0e \u3069\u306e\u3088\u3046\u306bDynet\u3092\u4f7f\u7528\u3059\u308c\u3070\u3044\u3044\u304b\u3092\u77e5\u308b\u30d9\u30b9\u30c8\u306a\u65b9\u6cd5\u306f example \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u898b\u308b\u3053\u3068\u3067\u3059\uff0e \u7279\u306b\u6700\u3082\u7c21\u5358\u306a xor \u304b\u3089\u59cb\u3081\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\uff0e","title":"\u30d9\u30fc\u30b7\u30c3\u30af\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb"},{"location":"basic/#_1","text":"\u3053\u3053\u306e\u7ffb\u8a33 \u3069\u306e\u3088\u3046\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u308b\u304b\u306e\u8aac\u660e\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059. (\u4eca\u56de\u306f\u7c21\u5358\u306a\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u7528\u3044\u307e\u3059) \u307e\u305a\u306f\u3058\u3081\u306b\uff0c\u6211\u3005\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u69cb\u9020\u4f53\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\uff0e \u30d1\u30e9\u30e1\u30fc\u30bf\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u305d\u308c\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u305f\u3081\u306e SGD \u30c8\u30ec\u30a4\u30ca\u30fc\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044. ParameterCollection pc; SimpleSGDTrainer trainer(pc); computation graph \u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\uff0e computation graph \u306f\u60c5\u5831\u306e\u6d41\u308c\u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e ComputationGraph cg; 1x3\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30d9\u30af\u30bf\u30fc\u3092\u521d\u671f\u5316\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u305d\u3057\u3066\uff0c computation graph \u306e\u4e00\u90e8\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52a0\u3048\u3066\u304f\u3060\u3055\u3044\uff0e Expression W = parameter(cg, pc.add_parameters({1, 3})); \u56de\u5e30\u306e\u5165\u529b\u3068\u51fa\u529b\u3092\u5b9a\u7fa9\u3059\u308b\u5909\u6570\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u305d\u3057\u3066\uff0c computation graph \u306e\u4e2d\u306b\u305d\u308c\u3089\u3092\u8aad\u307f\u8fbc\u307e\u305b\u3066\u304f\u3060\u3055\u3044\uff0e \u6211\u3005\u306f\u307e\u3060\u5177\u4f53\u7684\u306a\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u7121\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e vector dynet::real x_values(3); Expression x = input(cg, {3}, x_values); dynet::real y_value; Expression y = input(cg, y_value); \u6b21\u306b\uff0c\u5165\u529b\u306b\u91cd\u307f\u30d9\u30af\u30c8\u30eb\u3092\u639b\u3051\u308b\u305f\u3081\u306e\u69cb\u9020\u4f53\u3092\u8a2d\u5b9a\u3057\u307e\u3059\uff0e \u305d\u306e\u5f8c\uff0c\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570(\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30)\u3092\u901a\u3058\u3066\uff0c\u3053\u306e\u51fa\u529b\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e Expression y_pred = logistic(W*x); \u6700\u5f8c\u306b\uff0c\u8aa4\u5dee\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\uff0e \u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f computation graph \u306b\u304a\u3051\u308b\u6700\u5f8c\u306e\u95a2\u6570\u306e\u5024\u304c\u6700\u5c0f\u306b\u306a\u308b\u3088\u3046\u306b\u6700\u9069\u5316\u3055\u308c\u307e\u3059\uff0e Expression l = binary_log_loss(y_pred, y); \u3053\u308c\u3067\uff0c\u6211\u3005\u306fgraph\u306e\u8a2d\u5b9a\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\uff0e \u6211\u3005\u306f\u305d\u306e\u69cb\u9020\u3092\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\uff0e cg.print_graphviz(); \u3055\u3042\uff0c\u4e00\u3064\u306e\u4f8b\u306b\u5bfe\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\uff0e input/outpu\u306b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e x_values = {0.5, 0.3, 0.7}; y_values = 1.0; forward propagate \u306f computation graph \u3092\u901a\u3057\u3066\u5024\u3092\u524d\u306b\u4f1d\u64ad\u3055\u305b\u3066\u3044\u304f\u3053\u3068\u3067\uff0c \u8aa4\u5dee\u95a2\u6570\u306e\u5024 loss \u3092\u8fd4\u3057\u307e\u3059\uff0e dynet::real loss = as_scalar(cg.forward(l)); backward propagate \u306f\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e \u305d\u3057\u3066\uff0c ParameterCollection \u69cb\u9020\u4f53\u306e\u4e2d\u306b\u3042\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e cg.backward(l); trainer.update \u306f ParameterCollection \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u307e\u3059\uff0e \u3053\u306e ParameterCollection \u306f trainer \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3057\u305f\u3082\u306e\u3067\u3059\uff0e \u3053\u3053\u3067\u306e1.0\u306f\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a1\u30af\u30bf\u30fc\u3068\u3044\u3044\uff0c\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u30b5\u30a4\u30ba\u3092\u6211\u3005\u304c\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\uff0e trainer.update(); \u3053\u308c\u306f\u3068\u3066\u3082\u7c21\u5358\u306a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067 memory initialization , reading/writing parameter collection , recurrent/LSTM network , \u3082\u3057\u304f\u306f\uff0c\u95a2\u6570\u306b\u30d0\u30a4\u30a2\u30b9\u3092\u52a0\u3048\u308b\u3053\u3068\u306b\u89e6\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u306b\u6c17\u3092\u3064\u3051\u3066\u304f\u3060\u3055\u3044\uff0e \u3069\u306e\u3088\u3046\u306bDynet\u3092\u4f7f\u7528\u3059\u308c\u3070\u3044\u3044\u304b\u3092\u77e5\u308b\u30d9\u30b9\u30c8\u306a\u65b9\u6cd5\u306f example \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u898b\u308b\u3053\u3068\u3067\u3059\uff0e \u7279\u306b\u6700\u3082\u7c21\u5358\u306a xor \u304b\u3089\u59cb\u3081\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\uff0e","title":"\u30d9\u30fc\u30b7\u30c3\u30af\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb"},{"location":"common/","text":"\u4e00\u822c\u7684\u306a\u4f7f\u3044\u65b9 \u521d\u671f\u5316\u30fb\u7247\u4ed8\u3051 \u4f7f\u7528\u3059\u308b\u30e1\u30e2\u30ea\u91cf\u3068\u30c7\u30d0\u30a4\u30b9\u3092\u6700\u521d\u306b\u6307\u5b9a dynet::initialize(); \u6307\u5b9a\u3059\u308b\u305f\u3081\u306b DynetParams \u69cb\u9020\u4f53\u306b\u5fc5\u8981\u306a\u5024\u3092\u30bb\u30c3\u30c8\u3057\u3066\u6e21\u3057\u3066\u3084\u308b params.mem_descriptor = \"2048\" foward-path, backword-path, \u30d1\u30e9\u30e1\u30fc\u30bf\u30672048\u304c3\u7b49\u5206\u3055\u308c\u308b params.random_seed = 0 \uff10\u306a\u3089\u9069\u5f53\u306b\u521d\u671f\u5316 params.weight_decay = 0.0 L2\u6b63\u5247\u5316\u306e\u5f37\u3055, \u672a\u3060\u306bL2\u6b63\u5247\u5316\u306f\u4f7f\u3046\u306e\u304b\uff1f params.shared_parameters = false \u30d1\u30e9\u30e1\u30fc\u30bf\u3092shared memory\u4e0a\u306b\u7f6e\u304f\u304b\u3069\u3046\u304b \u4e0b\u8a18\u306fcuda\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306e\u307f\u8a2d\u5b9a \u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u30e1\u30e2\u30ea\u306b\u4f59\u88d5\u304c\u3042\u308bGPU\u3092\u52dd\u624b\u306b\uff11\u500b\u9078\u3093\u3067\u4f7f\u7528\u3059\u308b params.ngpus_requested = false; params.ids_requested = false; params.requested_gpus = -1; const unsigned int MAX_GPUS = 1024; //\u9069\u5f53\u306b\u5927\u304d\u306a\u5024\uff0c\u633f\u3057\u3066\u3042\u308bGPU\u306e\u679a\u6570\u4ee5\u4e0a\u306e\u5024\u306b\u3059\u308c\u3070\u3088\u3044 params.gpus_mask = std::vector int (MAX_GPUS, 0); \u7528\u8a9e\u306e\u89e3\u8aac \u4e3b\u306a\u30d7\u30ec\u30a4\u30e4\u30fc Computation Graph : \u8a08\u7b97\u30b0\u30e9\u30d5 Expressions (\u8a08\u7b97\u30b0\u30e9\u30d5\u5185\u306e\u30ce\u30fc\u30c9\u306e\u3053\u3068) : \u5f0f Parameters : \u30d1\u30e9\u30e1\u30fc\u30bf Model (\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u96c6\u5408\u306e\u3053\u3068\uff09 : \u30e2\u30c7\u30eb Trainer : \u30c8\u30ec\u30fc\u30ca\u30fc Computation Graph and Expression \u57fa\u672c\u7684\u306aExpression\uff08\u30ce\u30fc\u30c9\uff09\u3092\u4f5c\u6210\u3059\u308b \u305d\u308c\u3089\uff08\u30ce\u30fc\u30c9\uff09\u3092operator\u3092\u4f7f\u3063\u3066\u7d44\u307f\u5408\u308f\u305b\u308b Model and Parameters Parameters\u306e\u5b9f\u614b\u306fvector\u3084matrix\u3067\uff0c\u6700\u9069\u5316\u3092\u65bd\u3055\u308c\u308b\u5909\u6570\u3067\u3059 Model\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u96c6\u5408\u3067\u3059 Parameters\u306fComputation graph\u3088\u308a\u5bff\u547d\u304c\u9577\u3044 const int HIDDEN_SIZE = 8; dynet::ParameterCollection model; // Create parameter dynet::Parameter p_W = model.add_parameters({HIDDEN_SIZE, 2}); // Convert params to expression(node) and add to the graph dynet::Expression W = dynet::parameter(cg, p_W); Parameter Initialization dyent::Parameter p_W = model.add_parameters({HIDDEN_SIZE, 2}, dynet::GlorotInitializer()); dyent::Parameter p_W = model.add_parameters({HIDDEN_SIZE, 2}, dynet::NormalInitializer(0,1)); Trainer and backdrop Trainer\u3092model(ParameterCollection)\u3092\u4e0e\u3048\u3066\u521d\u671f\u5316\u3057\u3066\u304f\u3060\u3055\u3044 ComputationGraph.backward()\u3092\u30b9\u30ab\u30e9\u30fc\u30ce\u30fc\u30c9\u304b\u3089\u5b9f\u884c\u3057\u52fe\u914d\u3092\u6c42\u3081\u3066\u304f\u3060\u3055\u3044\uff0e Trainer.update()\u3092\u8aad\u307f\u51fa\u3059\u3053\u3068\u3067model\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52fe\u914d\u3092\u7528\u3044\u3066\u66f4\u65b0\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Training with DyNet model(ParameterCollection)\u3092\u4f5c\u6210\u3057\uff0cParameters\u3092\u52a0\u3048\uff0cTrainer\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044 \u305d\u308c\u305e\u308c\u306e\u8a13\u7df4\u30b5\u30f3\u30d7\u30eb\u3054\u3068\u306b \u8aa4\u5dee\u3092\u6c42\u3081\u308b\u305f\u3081\u306bComputationGraph\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044 \u524d\u65b9\u8a08\u7b97\u3092\u3057\u3066\u304f\u3060\u3055\u3044\uff08\u8aa4\u5dee\u3092\u8a08\u7b97\uff09 \u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u3092\u8a08\u7b97\u3057\u3066\u304f\u3060\u3055\u3044\uff08\u52fe\u914d\u3092\u8a08\u7b97\uff09 \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0","title":"\u4e00\u822c\u7684\u306a\u4f7f\u3044\u65b9"},{"location":"common/#_1","text":"","title":"\u4e00\u822c\u7684\u306a\u4f7f\u3044\u65b9"},{"location":"common/#_2","text":"\u4f7f\u7528\u3059\u308b\u30e1\u30e2\u30ea\u91cf\u3068\u30c7\u30d0\u30a4\u30b9\u3092\u6700\u521d\u306b\u6307\u5b9a dynet::initialize(); \u6307\u5b9a\u3059\u308b\u305f\u3081\u306b DynetParams \u69cb\u9020\u4f53\u306b\u5fc5\u8981\u306a\u5024\u3092\u30bb\u30c3\u30c8\u3057\u3066\u6e21\u3057\u3066\u3084\u308b params.mem_descriptor = \"2048\" foward-path, backword-path, \u30d1\u30e9\u30e1\u30fc\u30bf\u30672048\u304c3\u7b49\u5206\u3055\u308c\u308b params.random_seed = 0 \uff10\u306a\u3089\u9069\u5f53\u306b\u521d\u671f\u5316 params.weight_decay = 0.0 L2\u6b63\u5247\u5316\u306e\u5f37\u3055, \u672a\u3060\u306bL2\u6b63\u5247\u5316\u306f\u4f7f\u3046\u306e\u304b\uff1f params.shared_parameters = false \u30d1\u30e9\u30e1\u30fc\u30bf\u3092shared memory\u4e0a\u306b\u7f6e\u304f\u304b\u3069\u3046\u304b \u4e0b\u8a18\u306fcuda\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306e\u307f\u8a2d\u5b9a \u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u30e1\u30e2\u30ea\u306b\u4f59\u88d5\u304c\u3042\u308bGPU\u3092\u52dd\u624b\u306b\uff11\u500b\u9078\u3093\u3067\u4f7f\u7528\u3059\u308b params.ngpus_requested = false; params.ids_requested = false; params.requested_gpus = -1; const unsigned int MAX_GPUS = 1024; //\u9069\u5f53\u306b\u5927\u304d\u306a\u5024\uff0c\u633f\u3057\u3066\u3042\u308bGPU\u306e\u679a\u6570\u4ee5\u4e0a\u306e\u5024\u306b\u3059\u308c\u3070\u3088\u3044 params.gpus_mask = std::vector int (MAX_GPUS, 0);","title":"\u521d\u671f\u5316\u30fb\u7247\u4ed8\u3051"},{"location":"common/#_3","text":"","title":"\u7528\u8a9e\u306e\u89e3\u8aac"},{"location":"common/#_4","text":"Computation Graph : \u8a08\u7b97\u30b0\u30e9\u30d5 Expressions (\u8a08\u7b97\u30b0\u30e9\u30d5\u5185\u306e\u30ce\u30fc\u30c9\u306e\u3053\u3068) : \u5f0f Parameters : \u30d1\u30e9\u30e1\u30fc\u30bf Model (\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u96c6\u5408\u306e\u3053\u3068\uff09 : \u30e2\u30c7\u30eb Trainer : \u30c8\u30ec\u30fc\u30ca\u30fc","title":"\u4e3b\u306a\u30d7\u30ec\u30a4\u30e4\u30fc"},{"location":"common/#computation-graph-and-expression","text":"\u57fa\u672c\u7684\u306aExpression\uff08\u30ce\u30fc\u30c9\uff09\u3092\u4f5c\u6210\u3059\u308b \u305d\u308c\u3089\uff08\u30ce\u30fc\u30c9\uff09\u3092operator\u3092\u4f7f\u3063\u3066\u7d44\u307f\u5408\u308f\u305b\u308b","title":"Computation Graph and Expression"},{"location":"common/#model-and-parameters","text":"Parameters\u306e\u5b9f\u614b\u306fvector\u3084matrix\u3067\uff0c\u6700\u9069\u5316\u3092\u65bd\u3055\u308c\u308b\u5909\u6570\u3067\u3059 Model\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u96c6\u5408\u3067\u3059 Parameters\u306fComputation graph\u3088\u308a\u5bff\u547d\u304c\u9577\u3044 const int HIDDEN_SIZE = 8; dynet::ParameterCollection model; // Create parameter dynet::Parameter p_W = model.add_parameters({HIDDEN_SIZE, 2}); // Convert params to expression(node) and add to the graph dynet::Expression W = dynet::parameter(cg, p_W);","title":"Model and Parameters"},{"location":"common/#parameter-initialization","text":"dyent::Parameter p_W = model.add_parameters({HIDDEN_SIZE, 2}, dynet::GlorotInitializer()); dyent::Parameter p_W = model.add_parameters({HIDDEN_SIZE, 2}, dynet::NormalInitializer(0,1));","title":"Parameter Initialization"},{"location":"common/#trainer-and-backdrop","text":"Trainer\u3092model(ParameterCollection)\u3092\u4e0e\u3048\u3066\u521d\u671f\u5316\u3057\u3066\u304f\u3060\u3055\u3044 ComputationGraph.backward()\u3092\u30b9\u30ab\u30e9\u30fc\u30ce\u30fc\u30c9\u304b\u3089\u5b9f\u884c\u3057\u52fe\u914d\u3092\u6c42\u3081\u3066\u304f\u3060\u3055\u3044\uff0e Trainer.update()\u3092\u8aad\u307f\u51fa\u3059\u3053\u3068\u3067model\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52fe\u914d\u3092\u7528\u3044\u3066\u66f4\u65b0\u3057\u3066\u304f\u3060\u3055\u3044\uff0e","title":"Trainer and backdrop"},{"location":"common/#training-with-dynet","text":"model(ParameterCollection)\u3092\u4f5c\u6210\u3057\uff0cParameters\u3092\u52a0\u3048\uff0cTrainer\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044 \u305d\u308c\u305e\u308c\u306e\u8a13\u7df4\u30b5\u30f3\u30d7\u30eb\u3054\u3068\u306b \u8aa4\u5dee\u3092\u6c42\u3081\u308b\u305f\u3081\u306bComputationGraph\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044 \u524d\u65b9\u8a08\u7b97\u3092\u3057\u3066\u304f\u3060\u3055\u3044\uff08\u8aa4\u5dee\u3092\u8a08\u7b97\uff09 \u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u3092\u8a08\u7b97\u3057\u3066\u304f\u3060\u3055\u3044\uff08\u52fe\u914d\u3092\u8a08\u7b97\uff09 \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0","title":"Training with DyNet"},{"location":"iris/","text":"iris dynet\u3067iris\u306e\u5206\u985e\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046 iris\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f \u3053\u3053 \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\uff0e iris\u306f\u30a2\u30e4\u30e1\u306e\u5206\u985e\u3092\u884c\u3046\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\uff0e \uff14\u3064\u306e\u60c5\u5831\u304b\u3089\u30a2\u30e4\u30e1\u306e\u7a2e\u985e\u3092\u5b66\u7fd2\u30fb\u63a8\u6e2c\u3059\u308b\u3082\u306e\u306b\u306a\u308a\u307e\u3059\uff0e \u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u306e\u305f\u3081\u306e\u6700\u3082\u3088\u304f\u77e5\u3089\u308c\u305f\u3082\u306e\u3067\u3059\uff0e \u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\uff13\u3064\u306e\u7a2e\u985e\u306e\u30a2\u30e4\u30e1\u306e\u30c7\u30fc\u30bf\u304c\u305d\u308c\u305e\u308c\uff15\uff10\u500b\u305a\u3064\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e \u4e00\u3064\u306e\u30a2\u30e4\u30e1\u306f\u4ed6\u306e\uff12\u3064\u3068\u7dda\u5f62\u5206\u96e2\u53ef\u80fd\u3067\u3059\uff0e 1.\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab 1.1 \u30a2\u30e4\u30e1\u306e\u7a2e\u985e setosa versicolor virginica \u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u304c\uff15\uff10\u500b\u305a\u3064\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e 1.2 \u542b\u307e\u308c\u3066\u3044\u308b\u60c5\u5831 \u30ac\u30af\u7247\uff08sepal)\u306e\u5e45\u30fb\u9577\u3055(cm) \u82b1\u5f01\uff08petal)\u306e\u5e45\u30fb\u9577\u3055(cm) 1.3 \u60c5\u5831\u91cf \u60c5\u5831\u6570:150 \u6b20\u640d\u60c5\u5831:\u7121\u3057 1.4 \u30c7\u30fc\u30bf\u306e\u69cb\u6210 sepal length(cm) sepal width(cm) petal length(cm) petal width(cm) class: Iris Setosa Iris Versicolor Iris Virginica 1.5 \u7d71\u8a08 Min Max Mean Standard deviation Class correlation sepal length 4.3 7.9 5.84 0.83 0.7826 sepal width 2.0 4.4 3.05 0.43 -0.4194 petal length 1.0 6.9 3.76 1.76 0.9490(high!) petal width 0.1 2.5 1.2 0.76 0.9565(high!) 2. \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30a8\u30f3\u30b3\u30fc\u30c9 \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u6587\u5b57\u5217\u3067\u30e9\u30d9\u30eb\u4ed8\u3055\u308c\u3066\u3044\u308b\u306e\u3067\uff0c \u3053\u308c\u3092\u5b66\u7fd2\u3067\u3082\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306bone-hot\u8868\u73fe\u306b\u5909\u63db\uff08\u30a8\u30f3\u30b3\u30fc\u30c9\uff09\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e setosa, versicolor, virginica - 0,0,1 3. \u5b9f\u88c5 \u4eca\u56de\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u69cb\u7bc9\u3057\u307e\u3059\uff0e \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u60c5\u5831\u306f\uff14\u3064\u3042\u308b\u306e\u3067\uff0c\u5165\u529b\u5c64\u306f\uff14\u30ce\u30fc\u30c9\u3068\u306a\u308a\u307e\u3059\uff0e \u307e\u305f\uff0c\u30a2\u30e4\u30e1\u306f\uff13\u7a2e\u985e\u306b\u5206\u985e\u3055\u308c\u308b\u306e\u3067\u51fa\u529b\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u306f\uff13\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e \u6b8b\u308a\u306f\u4e2d\u9593\u5c64\u3092\u6c7a\u5b9a\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\uff0c\u4eca\u56de\u306f\uff11\u5c64\uff0c\uff11\uff16\u30ce\u30fc\u30c9\u3067\u69cb\u6210\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\uff0e \u3053\u306e\uff11\uff16\u30ce\u30fc\u30c9\u306b\u30d0\u30a4\u30a2\u30b9\u30ce\u30fc\u30c9\u306f\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\uff0e\u8a08\u7b97\u3067\u306f\u542b\u307e\u308c\u307e\u3059\u304c\uff0c \u3053\u3053\u3067\u306f\u308f\u304b\u308a\u3084\u3059\u3055\u91cd\u8996\u3067\u7121\u8996\u3057\u307e\u3059\uff0e \u5b9f\u969b\u306f\u30d0\u30a4\u30a2\u30b9\u30ce\u30fc\u30c9\u306f\u3042\u308a\u307e\u3059.\u304b\u3063\u3053\u3088\u3055\u91cd\u8996\u3067\u4e0b\u8a18\u306e\u56f3\u306b\u306a\u3044\u3060\u3051\u3067\u3059\uff0e \u6570\u5f0f \u5404\u5909\u6570\uff08\u30d1\u30e9\u30e1\u30fc\u30bf\uff09\u306e\u30b5\u30a4\u30ba\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\uff0e \\boldsymbol{x} : 4 \\times 1 \\boldsymbol{x} : 4 \\times 1 \\boldsymbol{W^{(1)}} : 16 \\times 4 \\boldsymbol{W^{(1)}} : 16 \\times 4 \\boldsymbol{b^{(1)}} : 16 \\times 1 \\boldsymbol{b^{(1)}} : 16 \\times 1 \\boldsymbol{z^{(1)}} : 16 \\times 1 \\boldsymbol{z^{(1)}} : 16 \\times 1 \\boldsymbol{W^{(2)}} : 3 \\times 16 \\boldsymbol{W^{(2)}} : 3 \\times 16 \\boldsymbol{b^{(2)}} : 3 \\times 1 \\boldsymbol{b^{(2)}} : 3 \\times 1 \\boldsymbol{\\hat{y}} : 3 \\times 1 \\boldsymbol{\\hat{y}} : 3 \\times 1 \u8a08\u7b97\u5f0f\uff08\u5404\u5909\u6570\u306e\u95a2\u4fc2\uff09\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\uff0e \\begin{equation} \\boldsymbol{z^{(1)}} = f^{(1)}( \\boldsymbol{W^{(1)}} \\boldsymbol{x}+\\boldsymbol{b^{(1)}} ) \\end{equation} \\begin{equation} \\boldsymbol{z^{(1)}} = f^{(1)}( \\boldsymbol{W^{(1)}} \\boldsymbol{x}+\\boldsymbol{b^{(1)}} ) \\end{equation} \\boldsymbol{\\hat{y}} = f^{(2)}( \\boldsymbol{W^{(2)}}\\boldsymbol{z^{(1)}}+\\boldsymbol{b^{(2)}} ) \\boldsymbol{\\hat{y}} = f^{(2)}( \\boldsymbol{W^{(2)}}\\boldsymbol{z^{(1)}}+\\boldsymbol{b^{(2)}} ) f^{(1)} = ReLU f^{(1)} = ReLU f^{(2)} = Softmax f^{(2)} = Softmax \u5b9f\u88c5","title":"iris"},{"location":"iris/#iris","text":"dynet\u3067iris\u306e\u5206\u985e\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046 iris\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f \u3053\u3053 \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\uff0e iris\u306f\u30a2\u30e4\u30e1\u306e\u5206\u985e\u3092\u884c\u3046\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\uff0e \uff14\u3064\u306e\u60c5\u5831\u304b\u3089\u30a2\u30e4\u30e1\u306e\u7a2e\u985e\u3092\u5b66\u7fd2\u30fb\u63a8\u6e2c\u3059\u308b\u3082\u306e\u306b\u306a\u308a\u307e\u3059\uff0e \u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u306e\u305f\u3081\u306e\u6700\u3082\u3088\u304f\u77e5\u3089\u308c\u305f\u3082\u306e\u3067\u3059\uff0e \u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\uff13\u3064\u306e\u7a2e\u985e\u306e\u30a2\u30e4\u30e1\u306e\u30c7\u30fc\u30bf\u304c\u305d\u308c\u305e\u308c\uff15\uff10\u500b\u305a\u3064\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e \u4e00\u3064\u306e\u30a2\u30e4\u30e1\u306f\u4ed6\u306e\uff12\u3064\u3068\u7dda\u5f62\u5206\u96e2\u53ef\u80fd\u3067\u3059\uff0e","title":"iris"},{"location":"iris/#1","text":"","title":"1.\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab"},{"location":"iris/#11","text":"setosa versicolor virginica \u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u304c\uff15\uff10\u500b\u305a\u3064\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e","title":"1.1 \u30a2\u30e4\u30e1\u306e\u7a2e\u985e"},{"location":"iris/#12","text":"\u30ac\u30af\u7247\uff08sepal)\u306e\u5e45\u30fb\u9577\u3055(cm) \u82b1\u5f01\uff08petal)\u306e\u5e45\u30fb\u9577\u3055(cm)","title":"1.2 \u542b\u307e\u308c\u3066\u3044\u308b\u60c5\u5831"},{"location":"iris/#13","text":"\u60c5\u5831\u6570:150 \u6b20\u640d\u60c5\u5831:\u7121\u3057","title":"1.3 \u60c5\u5831\u91cf"},{"location":"iris/#14","text":"sepal length(cm) sepal width(cm) petal length(cm) petal width(cm) class: Iris Setosa Iris Versicolor Iris Virginica","title":"1.4 \u30c7\u30fc\u30bf\u306e\u69cb\u6210"},{"location":"iris/#15","text":"Min Max Mean Standard deviation Class correlation sepal length 4.3 7.9 5.84 0.83 0.7826 sepal width 2.0 4.4 3.05 0.43 -0.4194 petal length 1.0 6.9 3.76 1.76 0.9490(high!) petal width 0.1 2.5 1.2 0.76 0.9565(high!)","title":"1.5 \u7d71\u8a08"},{"location":"iris/#2","text":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u6587\u5b57\u5217\u3067\u30e9\u30d9\u30eb\u4ed8\u3055\u308c\u3066\u3044\u308b\u306e\u3067\uff0c \u3053\u308c\u3092\u5b66\u7fd2\u3067\u3082\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306bone-hot\u8868\u73fe\u306b\u5909\u63db\uff08\u30a8\u30f3\u30b3\u30fc\u30c9\uff09\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e setosa, versicolor, virginica - 0,0,1","title":"2. \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30a8\u30f3\u30b3\u30fc\u30c9"},{"location":"iris/#3","text":"\u4eca\u56de\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u69cb\u7bc9\u3057\u307e\u3059\uff0e \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u60c5\u5831\u306f\uff14\u3064\u3042\u308b\u306e\u3067\uff0c\u5165\u529b\u5c64\u306f\uff14\u30ce\u30fc\u30c9\u3068\u306a\u308a\u307e\u3059\uff0e \u307e\u305f\uff0c\u30a2\u30e4\u30e1\u306f\uff13\u7a2e\u985e\u306b\u5206\u985e\u3055\u308c\u308b\u306e\u3067\u51fa\u529b\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u306f\uff13\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e \u6b8b\u308a\u306f\u4e2d\u9593\u5c64\u3092\u6c7a\u5b9a\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\uff0c\u4eca\u56de\u306f\uff11\u5c64\uff0c\uff11\uff16\u30ce\u30fc\u30c9\u3067\u69cb\u6210\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\uff0e \u3053\u306e\uff11\uff16\u30ce\u30fc\u30c9\u306b\u30d0\u30a4\u30a2\u30b9\u30ce\u30fc\u30c9\u306f\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\uff0e\u8a08\u7b97\u3067\u306f\u542b\u307e\u308c\u307e\u3059\u304c\uff0c \u3053\u3053\u3067\u306f\u308f\u304b\u308a\u3084\u3059\u3055\u91cd\u8996\u3067\u7121\u8996\u3057\u307e\u3059\uff0e \u5b9f\u969b\u306f\u30d0\u30a4\u30a2\u30b9\u30ce\u30fc\u30c9\u306f\u3042\u308a\u307e\u3059.\u304b\u3063\u3053\u3088\u3055\u91cd\u8996\u3067\u4e0b\u8a18\u306e\u56f3\u306b\u306a\u3044\u3060\u3051\u3067\u3059\uff0e","title":"3. \u5b9f\u88c5"},{"location":"iris/#_1","text":"\u5404\u5909\u6570\uff08\u30d1\u30e9\u30e1\u30fc\u30bf\uff09\u306e\u30b5\u30a4\u30ba\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\uff0e \\boldsymbol{x} : 4 \\times 1 \\boldsymbol{x} : 4 \\times 1 \\boldsymbol{W^{(1)}} : 16 \\times 4 \\boldsymbol{W^{(1)}} : 16 \\times 4 \\boldsymbol{b^{(1)}} : 16 \\times 1 \\boldsymbol{b^{(1)}} : 16 \\times 1 \\boldsymbol{z^{(1)}} : 16 \\times 1 \\boldsymbol{z^{(1)}} : 16 \\times 1 \\boldsymbol{W^{(2)}} : 3 \\times 16 \\boldsymbol{W^{(2)}} : 3 \\times 16 \\boldsymbol{b^{(2)}} : 3 \\times 1 \\boldsymbol{b^{(2)}} : 3 \\times 1 \\boldsymbol{\\hat{y}} : 3 \\times 1 \\boldsymbol{\\hat{y}} : 3 \\times 1 \u8a08\u7b97\u5f0f\uff08\u5404\u5909\u6570\u306e\u95a2\u4fc2\uff09\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\uff0e \\begin{equation} \\boldsymbol{z^{(1)}} = f^{(1)}( \\boldsymbol{W^{(1)}} \\boldsymbol{x}+\\boldsymbol{b^{(1)}} ) \\end{equation} \\begin{equation} \\boldsymbol{z^{(1)}} = f^{(1)}( \\boldsymbol{W^{(1)}} \\boldsymbol{x}+\\boldsymbol{b^{(1)}} ) \\end{equation} \\boldsymbol{\\hat{y}} = f^{(2)}( \\boldsymbol{W^{(2)}}\\boldsymbol{z^{(1)}}+\\boldsymbol{b^{(2)}} ) \\boldsymbol{\\hat{y}} = f^{(2)}( \\boldsymbol{W^{(2)}}\\boldsymbol{z^{(1)}}+\\boldsymbol{b^{(2)}} ) f^{(1)} = ReLU f^{(1)} = ReLU f^{(2)} = Softmax f^{(2)} = Softmax","title":"\u6570\u5f0f"},{"location":"iris/#_2","text":"","title":"\u5b9f\u88c5"},{"location":"link/","text":"\u30ea\u30f3\u30af \u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8 Galapagos Glog \u624b\u8a08\u7b97\u3067XOR\u3092\u5f97\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c8\uff0e\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u8868\u73fe\u3068\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u3068\u304d\u306e \u7dda\u5f62\u4ee3\u6570\u7684\u306a\u8868\u73fe\u306e\u9055\u3044\u304c\u308f\u304b\u308b\uff0e Easy Copy MathJax MkDocs\u3067\u6570\u5f0f\u3092\u63cf\u753b\u3059\u308b\u3068\u304d\u306bMathJax\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\uff0cvector\u306e\u592a\u6587\u5b57\u306e\u3084\u308a\u65b9 \u3068\u304b\u3053\u3053\u3092\u898b\u308b\u3068\u4fbf\u5229\uff0eMathJax\u306f\u5fae\u5999\u306bLatex\u306e\u8a18\u6cd5\u3068\u7570\u306a\u308b\u306e\u6ce8\u610f\uff0e \u4fbf\u5229\u30c4\u30fc\u30eb NN-SVG \u7c21\u5358\u306b\u304b\u3063\u3053\u3044\u3044\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u56f3\u3092\u4f5c\u6210\u53ef\u80fd\u306a\u30b5\u30a4\u30c8\uff0e FCNN(\u4e00\u822c\u7684\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af)\u306e\u307b\u304b\u306b\uff0cLeNet style\u3084AlexNet style\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\uff0e \u52c9\u5f37\u30b5\u30a4\u30c8 couresera coruesera\u306e\u6a5f\u68b0\u5b66\u7fd2\u306e\u8cc7\u6599\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c8 \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 \u57fa\u672c Iris \u8a00\u308f\u305a\u3068\u3057\u308c\u305firis\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 \u307e\u3068\u3081 UCI Machine Learning Repository \u4e16\u754c\u4e00\u6709\u540d\u306a\uff1fUCLA\u306e\u6a5f\u68b0\u5b66\u7fd2\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u30ec\u30dd\u30b8\u30c8\u30ea\uff0eiris\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u304b\u3082 \u3053\u3053\u306b\u542b\u307e\u308c\u308b\uff0e [24\u500b\u63b2\u8f09]\u6a5f\u68b0\u5b66\u7fd2\u3067\u4f7f\u3048\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4e00\u6319\u52e2\u63c3\u3044 \u6709\u540d\u306a\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30ea\u30f3\u30af\u96c6.\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u307e\u3068\u3081\u7cfb\uff0c\u52d5\u753b\uff0c\u753b\u50cf\uff0c\u9854\uff0c\u533b\u7642\uff0c\u70ba\u66ff\u30fb\u682a\u30fb\u91d1\u878d\u306a\u3069\u304c\u3042\u308b.","title":"\u30ea\u30f3\u30af"},{"location":"link/#_1","text":"","title":"\u30ea\u30f3\u30af"},{"location":"link/#_2","text":"Galapagos Glog \u624b\u8a08\u7b97\u3067XOR\u3092\u5f97\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c8\uff0e\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u8868\u73fe\u3068\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u3068\u304d\u306e \u7dda\u5f62\u4ee3\u6570\u7684\u306a\u8868\u73fe\u306e\u9055\u3044\u304c\u308f\u304b\u308b\uff0e Easy Copy MathJax MkDocs\u3067\u6570\u5f0f\u3092\u63cf\u753b\u3059\u308b\u3068\u304d\u306bMathJax\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\uff0cvector\u306e\u592a\u6587\u5b57\u306e\u3084\u308a\u65b9 \u3068\u304b\u3053\u3053\u3092\u898b\u308b\u3068\u4fbf\u5229\uff0eMathJax\u306f\u5fae\u5999\u306bLatex\u306e\u8a18\u6cd5\u3068\u7570\u306a\u308b\u306e\u6ce8\u610f\uff0e","title":"\u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8"},{"location":"link/#_3","text":"NN-SVG \u7c21\u5358\u306b\u304b\u3063\u3053\u3044\u3044\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u56f3\u3092\u4f5c\u6210\u53ef\u80fd\u306a\u30b5\u30a4\u30c8\uff0e FCNN(\u4e00\u822c\u7684\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af)\u306e\u307b\u304b\u306b\uff0cLeNet style\u3084AlexNet style\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\uff0e","title":"\u4fbf\u5229\u30c4\u30fc\u30eb"},{"location":"link/#_4","text":"couresera coruesera\u306e\u6a5f\u68b0\u5b66\u7fd2\u306e\u8cc7\u6599\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c8","title":"\u52c9\u5f37\u30b5\u30a4\u30c8"},{"location":"link/#_5","text":"","title":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8"},{"location":"link/#_6","text":"Iris \u8a00\u308f\u305a\u3068\u3057\u308c\u305firis\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8","title":"\u57fa\u672c"},{"location":"link/#_7","text":"UCI Machine Learning Repository \u4e16\u754c\u4e00\u6709\u540d\u306a\uff1fUCLA\u306e\u6a5f\u68b0\u5b66\u7fd2\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u30ec\u30dd\u30b8\u30c8\u30ea\uff0eiris\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u304b\u3082 \u3053\u3053\u306b\u542b\u307e\u308c\u308b\uff0e [24\u500b\u63b2\u8f09]\u6a5f\u68b0\u5b66\u7fd2\u3067\u4f7f\u3048\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4e00\u6319\u52e2\u63c3\u3044 \u6709\u540d\u306a\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30ea\u30f3\u30af\u96c6.\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u307e\u3068\u3081\u7cfb\uff0c\u52d5\u753b\uff0c\u753b\u50cf\uff0c\u9854\uff0c\u533b\u7642\uff0c\u70ba\u66ff\u30fb\u682a\u30fb\u91d1\u878d\u306a\u3069\u304c\u3042\u308b.","title":"\u307e\u3068\u3081"},{"location":"qiita/","text":"Qiita DyNet\u306e\u4f5c\u8005\u306e\uff11\u4eba\u3067\u3042\u308bodashi_t\u3055\u3093\u304c\u5165\u9580\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\uff0e DyNet\u306e\u4f7f\u3044\u304b\u305f\u304c\u4e01\u5be7\u306b\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\uff0e \u305c\u3072\u6700\u521d\u306e\u4e00\u6b69\u3068\u3057\u3066\u5165\u9580\u8a18\u4e8b\u3092\u8aad\u307f\u307e\u3057\u3087\u3046\uff0e \u5165\u9580\u8a18\u4e8b","title":"Qiita"},{"location":"qiita/#qiita","text":"DyNet\u306e\u4f5c\u8005\u306e\uff11\u4eba\u3067\u3042\u308bodashi_t\u3055\u3093\u304c\u5165\u9580\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\uff0e DyNet\u306e\u4f7f\u3044\u304b\u305f\u304c\u4e01\u5be7\u306b\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\uff0e \u305c\u3072\u6700\u521d\u306e\u4e00\u6b69\u3068\u3057\u3066\u5165\u9580\u8a18\u4e8b\u3092\u8aad\u307f\u307e\u3057\u3087\u3046\uff0e \u5165\u9580\u8a18\u4e8b","title":"Qiita"},{"location":"reference/","text":"API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 Quote API Reference Core functionalities Computation Graph ComputationGraph \u306fdynet\u306e\u4e3b\u529b\u3067\u3059\uff0e Computation graph \u306f\u8a08\u7b97\u3092\u30b7\u30f3\u30dc\u30eb\u7684\u306b\u8868\u73fe\u3057\u307e\u3059\uff0e\u305d\u3057\u3066\u305d\u306e\u8a08\u7b97\u306f\u9045\u5ef6\u8a55\u4fa1\u3055\u308c\u307e\u3059\uff0e \u3064\u307e\u308a\uff0c\u8a08\u7b97\u306f\u30e6\u30fc\u30b6\u30fc\u304c\u967d\u306b\u305d\u308c\u3092\u547d\u4ee4\u3057\u305f\u3068\u304d\u306b\u3060\u3051\u5b9f\u884c\u3055\u308c\u307e\u3059( forward \u8a08\u7b97\u3092\u30c8\u30ea\u30ac\u30fc\u3068\u3057\u3066). \u30b9\u30ab\u30e9\u30fc\u5024(\u4f8b\u3048\u3070\uff0closs value\u306a\u3069)\u3092\u8a55\u4fa1\u3059\u308b\u305f\u3081\u306e Expression \u306f backword \u8a08\u7b97\u3092\u30c8\u30ea\u30ac\u30fc \u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u95a2\u3057\u3066\u52fe\u914d\u304c\u8a08\u7b97\u3055\u308c\u307e\u3059\uff0e int dynet::get_number_of_active_graph() \u6709\u52b9\u306a\u30b0\u30e9\u30d5\u306e\u6570\u3092\u5f97\u308b\uff0e \u3053\u308c\u306f\uff10\u304b\uff11\u3067\u3059\uff0e\uff11\u4ee5\u4e0a\u306e\u30b0\u30e9\u30d5\u3092\u540c\u6642\u306b\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\uff0e Return \u6709\u52b9\u306a\u30b0\u30e9\u30d5\u306e\u6570 unsigned dynet::get_current_graph_id() \u73fe\u5728\u6709\u52b9\u306a\u30b0\u30e9\u30d5\u306eid\u3092\u5f97\u307e\u3059\uff0e \u3053\u308c\u306f\u30b0\u30e9\u30d5\u304c\u53e4\u304f\u306a\u3063\u305f(stale)\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\uff0e Return \u73fe\u5728\u306e\u30b0\u30e9\u30d5\u306eID struct ComputationGraph #include dynet.h \u30ce\u30fc\u30c9\u304c forward \u3068 backword \u306e\u4e2d\u9593\u5024\u3092\u8868\u3057\uff0c\u30a8\u30c3\u30b8\u304c\u591a\u5909\u6570\u95a2\u6570\u3092\u8868\u3059\u8a08\u7b97\u30b0\u30e9\u30d5 \u3053\u306e\u4e8b\u5b9f\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306b\u95a2\u6570\u306f\u8907\u6570\u306e\u5f15\u6570\u3092\u53d6\u308b\u3067\u3057\u3087\u3046\uff0e\u307e\u305f\uff0c\u30a8\u30c3\u30b8\u306f\uff11\u3064\u306ehead\u3068 \uff10\uff0c\uff11\uff0c\uff12\uff0c\u3082\u3057\u304f\u306f\u305d\u308c\u4ee5\u4e0a\u306etail\u3092\u6301\u3061\u307e\u3059. \u6709\u5411\u30b0\u30e9\u30d5\u306b\u304a\u3051\u308bhead\u3068tail (\u5b9a\u6570\uff0c\u5165\u529b\uff0c\u307e\u305f\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5f15\u6570\u304c\uff10\u306e\u95a2\u6570\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u307e\u3059\uff0e) \u4f8b\uff1a z=f(x,y) z=f(x,y) \u3068\u3044\u3046\u95a2\u6570\u304c\u4e0e\u3048\u3089\u305f\uff0cx,z\u3068y\u306f\u30ce\u30fc\u30c9\u3067\u3042\u308a\uff0c\u305d\u3057\u3066z\u30ce\u30fc\u30c9\u3092\u6307\u3057\u793a\u3059 f\u3092\u8868\u3059\u30a8\u30c3\u30b8\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3068\uff0cx\u3068y\u306f\u30a8\u30c3\u30b8\u306etail\u3067\u3059\uff0e\u3042\u306a\u305f\u306f ComputationGraph \u306e backword \u4ee5\u5916\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u4f7f\u7528\u3092\u5fc5\u8981\u3068\u3059\u3079\u304d\u3067\u306f\u306a\u3044\uff0e\u306a\u305c\u306a\u3089\u305d\u308c\u3089\u306e\u6b86\u3069\u306f Expression \u30af\u30e9\u30b9\u304b\u3089\u76f4\u63a5\u5229\u7528\u53ef\u80fd\u3067\u3042\u308b\u305f\u3081\uff0e Public Functions ComputaionGraph() \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf VariableIndex add_input(real s, Device *device) \u30b9\u30ab\u30e9\u5024\u306e\u5165\u529b\u3092\u52a0\u3048\u308b. \u8a08\u7b97\u30b0\u30e9\u30d5\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304b\u3089\u5165\u529b\u3092\u3082\u3089\u3044\uff0c\u305d\u308c\u3092\u8a08\u7b97\u306b\u5229\u7528\u3059\u308b\uff0e Return \u4f5c\u3089\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters s: \u5b9f\u6570 device: \u5165\u529b\u5024\u304c\u304a\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9 VariableIndex add_input(const Dim d, const std::vector data, Device *device) \u8907\u6570\u6b21\u5143\u306e\u5165\u529b\u3092\u52a0\u3048\u308b \u3053\u306e\u8a08\u7b97\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304b\u3089\u5165\u529b\u3092\u53d7\u53d6\uff0c\u305d\u308c\u3089\u3092\u8a08\u7b97\u306b\u5229\u7528\u3059\u308b\uff0e Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters d: \u6240\u671b\u306e\u5165\u529b\u306e\u5f62 data: \u5165\u529b\u30c7\u30fc\u30bf(1\u6b21\u5143\u914d\u5217\u3068\u3057\u3066\u306e\uff09 data: \u305d\u308c\u305e\u308c\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3057\u305f\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8 device: \u5165\u529b\u30c7\u30fc\u30bf\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9 VariableIndex add_input(const Dim d, const std::vector pdata, Device device) \u8907\u6570\u6b21\u5143\u306e\u5165\u529b\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u52a0\u3048\u308b. \u8a08\u7b97\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u30e6\u30fc\u30b6\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304b\u3089\u5165\u529b\u3092\u53d7\u53d6\u308a\uff0c\u305d\u308c\u3089\u3092\u8a08\u7b97\u306b\u5229\u7528\u3059\u308b\uff0e Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters d: \u6240\u671b\u306e\u5165\u529b\u306e\u5f62 pdata: \u5165\u529b\u30c7\u30fc\u30bf\u3078\u306e\u30dd\u30a4\u30f3\u30bf\uff08\uff11\u6b21\u5143\u914d\u5217\u3068\u3057\u3066\u306e\uff09 device: \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9 VariableIndex add_input(const Dim d, const std::vector ids, const std::vector data, Device* device float defdata=0.f) \u30b9\u30d1\u30fc\u30b9\u306a\u5165\u529b\u3092\u52a0\u3048\u308b \u8a08\u7b97\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u30e6\u30fc\u30b6\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304b\u3089\u5165\u529b\u3092\u53d7\u53d6\u308a\uff0c\u305d\u308c\u3089\u3092\u8a08\u7b97\u306b\u5229\u7528\u3059\u308b\uff0e \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u4f7f\u3063\u3066,\u8a08\u7b97\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3078\u306e\u5165\u529b\u306f\u30b9\u30d1\u30fc\u30b9\u914d\u5217\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u8868\u73fe\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u3078\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters d: \u6240\u671b\u306e\u5165\u529b\u306e\u5f62 ids: \u66f4\u65b0\u3059\u308b\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 data: \u305d\u308c\u305e\u308c\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3057\u305f\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8 device: \u5165\u529b\u30c7\u30fc\u30bf\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9 defdata: \u672a\u6307\u5b9a\u306e\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30c7\u30fc\u30bf VariableIndex add_parameters(Parameter p) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52a0\u3048\u308b Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u52a0\u3048\u3089\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf VariableIndex add_parameters(LookupParameter p) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5b8c\u5168\u306a\u884c\u5217\u3092\u52a0\u3048\u308b. Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u52a0\u3048\u3089\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf VariableIndex add_const_parameters(Parameter p) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b \u66f4\u65b0\u3055\u308c\u306a\u3044 \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52a0\u3048\u308b Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u52a0\u3048\u3089\u308c\u308b\u30d1\u30e9\u30e1\u30fc\u30bf VariableIndex add_const_parameters(LookupParameter p) \u66f4\u65b0\u3055\u308c\u306a\u3044 \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5b8c\u5168\u306a\u884c\u5217\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u52a0\u3048\u308b Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u52a0\u3048\u3089\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf VariableIndex add_lookup(LookupParameter p, const unsigned *pindex) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf(\u30b7\u30f3\u30b0\u30eb)\u3092\u52a0\u3048\u308b \u547c\u3073\u51fa\u3057\u5143\u304c\u6240\u6709\u3057\u3066\u3044\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u30e1\u30e2\u30ea\u4f4d\u7f6e\u3092\u6307\u3059\u306b\u306f pindex \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u62fe\u308f\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf pindex: \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u6307\u3057\u793a\u3059\u30dd\u30a4\u30f3\u30bf VariableIndex add_lookup(LookupParameter p, unsinged index) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52a0\u3048\u308b Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u62fe\u308f\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf index: \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u6307\u3059\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 VariableIndex add_lookup(LookupParameter p, const std::vector *pindecs) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf(\u8907\u6570)\u3092\u52a0\u3048\u307e\u3057\u3087\u3046 \u547c\u3073\u51fa\u3057\u5143\u304c\u6240\u6709\u3057\u3066\u3044\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u30e1\u30e2\u30ea\u4f4d\u7f6e\u3092\u6307\u3059\u306b\u306f pindecs \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u62fe\u308f\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf indeces: \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u6307\u3059\u30a4\u30f3\u30c7\u30c3\u30af\u30b9(\u8907\u6570) VariableIndex add_lookup(LookupParameter p, const std::vector indices) \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u52a0\u3048\u307e\u3059. Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u62fe\u308f\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf indeces: \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u6307\u3059\u30a4\u30f3\u30c7\u30c3\u30af\u30b9(\u8907\u6570) Note \u5927\u91cf\u306e\u7701\u7565\u3042\u308a\uff0c\u4f59\u88d5\u304c\u3042\u3063\u305f\u3089\u548c\u8a33\u3057\u307e\u3057\u3087\u3046\u306d\uff0e void clear() \u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u30ea\u30bb\u30c3\u30c8\u3057\uff0c\u65b0\u898f\u306b\u4f5c\u6210\u3055\u308c\u305f\u72b6\u614b\u306b\u3057\u307e\u3059\uff0e void checkpoint() \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e void revert() \u6700\u5f8c\u306e\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3068\u304d\u306e\u72b6\u614b\u306b\u623b\u308a\u307e\u3059\uff0e const Tensor forward(VariableIndex i) \u4e8b\u524d\u306b\u8a08\u7b97\u3055\u308c\u3066\u3044\u308b\u5168\u3066\u306e\u5024\u3092\u7121\u8996\u3057\u3066\u6700\u521d\u306e\u30ce\u30fc\u30c9\u304b\u3089\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9\u3078\u306e\u5b8c\u5168\u306a forward \uff08\u9806\u4f1d\u64ad\uff09\u3092\u5b9f\u884c\uff0e Return \u5b9f\u884c\u3057\u305f\u3042\u3068\u306e\u6700\u5f8c\u306e\u30ce\u30fc\u30c9\u306e\u5024 Parameters i: forword \uff08\u9806\u4f1d\u64ad\uff09\u304c\u8a08\u7b97\u3055\u308c\u305f\u5f8c\u306e\u6700\u65b0\u306e\u30ce\u30fc\u30c9\u306e\u5909\u6570\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 const Tensor incrimental_forward(const Expression last) forward \uff08\u9806\u4f1d\u64ad\uff09\u3092\u6700\u5f8c\u306b\u8a08\u7b97\u3055\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9\u307e\u3067\u8a08\u7b97\u3059\u308b\uff0e \u3082\u3057\u3042\u306a\u305f\u304c\uff0c\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\uff0c\u305d\u3057\u3066\u65b0\u3057\u3044\u90e8\u5206\u306e\u307f\u3092\u8a55\u4fa1\u3057\u305f\u3044\u306a\u3089\uff0c\u305d\u306e\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\uff0e Return \u5b9f\u884c\u3057\u305f\u5f8c\u306e last Expression \u306e\u5024 Parameters last : \u9806\u4f1d\u64ad\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5f0f(Expression) const Tensor incrimental_forward(VariableIndex i) forward \uff08\u9806\u4f1d\u64ad\uff09\u3092\u6700\u5f8c\u306b\u8a08\u7b97\u3055\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9\u307e\u3067\u8a08\u7b97\u3059\u308b\uff0e \u3082\u3057\u3042\u306a\u305f\u304c\uff0c\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\uff0c\u305d\u3057\u3066\u65b0\u3057\u3044\u90e8\u5206\u306e\u307f\u3092\u8a55\u4fa1\u3057\u305f\u3044\u306a\u3089\uff0c\u305d\u306e\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\uff0e Return \u5b9f\u884c\u3057\u305f\u5f8c\u306e\u6700\u5f8c\u306e\u30ce\u30fc\u30c9\u306e\u5024 Parameters last : \u9806\u4f1d\u64ad\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5f0f(Expression) void backward(const Expression last, bool full = false) \u51fa\u529b\u5c64\u304b\u3089\u9806\u3005\u306b\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e full \u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5168\u3066\u306e\u30ce\u30fc\u30c9( true )\u306b\u5bfe\u3057\u3066\u50be\u304d\u3092\u8a08\u7b97\u3059\u308b\u304bnon-constant\u306a\u30ce\u30fc\u30c9\u3060\u3051\u8a08\u7b97\u3092\u884c\u3046\u3079\u304d\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4e0b\u8a18\u306e\u6761\u4ef6\u3092\u9664\u3044\u3066\u306f\u30ce\u30fc\u30c9\u306f\u666e\u904d\u3067\u3059. \u30d1\u30e9\u30e1\u30fc\u30bf\u30ce\u30fc\u30c9 \u30ce\u30fc\u30c9\u304cnon-constant\u30ce\u30fc\u30c9\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b \u3057\u305f\u304c\u3063\u3066\uff0c\u5b9a\u6570\u306e\u95a2\u6570\u3068\u5165\u529b\u306f\u5b9a\u6570\u3068\u3057\u3066\u8003\u3048\u3089\u308c\u307e\u3059\uff0e \u50be\u304d\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f full \u3092 true \u306b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u6642\u306b\u52fe\u914d\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u30ce\u30fc\u30c9\u3092\u7121\u8996\u3059\u308b\u3088\u3046\u306b false \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\uff0e Parameters last : \u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u5143\u306e\u5f0f\uff08 Expression ) full : \u5168\u3066\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u304b\u3069\u3046\u304b\uff08\u5b9a\u6570\u30ce\u30fc\u30c9\u3092\u542b\u3081\u308b\u304b\u3069\u3046\u304b) void backward(VariableIndex i, bool full-false) \u30ce\u30fc\u30c9 i \u304b\u3089\u9006\u4f1d\u64ad\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\uff08\u30ce\u30fc\u30c9i\u306f\u3059\u3067\u306b\u8a55\u4fa1\u3055\u308c\u3066\u3044\u308b\u3068\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059) full \u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5168\u3066\u306e\u30ce\u30fc\u30c9( true )\u306b\u5bfe\u3057\u3066\u50be\u304d\u3092\u8a08\u7b97\u3059\u308b\u304bnon-constant\u306a\u30ce\u30fc\u30c9\u3060\u3051\u8a08\u7b97\u3092\u884c\u3046\u3079\u304d\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4e0b\u8a18\u306e\u6761\u4ef6\u3092\u9664\u3044\u3066\u306f\u30ce\u30fc\u30c9\u306f\u666e\u904d\u3067\u3059. \u30d1\u30e9\u30e1\u30fc\u30bf\u30ce\u30fc\u30c9 \u30ce\u30fc\u30c9\u304cnon-constant\u30ce\u30fc\u30c9\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b \u3057\u305f\u304c\u3063\u3066\uff0c\u5b9a\u6570\u306e\u95a2\u6570\u3068\u5165\u529b\u306f\u5b9a\u6570\u3068\u3057\u3066\u8003\u3048\u3089\u308c\u307e\u3059\uff0e \u50be\u304d\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f full \u3092 true \u306b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u6642\u306b\u52fe\u914d\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u30ce\u30fc\u30c9\u3092\u7121\u8996\u3059\u308b\u3088\u3046\u306b false \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\uff0e Parameters i : \u3069\u306e\u30ce\u30fc\u30c9\u304b\u3089\u8a08\u7b97\u3092\u59cb\u3081\u308b\u304b\u3092\u6307\u3057\u793a\u3059\u30ce\u30fc\u30c9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 full : \u5168\u3066\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u304b\u3069\u3046\u304b\uff08\u5b9a\u6570\u30ce\u30fc\u30c9\u3092\u542b\u3081\u308b\u304b\u3069\u3046\u304b) \u3082\u3057\u3042\u306a\u305f\u304c\u50be\u304d\u3092\u691c\u7d22\u3057\u305f\u3044\u306a\u3089\u3053\u308c\u3092\u6709\u52b9\u306b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u306f\u9006\u4f1d\u64ad\u306b\u95a2\u4fc2\u306a\u3044\u52fe\u914d\u8a08\u7b97\u3092\u7701\u304d\u52b9\u7387\u3092\u9ad8\u3081\u308b\u305f\u3081\u306b, \u3053\u308c\u306f\u30aa\u30d5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0c void print_graphviz() \u30c7\u30d0\u30c3\u30b0\u306e\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059 unsigned get_id() const \u8a08\u7b97\u30b0\u30e9\u30d5\uff08\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\uff09\u306e\u30e6\u30cb\u30fc\u30afID\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e \u3053\u306eID\u306f\u8a08\u7b97\u30b0\u30e9\u30d5\u304c\u5404\u30a8\u30dd\u30c3\u30af\u3054\u3068\u306b\u4f5c\u6210\u3055\u308c\uff0c\uff11\u3065\u3064\u5897\u52a0\u3057\u307e\u3059\uff0e Return \u30b0\u30e9\u30d5ID Nodes \u30ce\u30fc\u30c9\u306f ComputationGraph \u306e\u69cb\u6210\u8981\u7d20\u3067\u3059\uff0e \u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u306f\u30ce\u30fc\u30c9\u3068\u76f4\u63a5\u7684\u306b\u3084\u308a\u53d6\u308a\u3059\u308b\u306e\u3067\u306f\u306a\u304f Expression \u3092\u901a\u3057\u3066 \u3084\u308a\u53d6\u308a\u3092\u884c\u3044\u307e\u3059\uff0e \u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u65b0\u3057\u3044\u64cd\u4f5c\u306e\u5b9f\u88c5\u306e\u305f\u3081\u306b\u306f\u4ee5\u4e0b\u3067\u8aac\u660e\u3059\u308b\u30ce\u30fc\u30c9\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f \u30b5\u30d6\u30af\u30e9\u30b9\u3092\u65b0\u3057\u304f\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e struct Node #include dynet.h \u8a08\u7b97\u30ce\u30fc\u30c9\u306b\u95a2\u3059\u308b\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e:\u5f15\u6570\uff0c\u51fa\u529b\u5024\uff0c\u95a2\u6570\u306b\u95a2\u3059\u308b\u51fa\u529b\u306e\u52fe\u914d\uff0e \u3053\u306e\u30af\u30e9\u30b9\u306f\u65b0\u3057\u3044\u64cd\u4f5c(operation)\u306e\u5b9f\u88c5\u6642\u306b\u306f\u7d99\u627f\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e \u4f8b\u306fnodes.cc\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e\u65b0\u3057\u3044\u5f0f\u306e\u64cd\u4f5c(operation)\u306f Node \u304b\u3089\u4f5c\u6210\u3055\u308c\u307e\u3059\uff0e \u4f8b\u306fexpr.h/expr.cc\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e Public Functions virtual std::string as_string(const std::vector args) const = 0 \u30c7\u30d0\u30c3\u30b0\u306b\u91cd\u8981\u306a\u60c5\u5831\u3092\u8fd4\u3057\u307e\u3059\uff0e\u8a73\u3057\u304f\u306fnodes-conv.cc\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e Return \u30ce\u30fc\u30c9\u306e\u8aac\u660e\uff08string) Parameters args : \u5f15\u6570\u306e\u8aac\u660e(string) Parameters and Model \u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u6700\u9069\u5316\u3055\u308c\u308b\u3079\u304d\u6570\u5024\u3067\u3059\uff0e\u8a08\u7b97\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u81ea\u8eab\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6709\u3059\u308b Torch\u306e\u30b7\u30b9\u30c6\u30e0\u3068\u306f\u5bfe\u8c61\u7684\u306b,dynet\u3067\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u305f\u3060\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\uff0e \u758e\u306a\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\uff0c\uff12\u3064\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30af\u30e9\u30b9\u304c\u5b58\u5728\u3057\u307e\u3059\uff0e Parameters \u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306evector\u3084matrix\u3092\u8868\u73fe\u3057\u307e\u3059\uff0e\uff08\u6700\u7d42\u7684\u306b\u3088\u308a\u9ad8\u3044\u6b21\u5143\u306e\u30c6\u30f3\u30bd\u30eb\uff09 \u3053\u308c\u3089\u306f\u5bc6\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\uff0e LookupParameters \u306fvector\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u8868\u73fe\u3057\uff0c\u96e2\u6563\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u96c6\u5408\u3092\u7d44\u307f\u8fbc\u3080\u305f\u3081\u306b \u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e\u3053\u308c\u3089\u306f\u758e\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\uff0e Tensor Tensor \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306fC++\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3068Eigen\u306eTensors\u30af\u30e9\u30b9\u306e\u9593\u306e\u6a4b\u6e21\u3057\u3092\u3059\u308b\u305f\u3081\u306b \u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e \u5177\u4f53\u7684\u306b\u306f\uff0c\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u306f .value() \u3092Expression\u30af\u30e9\u30b9\u4e0a\u3067\u547c\u3093\u3060\u5f8c\u306b tensor \u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3042\u306a\u305f\u306f\u4ee5\u4e0b\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\uff0c\u305d\u308c\u3089\u306etensor\u3092 float \u3084 float \u306earray\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e\u307e\u305f\uff0c\u305d\u308c\u3089\u306e\u5024\u3092\u4fdd\u5b58\u3084\u8aad\u307f\u8fbc\u3080\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\uff0e \u9006\u306b\uff0c\u30ed\u30fc\u30ec\u30d9\u30eb\u306e\u30ce\u30fc\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u3068\u304d\u306b\u306f(\u4f8b\u3048\u3070\u65b0\u3057\u3044operations\u306e\u305f\u3081\u306b) \u3042\u306a\u305f\u306fEigen\u306etensors\u304b\u3089dynet\u306etensors\u306b\u9006\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u308c\u306f Eigen\u306etensors\u3092\u4f7f\u7528\u3059\u308b\u3068\u52b9\u7387\u7684\u306b\u8a08\u7b97\u3092\u5b9f\u884c\u3067\u304d\u308b\u304b\u3089\u3067\u3059\uff0e Dimensions Dim \u30af\u30e9\u30b9\u306ftensor\u306e\u5f62\u72b6\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u6709\u3057\u3066\u3044\u307e\u3059\uff0e \u6b63\u7d71\u6d3e\u3067\u306a\u3044\u30c7\u30b6\u30a4\u30f3 \u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\uff0cdynet\u306b\u304a\u3044\u3066dimensions\u306f\u4e00\u822c\u7684\u306a\u6b21\u5143+\u30d0\u30c3\u30c1\u306e\u6b21\u5143\u3092 \u8868\u73fe\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u8a08\u7b97\u306e\u900f\u660e\u6027\u3092\u9ad8\u3081\u3066\u3044\u307e\u3059\uff0e Operations Operation Interface \u4e0b\u8a18\u306e\u95a2\u6570\u306fdynet\u306e Expressions \u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e Expression \u306f ComputationGraph \u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3055\u308c\u308b\u69d8\u3005\u306a\u95a2\u6570\u3078\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u3057\u3066 \u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e struct Expression #include expr.h Expression\u306fDynet\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u6210\u3059\u308b\u30d6\u30ed\u30c3\u30af\u3067\u3059\uff0e Public Functions Expression(ComputationGraph pg, VariableIndex i) \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\uff0e\u64cd\u4f5c\uff08Operation)\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3057\u307e\u3059\uff0e Parameters pg : \u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u30dd\u30a4\u30f3\u30bf i : \u5909\u6570\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 const Tensor value() const expression(\u5f0f)\u306e\u5024\u3092\u5f97\u307e\u3059\uff0e \u8a08\u7b97\u30b0\u30e9\u30d5\u304c\u5229\u7528\u53ef\u80fd\u3067\u306a\u3044\u5834\u5408\u306fruntime_error\u304c\u6295\u3052\u3089\u308c\u307e\u3059\uff0e Return \u30c6\u30f3\u30bd\u30eb\u5f62\u5f0f\u306e\u5f0f\u306e\u5024 Note \u30aa\u30ea\u30b8\u30ca\u30eb\u3067\u306fThrows a runtiime_error\u3068\u30bf\u30a4\u30dd\u304c\u3042\u3063\u305f\u306e\u3067\u30de\u30fc\u30d7\u30eb\u3057\u3066\u304a\u304f const Tensor gradient() const \u5f0f(Expression)\u306e\u50be\u304d\u3092\u5f97\u308b \u8a08\u7b97\u30b0\u30e9\u30d5\u304c\u5229\u7528\u53ef\u80fd\u3067\u306a\u3044\u5834\u5408\u306fruntime_error\u304c\u6295\u3052\u3089\u308c\u307e\u3059\uff0e Return \u30c6\u30f3\u30bd\u30eb\u5f62\u5f0f\u306e\u5024 \u3053\u306e\u95a2\u6570\u3092\u547c\u3076\u524d\u306b backword \u3092\u4e0b\u6d41\u306e\u5f0f\u3067\u547c\u3073\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u3082\u3057\uff0c\u5f0f\u304c\u5b9a\u6570\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\u306a\u3089\u3070\uff08\u3053\u308c\u306f\u95a2\u6570\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6709\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u308b\uff09 dynet\u306f\u52b9\u7387\u306e\u305f\u3081\u306b\u305d\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3057\u3088\u3046\u3068\u306f\u3057\u307e\u305b\u3093\uff0e backword \u306e full=true \u5f15\u6570\u3092\u52a0\u3048\u308b\u3053\u3068\u306b\u3088\u3063\u3066 \u624b\u52d5\u3067\u5f37\u5236\u7684\u306b\u8a08\u7b97\u3092\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e const Dim dim() const \u8868\u73fe\u306e\u6b21\u5143\u3092\u6c42\u3081\u307e\u3059\uff0e \u8a08\u7b97\u30b0\u30e9\u30d5\u304c\u5229\u7528\u53ef\u80fd\u3067\u306a\u3044\u5834\u5408\u306fruntime_error\u304c\u6295\u3052\u3089\u308c\u307e\u3059\uff0e Return \u8868\u73fe(expression)\u306e\u6b21\u5143 Input Operation \u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f\u3042\u306a\u305f\u306b\u4f55\u304b\u3092computationgraph\u306b\u6295\u5165\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\uff0e \u305d\u308c\u306f\u7c21\u5358\u306afloat\u578b\u306escalar/vector/matrix\u306e\u5165\u529b\u304b, \u3082\u3057\u304f\u306fdynet parameter object\u304b\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5165\u529b\u306e\u3069\u3061\u3089\u304b\u3067\u3059\uff0e \u305d\u308c\u3089\u306f\u5168\u3066computationgraph\u306b\u5165\u529b\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067 \u3042\u306a\u305f\u306f\u3053\u306egraph\u304c\u3069\u306e\u7279\u5b9a\u306e\u8a08\u7b97\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e Expression dynet::input(ComputationGraph g, real s, Device* devide = dynet::default_device) scalar input \u30b9\u30ab\u30e9\u5024\u3092\u8868\u73fe\u3059\u308bexpression(\u5f0f\uff09\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e Return s\u3092\u8868\u73fe\u3059\u308bExpression Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 s : \u5b9f\u6570 device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::(ComputationGraph g, const real ps, Device device = dynet::default_device) \u66f4\u65b0\u53ef\u80fd\u306a\u30b9\u30ab\u30e9\u30fc\u5024\u306e\u5165\u529b \u30b9\u30ab\u30e9\u5024 *ps \u3092\u8868\u73fe\u3059\u308bExpression(\u5f0f\uff09\u3092\u4f5c\u6210\u3059\u308b\uff0e\u3082\u3057\uff0c *ps \u304c\u5909\u66f4\u3055\u308c\uff0c\u304b\u3064\uff0c\u8a08\u7b97\u30b0\u30e9\u30d5\u304c\u518d\u8a08\u7b97\u3055\u308c\u305f\u5834\u5408\uff0c\u6b21\u306e\u9806\u4f1d\u64ad(forward)\u306f\u305d\u306e\u5024\u3092\u53cd\u6620\u3057\u307e\u3059\uff0e Return *ps \u3092\u8868\u3059Expression\uff08\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 ps : \u5b9f\u6570\u306e\u30dd\u30a4\u30f3\u30bf device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::input(ComputationGraph g, const Dim d, const std::vector data, Device* divice = dynet::default_device) \u30d9\u30af\u30bf\u30fc\uff0c\u884c\u5217\uff0c\u30c6\u30f3\u30bd\u30eb\u306e\u5165\u529b vecotr, matrix, tensor\u306e\u5165\u529b\u3092\u8868\u73fe\u3059\u308bExpression(\u5f0f\uff09\u3092\u4f5c\u6210\u3059\u308b\uff0e \u5165\u529b\u306e\u6b21\u5143\u306f d \u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u308b\uff0e\u3088\u3063\u3066\u4f8b\u3048\u3070\uff0c input(g, {50}, data) : \u3068\u3044\u3046\u5f15\u6570\u306f\u8981\u7d20\u657050\u306e\u30d9\u30af\u30bf\u30fc\u3092\u8868\u3059\uff0e input(g, {50, 30}, data) :\u3068\u3044\u3046 \u5f15\u6570\u306f50x30\u306e\u884c\u5217\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\uff0e\u3053\u308c\u306b\u3088\u308a\u4efb\u610f\u306e\u6b21\u5143\u3092\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u3053\u306e\u95a2\u6570\u306f\u30df\u30cb\u30d0\u30c3\u30c1\u306b\u5206\u5272\u3055\u308c\u305f\u5165\u529b\u306e\u8aad\u307f\u8fbc\u307f\u306b\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\uff0e \u305f\u3068\u3048\u3070\uff0c\uff11\u3064\u306e\u30df\u30cb\u30d0\u30c3\u30c1\u306b\uff11\uff10\u500b\u306e\u6559\u5e2b\u30c7\u30fc\u30bf(\u30b5\u30a4\u30ba\u306f50x30)\u304c\u3042\u3063\u305f\u5834\u5408\uff0c input(g, Dim({50, 30}, 10) data) \u3068\u3059\u308b\u3053\u3068\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\uff0e \u30c7\u30fc\u30bf\u30d9\u30af\u30bf\u30fc data \u306f\u5165\u529b\u3067\u4f7f\u7528\u3055\u308c\u308b\u305f\u3081\u306e\u5024\u3067\u6e80\u305f\u3055\u308c\u3066\u304a\u308a\uff0c \u5217\u512a\u5148\u30d9\u30af\u30c8\u30eb\u5f62\u5f0f\u3067\u3059\uff0e d \u306f\u5168\u3066\u306e\u30c7\u30fc\u30bf\u306e\u500b\u6570\u306e\u639b\u3051\u7b97\u3067\u8868\u3055\u308c\u308b\u8981\u7d20\u306e\u30b5\u30a4\u30ba\u3067\u3059\uff0e Return \u30c7\u30fc\u30bf\u3092\u8868\u73fe\u3057\u305fExpression(\u5f0f) Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 d :\u5165\u529b\u884c\u5217\u306e\u6b21\u5143 data :\u30c7\u30fc\u30bf\u70b9(\u4e00\u3064\u306e\u30c7\u30fc\u30bf\uff09\u306e\u30d9\u30af\u30bf\u30fc device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::input(ComputationGraph g, const Dim d, const std::vector padata, Device device = dynet::default_device) \u66f4\u65b0\u53ef\u80fd\u306avector/matrix/tensor\u306e\u5165\u529b vector\u3092\u53c2\u7167\u6e21\u3057\u3067\u6e21\u3059\u5165\u529b\u3068\u4f3c\u3066\u3044\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u3053\u306e\u95a2\u6570\u306f\u30dd\u30a4\u30f3\u30bf\u6e21\u3057\u3092\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30c7\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\uff0e Return *pdata\u306e\u8868\u73fe\u306eExpression(\u5f0f) Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 d : \u884c\u5217\u306e\u6b21\u5143 pdata : \u30dd\u30a4\u30f3\u30bf\u6e21\u3057\u306e(\u66f4\u65b0\u53ef\u80fd\u306a)\u30c7\u30fc\u30bf\u70b9\u306e\u30d9\u30af\u30c8\u30eb device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::input(ComputationGraph g, const Dim d, const std::vector ids, const std::vector data, float defdata = 0.f, Device* device = dynet::default_device) \u30b9\u30d1\u30fc\u30b9\uff08\u758e\uff09\u306a\u30d9\u30af\u30c8\u30eb\u306e\u5165\u529b \u3053\u306e\u64cd\u4f5c\u306f\u5165\u529b\u3068\u3057\u3066\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u5024\u304c\u30da\u30a2\u306b\u306a\u3063\u305f\u30b9\u30d1\u30fc\u30b9\u884c\u5217\u3092\u53d6\u308a\u307e\u3059\uff0e \u3053\u308c\u306f\u30d9\u30af\u30bf\u30fc\u306e\u53c2\u7167\u6e21\u3057\u306e\u6a19\u6e96\u5165\u529b\u3068\u5168\u304f\u540c\u3058\u3067\u3059\uff0e\u3057\u304b\u3057\uff0c\u6307\u5b9a\u3057\u3066\u3044\u306a\u3044\u5168\u3066\u306e\u5024\u3092 defdata \u306b\u8a2d\u5b9a\u3057\uff0c\u305d\u306e\u4ed6\u306e\u5165\u529b\u306e\u5024\u3092\u9069\u5207\u306b\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Return data\u306e\u8868\u73fe\u306eExpression\uff08\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 d : \u5165\u529b\u884c\u5217\u306e\u6b21\u5143 ids : \u66f4\u65b0\u3059\u308b\u30c7\u30fc\u30bf\u70b9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 defdata : \u672a\u6307\u5b9a\u306e\u30c7\u30fc\u30bf\u70b9\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30c7\u30fc\u30bf device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::one_hot(ComputaionGraph g , unsigned int d, unsigned int idx, Device* device = dynet::default_devaice) \u30ef\u30f3\u30fc\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb \u30ef\u30f3\u30db\u30c3\u30c8\u8868\u73fe\u306e\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e Return \u30c7\u30fc\u30bf\u3092\u8868\u73fe\u3057\u305fExpression(\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 d : \u5165\u529b\u30d9\u30af\u30c8\u30eb\u306e\u6b21\u5143 idx : 1\u3092\u30bb\u30c3\u30c8\u3057\u305f\u3044\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dyent::one_hot(ComputationGraph g, unsigned int d, const std::vector ids, Device* device = dynet::default_device) \u30d0\u30c3\u30c1\u7528\u306e\u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb \u3053\u306e\u64cd\u4f5c\u306f\u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u30d0\u30c3\u30c1\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e ids \u306e\u5927\u304d\u3055\u306b\u3088\u308a\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3092\u6c7a\u5b9a\u3057\u307e\u3059\uff0e Return data\u3092\u8868\u73fe\u3057\u305fExpression Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 d : \u5165\u529b\u30d9\u30af\u30c8\u30eb\u306e\u6b21\u5143 ids : \uff11\u3092\u8a2d\u5b9a\u3057\u305f\u3044\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff0c\u30d0\u30c3\u30c1\u30a8\u30ec\u30e1\u30f3\u30c8\u3054\u3068\u306b\u4e00\u3064 device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::parameter(ComputationGraph g, Parater p) \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e \u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u4e2d\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u53cd\u6620\u3057\u307e\u3059\uff0e Return \u30d1\u30e9\u30e1\u30fc\u30bfp\u3092\u8868\u73fe\u3057\u305fExpression(\u5f0f) Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 p : \u8aad\u307f\u8fbc\u307e\u308c\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 Expression dynet::parameter(ComputationGraph g, LookupParameter lp) \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5b8c\u5168\u306a\u30c6\u30f3\u30bd\u30eb\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e \u901a\u5e38\uff0c\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306f lookup() \u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\uff0e \u3057\u304b\u3057\uff0c\u3044\u304f\u3064\u304b\u306e\u5834\u5408\u3067\u306f\uff0c\u4f55\u3089\u304b\u306e\u7406\u7531\u306b\u3088\u308a\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u5168\u90e8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e \u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u306f\uff0c\u8fd4\u3055\u308c\u305f\u30c6\u30f3\u30bd\u30eb\u306e\u6700\u521d\u306e\u6b21\u5143\u306f lookup() \u95a2\u6570\u3092\u8aad\u3093\u3060\u5834\u5408\u306b\u793a\u3059\u6b21\u5143\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3059\uff0e \u305d\u3057\u3066\uff0c\u6700\u5f8c\u306e\u6b21\u5143\u306e\u30b5\u30a4\u30ba\u306f\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u306e\u30b5\u30a4\u30ba\u3068\u7b49\u3057\u304f\u306a\u308a\u307e\u3059\uff0e Return lp\u304c\u8868\u73fe\u3055\u308c\u305fExpression\uff08\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 lp : \u8aad\u307f\u8fbc\u307e\u308c\u308bLookupParameters\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 Expression dynet::const_parameter(ComputationGraph g, Parameter p) \u5909\u66f4\u4e0d\u53ef\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u304c\u884c\u308f\u308c\u305f\u969b\u306b \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e Return \u5b9a\u6570p\u304c\u8868\u73fe\u3055\u308c\u305fExpression(\u5f0f) Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 p : \u8aad\u307f\u8fbc\u307e\u308c\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 Expression dynet::const_parameter(ComputatinGraph g, LookupParameter lp) \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u4e2d\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u66f4\u65b0\u306b\u3088\u308b\u5909\u66f4 \u3092\u907f\u3051\u308b\u3053\u3068\u304c\u3067\u304d\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5909\u66f4\u3055\u308c\u307e\u305b\u3093\uff0e Return lp\u304c\u8868\u73fe\u3055\u308c\u305fExpression\uff08\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 lp : \u8aad\u307f\u8fbc\u307e\u308c\u308bLookupParameter\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 Expression dynet::lookup(ComputationGraph g, LookupParameter p, unsigned index) \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u3079\u308b\uff0e \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53c2\u7167\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u3079\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u305d\u308c\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u4e2d\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e Return p[index]\u304c\u8868\u73fe\u3055\u308c\u305fExpression(\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 p : \u8aad\u307f\u8fbc\u307e\u308c\u308bLookupParameter\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 index : \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bfp\u306e\u4e2d\u306b\u3042\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Expression dynet::lookup(ComputatinGraph g, LookupParameter p, const std::vector indics) \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u3079\u307e\u3059. \u30df\u30cb\u30d0\u30c3\u30c1\u30d0\u30fc\u30b8\u30e7\u30f3 \u306e lookup() .\u7d50\u679c\u306eExpression(\u5f0f\uff09\u306f\u30df\u30cb\u30d0\u30c3\u30c1\u306b\u5bfe\u5fdc\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\uff0e \u3053\u3053\u3067\u306f\uff0c\u30d0\u30c3\u30c1\u306ei\u756a\u76ee\u306e\u8981\u7d20\u306fi\u756a\u76ee\u306e\u8981\u7d20\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3088\u3063\u3066\u6307\u5b9a\u3055\u308c\u305f\u4f4d\u7f6e\u306b\u3042\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5bfe\u5fdc\u3057\u307e\u3059\uff0e Return p[indics[i]]\u3092\u8868\u73fe\u3059\u308bi\u756a\u76ee\u306e\u8981\u7d20\u306eExpression Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 p : \u8aad\u307f\u8fbc\u307e\u308c\u308bLookupParameter\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 indices : \u30d0\u30c3\u30c1\u306e\u305d\u308c\u305e\u308c\u306e\u4f4d\u7f6e\u306b\u304a\u3051\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff0e Arithmetic Operations Arighmetic Arithmetic\u306f\u7b97\u8853\uff0c\u6570\u5b66\uff0c\u7b97\u6570\u3068\u3044\u3046\u610f\u5473 \u3053\u308c\u3089\u306e\u64cd\u4f5c\u306fComputationGraph\u5185\u306e\u5024\u306b\u5bfe\u3057\u3066\u57fa\u672c\u7684\u306a\u7b97\u8853\u6f14\u7b97\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e Probability/Loss Operations \u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f\u78ba\u7387\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e \u3082\u3057\u304f\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4e2d\u306b\u640d\u5931\u95a2\u6570\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e Probability Operation Expression dynet::softmax(const Expression x, unsigned d = 0) \u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570 \u3053\u306e\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570\u306f\u5404\u5217\u3092\u6b63\u898f\u5316\u3057\u3066\uff0c\u5168\u3066\u306e\u5024\u304c\uff10\u304b\u3089\uff11\u306e\u9593\u3092\u53d6\u308b\u3088\u3046\u306b \u3057\u307e\u3059\uff0e\u3053\u308c\u306b\u306f \\frac{e^{x_i}}{\\sum_j e^{x_j}} \\frac{e^{x_i}}{\\sum_j e^{x_j}} \u3068\u3044\u3046\u5f0f\u3092\u5229\u7528\u3057\u307e\u3059\uff0e Return softmax\u3092\u8a08\u7b97\u3057\u305f\u5f8c\u306evector\u304bmatrix Parameters x : vector\u304bmatrix d : \u6b63\u898f\u5316\u3059\u308b\u6b21\u5143(\u30c7\u30d5\u30a9\u30eb\u30c8 = 0) Expression dynet::rectify(const Expression x) \u6b63\u898f\u5316\u7dda\u5f62\u95a2\u6570(rectified linear function) ReLU \u8981\u7d20\u3054\u3068\u306b\u6b63\u898f\u5316\u95a2\u6570(ReLU) y_i = \\max(x_i, 0) y_i = \\max(x_i, 0) \u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e Return i\u756a\u76ee\u306e\u8981\u7d20\u304c \\max(x_i, 0) \\max(x_i, 0) \u3067\u3042\u308b Expression Parameters x : \u5165\u529b\u3055\u308c\u308bExpression Loss Operation Expression dynet::pickneglogsoftmax(const Expression x, unsigned v) Negative softmax log likelihood \u3053\u306e\u95a2\u6570\u306f\u30b9\u30b3\u30a2x\u306e\u30d9\u30af\u30c8\u30eb\u3092\u53d6\u308a\u8fbc\u307f\u307e\u3059\uff0e\u305d\u3057\u3066\uff0clog softmax\u3092\u5b9f\u884c\u3057 -1\u3092\u639b\u3051\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u8981\u7d20v\u306b\u5bfe\u5fdc\u3057\u305f\u78ba\u7acb\u3092\u9078\u3073\u307e\u3059\uff0e\u8fd4\u308a\u5024\u306f\u640d\u5931\u95a2\u6570\u306e Expression \u3067\u3059\uff0e \u3053\u306e\u95a2\u6570\u306f\u3082\u3057\u304b\u3059\u308b\u3068\u96c6\u5408\u304b\u3089\uff11\u3064\u306e\u8981\u7d20\u3092\u4e88\u6e2c\u3059\u308b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u304a\u3044\u3066 \u6700\u3082\u6709\u540d\u306a\u8aa4\u5dee\u95a2\u6570\u304b\u3082\u3057\u308c\u305b\u3093\uff0e Return softmax\u3092\u5b9f\u884c\u3057\u305f\u5f8c\u306e\u8981\u7d20 v \u306enegative log\u306e\u78ba\u7acb Parameters x : \u30b9\u30b3\u30a2\u306evector v : \u640d\u5931\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306e\u8981\u7d20 Flow/Shaping Operations \u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f ComputationGraph \u3092\u6d41\u308c\u308b\u60c5\u5831\u306e\u6d41\u308c\u3092\u5236\u5fa1\u3057\u307e\u3059\uff0e \u3082\u3057\u304f\u306f\uff0cgraph\u5185\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308bvector/tensorh\u306e\u5f62\u3092\u5236\u5fa1\u3057\u307e\u3059\uff0e Noise Operations \u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f ComputationGraph \u306b\u30ce\u30a4\u30ba\u3092\u52a0\u3048\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e \u3053\u306e\u76ee\u7684\u306f\u5b66\u7fd2\u3092\u3088\u308a\u9811\u5f37\u306a\u3082\u306e\u306b\u3059\u308b\u305f\u3081\u3067\u3059\uff0e Tensor Operations \u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f\u3088\u308a\u9ad8\u6b21\u5143\u306e\u30c6\u30f3\u30bd\u30eb\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e Note contraction operation \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u306fCUDA\u306b\u304a\u3044\u3066\u591a\u304f\u306e\u6642\u9593\u3092\u8981\u3057\u307e\u3059\uff0e CPU\u5b9f\u88c5\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3068\u304d\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3059\uff0e \u3082\u3057\uff0c\u3042\u306a\u305f\u304c\u3053\u306e\u64cd\u4f5c\u3092\u5fc5\u8981\u3068\u3057\u3066\u3044\u308b\u306a\u3089\u3070\uff0c \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e \u3053\u306e\u884c \u3092 \u30b3\u30e1\u30f3\u30c8\u89e3\u9664\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Linear Algebra Operations \u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f\u69d8\u3005\u306a\u4e00\u822c\u7684\u306a\u7dda\u5f62\u4ee3\u6570\u306e\u64cd\u4f5c\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e Convolution Operations \u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f convolution \u306b\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3059\uff0e Normalization Operation \u3053\u308c\u306f\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u3084\u305d\u308c\u306b\u95a2\u4fc2\u3057\u305f\u3082\u306e\u3092\u542b\u307f\u307e\u3059\uff0e Device Operation \u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f\u30c7\u30d0\u30a4\u30b9\u306b\u95a2\u4fc2\u3057\u305f\u3082\u306e\u3067\u3059\uff0e Builders Softmax Builders \u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u5c64\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3059\uff0e class SoftmaxBuilder #include cfsm-builder.h Optimizers \u3042\u306a\u305f\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u6574\u3059\u308b\u305f\u3081\u306e\u69d8\u3005\u306a\u6700\u9069\u5316\u95a2\u6570(optimizers)","title":"API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9"},{"location":"reference/#api","text":"Quote API Reference","title":"API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9"},{"location":"reference/#core-functionalities","text":"","title":"Core functionalities"},{"location":"reference/#computation-graph","text":"ComputationGraph \u306fdynet\u306e\u4e3b\u529b\u3067\u3059\uff0e Computation graph \u306f\u8a08\u7b97\u3092\u30b7\u30f3\u30dc\u30eb\u7684\u306b\u8868\u73fe\u3057\u307e\u3059\uff0e\u305d\u3057\u3066\u305d\u306e\u8a08\u7b97\u306f\u9045\u5ef6\u8a55\u4fa1\u3055\u308c\u307e\u3059\uff0e \u3064\u307e\u308a\uff0c\u8a08\u7b97\u306f\u30e6\u30fc\u30b6\u30fc\u304c\u967d\u306b\u305d\u308c\u3092\u547d\u4ee4\u3057\u305f\u3068\u304d\u306b\u3060\u3051\u5b9f\u884c\u3055\u308c\u307e\u3059( forward \u8a08\u7b97\u3092\u30c8\u30ea\u30ac\u30fc\u3068\u3057\u3066). \u30b9\u30ab\u30e9\u30fc\u5024(\u4f8b\u3048\u3070\uff0closs value\u306a\u3069)\u3092\u8a55\u4fa1\u3059\u308b\u305f\u3081\u306e Expression \u306f backword \u8a08\u7b97\u3092\u30c8\u30ea\u30ac\u30fc \u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u95a2\u3057\u3066\u52fe\u914d\u304c\u8a08\u7b97\u3055\u308c\u307e\u3059\uff0e int dynet::get_number_of_active_graph() \u6709\u52b9\u306a\u30b0\u30e9\u30d5\u306e\u6570\u3092\u5f97\u308b\uff0e \u3053\u308c\u306f\uff10\u304b\uff11\u3067\u3059\uff0e\uff11\u4ee5\u4e0a\u306e\u30b0\u30e9\u30d5\u3092\u540c\u6642\u306b\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\uff0e Return \u6709\u52b9\u306a\u30b0\u30e9\u30d5\u306e\u6570 unsigned dynet::get_current_graph_id() \u73fe\u5728\u6709\u52b9\u306a\u30b0\u30e9\u30d5\u306eid\u3092\u5f97\u307e\u3059\uff0e \u3053\u308c\u306f\u30b0\u30e9\u30d5\u304c\u53e4\u304f\u306a\u3063\u305f(stale)\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\uff0e Return \u73fe\u5728\u306e\u30b0\u30e9\u30d5\u306eID struct ComputationGraph #include dynet.h \u30ce\u30fc\u30c9\u304c forward \u3068 backword \u306e\u4e2d\u9593\u5024\u3092\u8868\u3057\uff0c\u30a8\u30c3\u30b8\u304c\u591a\u5909\u6570\u95a2\u6570\u3092\u8868\u3059\u8a08\u7b97\u30b0\u30e9\u30d5 \u3053\u306e\u4e8b\u5b9f\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306b\u95a2\u6570\u306f\u8907\u6570\u306e\u5f15\u6570\u3092\u53d6\u308b\u3067\u3057\u3087\u3046\uff0e\u307e\u305f\uff0c\u30a8\u30c3\u30b8\u306f\uff11\u3064\u306ehead\u3068 \uff10\uff0c\uff11\uff0c\uff12\uff0c\u3082\u3057\u304f\u306f\u305d\u308c\u4ee5\u4e0a\u306etail\u3092\u6301\u3061\u307e\u3059. \u6709\u5411\u30b0\u30e9\u30d5\u306b\u304a\u3051\u308bhead\u3068tail (\u5b9a\u6570\uff0c\u5165\u529b\uff0c\u307e\u305f\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5f15\u6570\u304c\uff10\u306e\u95a2\u6570\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u307e\u3059\uff0e) \u4f8b\uff1a z=f(x,y) z=f(x,y) \u3068\u3044\u3046\u95a2\u6570\u304c\u4e0e\u3048\u3089\u305f\uff0cx,z\u3068y\u306f\u30ce\u30fc\u30c9\u3067\u3042\u308a\uff0c\u305d\u3057\u3066z\u30ce\u30fc\u30c9\u3092\u6307\u3057\u793a\u3059 f\u3092\u8868\u3059\u30a8\u30c3\u30b8\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3068\uff0cx\u3068y\u306f\u30a8\u30c3\u30b8\u306etail\u3067\u3059\uff0e\u3042\u306a\u305f\u306f ComputationGraph \u306e backword \u4ee5\u5916\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u4f7f\u7528\u3092\u5fc5\u8981\u3068\u3059\u3079\u304d\u3067\u306f\u306a\u3044\uff0e\u306a\u305c\u306a\u3089\u305d\u308c\u3089\u306e\u6b86\u3069\u306f Expression \u30af\u30e9\u30b9\u304b\u3089\u76f4\u63a5\u5229\u7528\u53ef\u80fd\u3067\u3042\u308b\u305f\u3081\uff0e Public Functions ComputaionGraph() \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf VariableIndex add_input(real s, Device *device) \u30b9\u30ab\u30e9\u5024\u306e\u5165\u529b\u3092\u52a0\u3048\u308b. \u8a08\u7b97\u30b0\u30e9\u30d5\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304b\u3089\u5165\u529b\u3092\u3082\u3089\u3044\uff0c\u305d\u308c\u3092\u8a08\u7b97\u306b\u5229\u7528\u3059\u308b\uff0e Return \u4f5c\u3089\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters s: \u5b9f\u6570 device: \u5165\u529b\u5024\u304c\u304a\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9 VariableIndex add_input(const Dim d, const std::vector data, Device *device) \u8907\u6570\u6b21\u5143\u306e\u5165\u529b\u3092\u52a0\u3048\u308b \u3053\u306e\u8a08\u7b97\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304b\u3089\u5165\u529b\u3092\u53d7\u53d6\uff0c\u305d\u308c\u3089\u3092\u8a08\u7b97\u306b\u5229\u7528\u3059\u308b\uff0e Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters d: \u6240\u671b\u306e\u5165\u529b\u306e\u5f62 data: \u5165\u529b\u30c7\u30fc\u30bf(1\u6b21\u5143\u914d\u5217\u3068\u3057\u3066\u306e\uff09 data: \u305d\u308c\u305e\u308c\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3057\u305f\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8 device: \u5165\u529b\u30c7\u30fc\u30bf\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9 VariableIndex add_input(const Dim d, const std::vector pdata, Device device) \u8907\u6570\u6b21\u5143\u306e\u5165\u529b\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u52a0\u3048\u308b. \u8a08\u7b97\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u30e6\u30fc\u30b6\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304b\u3089\u5165\u529b\u3092\u53d7\u53d6\u308a\uff0c\u305d\u308c\u3089\u3092\u8a08\u7b97\u306b\u5229\u7528\u3059\u308b\uff0e Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters d: \u6240\u671b\u306e\u5165\u529b\u306e\u5f62 pdata: \u5165\u529b\u30c7\u30fc\u30bf\u3078\u306e\u30dd\u30a4\u30f3\u30bf\uff08\uff11\u6b21\u5143\u914d\u5217\u3068\u3057\u3066\u306e\uff09 device: \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9 VariableIndex add_input(const Dim d, const std::vector ids, const std::vector data, Device* device float defdata=0.f) \u30b9\u30d1\u30fc\u30b9\u306a\u5165\u529b\u3092\u52a0\u3048\u308b \u8a08\u7b97\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u30e6\u30fc\u30b6\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304b\u3089\u5165\u529b\u3092\u53d7\u53d6\u308a\uff0c\u305d\u308c\u3089\u3092\u8a08\u7b97\u306b\u5229\u7528\u3059\u308b\uff0e \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u4f7f\u3063\u3066,\u8a08\u7b97\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3078\u306e\u5165\u529b\u306f\u30b9\u30d1\u30fc\u30b9\u914d\u5217\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u8868\u73fe\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u3078\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters d: \u6240\u671b\u306e\u5165\u529b\u306e\u5f62 ids: \u66f4\u65b0\u3059\u308b\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 data: \u305d\u308c\u305e\u308c\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3057\u305f\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8 device: \u5165\u529b\u30c7\u30fc\u30bf\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9 defdata: \u672a\u6307\u5b9a\u306e\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30c7\u30fc\u30bf VariableIndex add_parameters(Parameter p) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52a0\u3048\u308b Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u52a0\u3048\u3089\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf VariableIndex add_parameters(LookupParameter p) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5b8c\u5168\u306a\u884c\u5217\u3092\u52a0\u3048\u308b. Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u52a0\u3048\u3089\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf VariableIndex add_const_parameters(Parameter p) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b \u66f4\u65b0\u3055\u308c\u306a\u3044 \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52a0\u3048\u308b Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u52a0\u3048\u3089\u308c\u308b\u30d1\u30e9\u30e1\u30fc\u30bf VariableIndex add_const_parameters(LookupParameter p) \u66f4\u65b0\u3055\u308c\u306a\u3044 \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5b8c\u5168\u306a\u884c\u5217\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u52a0\u3048\u308b Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u52a0\u3048\u3089\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf VariableIndex add_lookup(LookupParameter p, const unsigned *pindex) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf(\u30b7\u30f3\u30b0\u30eb)\u3092\u52a0\u3048\u308b \u547c\u3073\u51fa\u3057\u5143\u304c\u6240\u6709\u3057\u3066\u3044\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u30e1\u30e2\u30ea\u4f4d\u7f6e\u3092\u6307\u3059\u306b\u306f pindex \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u62fe\u308f\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf pindex: \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u6307\u3057\u793a\u3059\u30dd\u30a4\u30f3\u30bf VariableIndex add_lookup(LookupParameter p, unsinged index) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52a0\u3048\u308b Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u62fe\u308f\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf index: \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u6307\u3059\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 VariableIndex add_lookup(LookupParameter p, const std::vector *pindecs) \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf(\u8907\u6570)\u3092\u52a0\u3048\u307e\u3057\u3087\u3046 \u547c\u3073\u51fa\u3057\u5143\u304c\u6240\u6709\u3057\u3066\u3044\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u30e1\u30e2\u30ea\u4f4d\u7f6e\u3092\u6307\u3059\u306b\u306f pindecs \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u62fe\u308f\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf indeces: \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u6307\u3059\u30a4\u30f3\u30c7\u30c3\u30af\u30b9(\u8907\u6570) VariableIndex add_lookup(LookupParameter p, const std::vector indices) \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u52a0\u3048\u307e\u3059. Return \u4f5c\u6210\u3055\u308c\u305f\u5909\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Parameters p: \u62fe\u308f\u308c\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf indeces: \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u6307\u3059\u30a4\u30f3\u30c7\u30c3\u30af\u30b9(\u8907\u6570) Note \u5927\u91cf\u306e\u7701\u7565\u3042\u308a\uff0c\u4f59\u88d5\u304c\u3042\u3063\u305f\u3089\u548c\u8a33\u3057\u307e\u3057\u3087\u3046\u306d\uff0e void clear() \u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u30ea\u30bb\u30c3\u30c8\u3057\uff0c\u65b0\u898f\u306b\u4f5c\u6210\u3055\u308c\u305f\u72b6\u614b\u306b\u3057\u307e\u3059\uff0e void checkpoint() \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e void revert() \u6700\u5f8c\u306e\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3068\u304d\u306e\u72b6\u614b\u306b\u623b\u308a\u307e\u3059\uff0e const Tensor forward(VariableIndex i) \u4e8b\u524d\u306b\u8a08\u7b97\u3055\u308c\u3066\u3044\u308b\u5168\u3066\u306e\u5024\u3092\u7121\u8996\u3057\u3066\u6700\u521d\u306e\u30ce\u30fc\u30c9\u304b\u3089\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9\u3078\u306e\u5b8c\u5168\u306a forward \uff08\u9806\u4f1d\u64ad\uff09\u3092\u5b9f\u884c\uff0e Return \u5b9f\u884c\u3057\u305f\u3042\u3068\u306e\u6700\u5f8c\u306e\u30ce\u30fc\u30c9\u306e\u5024 Parameters i: forword \uff08\u9806\u4f1d\u64ad\uff09\u304c\u8a08\u7b97\u3055\u308c\u305f\u5f8c\u306e\u6700\u65b0\u306e\u30ce\u30fc\u30c9\u306e\u5909\u6570\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 const Tensor incrimental_forward(const Expression last) forward \uff08\u9806\u4f1d\u64ad\uff09\u3092\u6700\u5f8c\u306b\u8a08\u7b97\u3055\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9\u307e\u3067\u8a08\u7b97\u3059\u308b\uff0e \u3082\u3057\u3042\u306a\u305f\u304c\uff0c\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\uff0c\u305d\u3057\u3066\u65b0\u3057\u3044\u90e8\u5206\u306e\u307f\u3092\u8a55\u4fa1\u3057\u305f\u3044\u306a\u3089\uff0c\u305d\u306e\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\uff0e Return \u5b9f\u884c\u3057\u305f\u5f8c\u306e last Expression \u306e\u5024 Parameters last : \u9806\u4f1d\u64ad\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5f0f(Expression) const Tensor incrimental_forward(VariableIndex i) forward \uff08\u9806\u4f1d\u64ad\uff09\u3092\u6700\u5f8c\u306b\u8a08\u7b97\u3055\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9\u307e\u3067\u8a08\u7b97\u3059\u308b\uff0e \u3082\u3057\u3042\u306a\u305f\u304c\uff0c\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\uff0c\u305d\u3057\u3066\u65b0\u3057\u3044\u90e8\u5206\u306e\u307f\u3092\u8a55\u4fa1\u3057\u305f\u3044\u306a\u3089\uff0c\u305d\u306e\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\uff0e Return \u5b9f\u884c\u3057\u305f\u5f8c\u306e\u6700\u5f8c\u306e\u30ce\u30fc\u30c9\u306e\u5024 Parameters last : \u9806\u4f1d\u64ad\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5f0f(Expression) void backward(const Expression last, bool full = false) \u51fa\u529b\u5c64\u304b\u3089\u9806\u3005\u306b\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e full \u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5168\u3066\u306e\u30ce\u30fc\u30c9( true )\u306b\u5bfe\u3057\u3066\u50be\u304d\u3092\u8a08\u7b97\u3059\u308b\u304bnon-constant\u306a\u30ce\u30fc\u30c9\u3060\u3051\u8a08\u7b97\u3092\u884c\u3046\u3079\u304d\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4e0b\u8a18\u306e\u6761\u4ef6\u3092\u9664\u3044\u3066\u306f\u30ce\u30fc\u30c9\u306f\u666e\u904d\u3067\u3059. \u30d1\u30e9\u30e1\u30fc\u30bf\u30ce\u30fc\u30c9 \u30ce\u30fc\u30c9\u304cnon-constant\u30ce\u30fc\u30c9\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b \u3057\u305f\u304c\u3063\u3066\uff0c\u5b9a\u6570\u306e\u95a2\u6570\u3068\u5165\u529b\u306f\u5b9a\u6570\u3068\u3057\u3066\u8003\u3048\u3089\u308c\u307e\u3059\uff0e \u50be\u304d\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f full \u3092 true \u306b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u6642\u306b\u52fe\u914d\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u30ce\u30fc\u30c9\u3092\u7121\u8996\u3059\u308b\u3088\u3046\u306b false \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\uff0e Parameters last : \u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u5143\u306e\u5f0f\uff08 Expression ) full : \u5168\u3066\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u304b\u3069\u3046\u304b\uff08\u5b9a\u6570\u30ce\u30fc\u30c9\u3092\u542b\u3081\u308b\u304b\u3069\u3046\u304b) void backward(VariableIndex i, bool full-false) \u30ce\u30fc\u30c9 i \u304b\u3089\u9006\u4f1d\u64ad\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\uff08\u30ce\u30fc\u30c9i\u306f\u3059\u3067\u306b\u8a55\u4fa1\u3055\u308c\u3066\u3044\u308b\u3068\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059) full \u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5168\u3066\u306e\u30ce\u30fc\u30c9( true )\u306b\u5bfe\u3057\u3066\u50be\u304d\u3092\u8a08\u7b97\u3059\u308b\u304bnon-constant\u306a\u30ce\u30fc\u30c9\u3060\u3051\u8a08\u7b97\u3092\u884c\u3046\u3079\u304d\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4e0b\u8a18\u306e\u6761\u4ef6\u3092\u9664\u3044\u3066\u306f\u30ce\u30fc\u30c9\u306f\u666e\u904d\u3067\u3059. \u30d1\u30e9\u30e1\u30fc\u30bf\u30ce\u30fc\u30c9 \u30ce\u30fc\u30c9\u304cnon-constant\u30ce\u30fc\u30c9\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b \u3057\u305f\u304c\u3063\u3066\uff0c\u5b9a\u6570\u306e\u95a2\u6570\u3068\u5165\u529b\u306f\u5b9a\u6570\u3068\u3057\u3066\u8003\u3048\u3089\u308c\u307e\u3059\uff0e \u50be\u304d\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f full \u3092 true \u306b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u6642\u306b\u52fe\u914d\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u30ce\u30fc\u30c9\u3092\u7121\u8996\u3059\u308b\u3088\u3046\u306b false \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\uff0e Parameters i : \u3069\u306e\u30ce\u30fc\u30c9\u304b\u3089\u8a08\u7b97\u3092\u59cb\u3081\u308b\u304b\u3092\u6307\u3057\u793a\u3059\u30ce\u30fc\u30c9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 full : \u5168\u3066\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u304b\u3069\u3046\u304b\uff08\u5b9a\u6570\u30ce\u30fc\u30c9\u3092\u542b\u3081\u308b\u304b\u3069\u3046\u304b) \u3082\u3057\u3042\u306a\u305f\u304c\u50be\u304d\u3092\u691c\u7d22\u3057\u305f\u3044\u306a\u3089\u3053\u308c\u3092\u6709\u52b9\u306b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u306f\u9006\u4f1d\u64ad\u306b\u95a2\u4fc2\u306a\u3044\u52fe\u914d\u8a08\u7b97\u3092\u7701\u304d\u52b9\u7387\u3092\u9ad8\u3081\u308b\u305f\u3081\u306b, \u3053\u308c\u306f\u30aa\u30d5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0c void print_graphviz() \u30c7\u30d0\u30c3\u30b0\u306e\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059 unsigned get_id() const \u8a08\u7b97\u30b0\u30e9\u30d5\uff08\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\uff09\u306e\u30e6\u30cb\u30fc\u30afID\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e \u3053\u306eID\u306f\u8a08\u7b97\u30b0\u30e9\u30d5\u304c\u5404\u30a8\u30dd\u30c3\u30af\u3054\u3068\u306b\u4f5c\u6210\u3055\u308c\uff0c\uff11\u3065\u3064\u5897\u52a0\u3057\u307e\u3059\uff0e Return \u30b0\u30e9\u30d5ID","title":"Computation Graph"},{"location":"reference/#nodes","text":"\u30ce\u30fc\u30c9\u306f ComputationGraph \u306e\u69cb\u6210\u8981\u7d20\u3067\u3059\uff0e \u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u306f\u30ce\u30fc\u30c9\u3068\u76f4\u63a5\u7684\u306b\u3084\u308a\u53d6\u308a\u3059\u308b\u306e\u3067\u306f\u306a\u304f Expression \u3092\u901a\u3057\u3066 \u3084\u308a\u53d6\u308a\u3092\u884c\u3044\u307e\u3059\uff0e \u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u65b0\u3057\u3044\u64cd\u4f5c\u306e\u5b9f\u88c5\u306e\u305f\u3081\u306b\u306f\u4ee5\u4e0b\u3067\u8aac\u660e\u3059\u308b\u30ce\u30fc\u30c9\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f \u30b5\u30d6\u30af\u30e9\u30b9\u3092\u65b0\u3057\u304f\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e struct Node #include dynet.h \u8a08\u7b97\u30ce\u30fc\u30c9\u306b\u95a2\u3059\u308b\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e:\u5f15\u6570\uff0c\u51fa\u529b\u5024\uff0c\u95a2\u6570\u306b\u95a2\u3059\u308b\u51fa\u529b\u306e\u52fe\u914d\uff0e \u3053\u306e\u30af\u30e9\u30b9\u306f\u65b0\u3057\u3044\u64cd\u4f5c(operation)\u306e\u5b9f\u88c5\u6642\u306b\u306f\u7d99\u627f\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e \u4f8b\u306fnodes.cc\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e\u65b0\u3057\u3044\u5f0f\u306e\u64cd\u4f5c(operation)\u306f Node \u304b\u3089\u4f5c\u6210\u3055\u308c\u307e\u3059\uff0e \u4f8b\u306fexpr.h/expr.cc\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e Public Functions virtual std::string as_string(const std::vector args) const = 0 \u30c7\u30d0\u30c3\u30b0\u306b\u91cd\u8981\u306a\u60c5\u5831\u3092\u8fd4\u3057\u307e\u3059\uff0e\u8a73\u3057\u304f\u306fnodes-conv.cc\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e Return \u30ce\u30fc\u30c9\u306e\u8aac\u660e\uff08string) Parameters args : \u5f15\u6570\u306e\u8aac\u660e(string)","title":"Nodes"},{"location":"reference/#parameters-and-model","text":"\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u6700\u9069\u5316\u3055\u308c\u308b\u3079\u304d\u6570\u5024\u3067\u3059\uff0e\u8a08\u7b97\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u81ea\u8eab\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6709\u3059\u308b Torch\u306e\u30b7\u30b9\u30c6\u30e0\u3068\u306f\u5bfe\u8c61\u7684\u306b,dynet\u3067\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u305f\u3060\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\uff0e \u758e\u306a\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\uff0c\uff12\u3064\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30af\u30e9\u30b9\u304c\u5b58\u5728\u3057\u307e\u3059\uff0e Parameters \u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306evector\u3084matrix\u3092\u8868\u73fe\u3057\u307e\u3059\uff0e\uff08\u6700\u7d42\u7684\u306b\u3088\u308a\u9ad8\u3044\u6b21\u5143\u306e\u30c6\u30f3\u30bd\u30eb\uff09 \u3053\u308c\u3089\u306f\u5bc6\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\uff0e LookupParameters \u306fvector\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u8868\u73fe\u3057\uff0c\u96e2\u6563\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u96c6\u5408\u3092\u7d44\u307f\u8fbc\u3080\u305f\u3081\u306b \u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e\u3053\u308c\u3089\u306f\u758e\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\uff0e","title":"Parameters and Model"},{"location":"reference/#tensor","text":"Tensor \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306fC++\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3068Eigen\u306eTensors\u30af\u30e9\u30b9\u306e\u9593\u306e\u6a4b\u6e21\u3057\u3092\u3059\u308b\u305f\u3081\u306b \u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e \u5177\u4f53\u7684\u306b\u306f\uff0c\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u306f .value() \u3092Expression\u30af\u30e9\u30b9\u4e0a\u3067\u547c\u3093\u3060\u5f8c\u306b tensor \u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3042\u306a\u305f\u306f\u4ee5\u4e0b\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\uff0c\u305d\u308c\u3089\u306etensor\u3092 float \u3084 float \u306earray\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e\u307e\u305f\uff0c\u305d\u308c\u3089\u306e\u5024\u3092\u4fdd\u5b58\u3084\u8aad\u307f\u8fbc\u3080\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\uff0e \u9006\u306b\uff0c\u30ed\u30fc\u30ec\u30d9\u30eb\u306e\u30ce\u30fc\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u3068\u304d\u306b\u306f(\u4f8b\u3048\u3070\u65b0\u3057\u3044operations\u306e\u305f\u3081\u306b) \u3042\u306a\u305f\u306fEigen\u306etensors\u304b\u3089dynet\u306etensors\u306b\u9006\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u308c\u306f Eigen\u306etensors\u3092\u4f7f\u7528\u3059\u308b\u3068\u52b9\u7387\u7684\u306b\u8a08\u7b97\u3092\u5b9f\u884c\u3067\u304d\u308b\u304b\u3089\u3067\u3059\uff0e","title":"Tensor"},{"location":"reference/#dimensions","text":"Dim \u30af\u30e9\u30b9\u306ftensor\u306e\u5f62\u72b6\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u6709\u3057\u3066\u3044\u307e\u3059\uff0e \u6b63\u7d71\u6d3e\u3067\u306a\u3044\u30c7\u30b6\u30a4\u30f3 \u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\uff0cdynet\u306b\u304a\u3044\u3066dimensions\u306f\u4e00\u822c\u7684\u306a\u6b21\u5143+\u30d0\u30c3\u30c1\u306e\u6b21\u5143\u3092 \u8868\u73fe\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u8a08\u7b97\u306e\u900f\u660e\u6027\u3092\u9ad8\u3081\u3066\u3044\u307e\u3059\uff0e","title":"Dimensions"},{"location":"reference/#operations","text":"","title":"Operations"},{"location":"reference/#operation-interface","text":"\u4e0b\u8a18\u306e\u95a2\u6570\u306fdynet\u306e Expressions \u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e Expression \u306f ComputationGraph \u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3055\u308c\u308b\u69d8\u3005\u306a\u95a2\u6570\u3078\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u3057\u3066 \u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e struct Expression #include expr.h Expression\u306fDynet\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u6210\u3059\u308b\u30d6\u30ed\u30c3\u30af\u3067\u3059\uff0e Public Functions Expression(ComputationGraph pg, VariableIndex i) \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\uff0e\u64cd\u4f5c\uff08Operation)\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3057\u307e\u3059\uff0e Parameters pg : \u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u30dd\u30a4\u30f3\u30bf i : \u5909\u6570\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 const Tensor value() const expression(\u5f0f)\u306e\u5024\u3092\u5f97\u307e\u3059\uff0e \u8a08\u7b97\u30b0\u30e9\u30d5\u304c\u5229\u7528\u53ef\u80fd\u3067\u306a\u3044\u5834\u5408\u306fruntime_error\u304c\u6295\u3052\u3089\u308c\u307e\u3059\uff0e Return \u30c6\u30f3\u30bd\u30eb\u5f62\u5f0f\u306e\u5f0f\u306e\u5024 Note \u30aa\u30ea\u30b8\u30ca\u30eb\u3067\u306fThrows a runtiime_error\u3068\u30bf\u30a4\u30dd\u304c\u3042\u3063\u305f\u306e\u3067\u30de\u30fc\u30d7\u30eb\u3057\u3066\u304a\u304f const Tensor gradient() const \u5f0f(Expression)\u306e\u50be\u304d\u3092\u5f97\u308b \u8a08\u7b97\u30b0\u30e9\u30d5\u304c\u5229\u7528\u53ef\u80fd\u3067\u306a\u3044\u5834\u5408\u306fruntime_error\u304c\u6295\u3052\u3089\u308c\u307e\u3059\uff0e Return \u30c6\u30f3\u30bd\u30eb\u5f62\u5f0f\u306e\u5024 \u3053\u306e\u95a2\u6570\u3092\u547c\u3076\u524d\u306b backword \u3092\u4e0b\u6d41\u306e\u5f0f\u3067\u547c\u3073\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u3082\u3057\uff0c\u5f0f\u304c\u5b9a\u6570\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\u306a\u3089\u3070\uff08\u3053\u308c\u306f\u95a2\u6570\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6709\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u308b\uff09 dynet\u306f\u52b9\u7387\u306e\u305f\u3081\u306b\u305d\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3057\u3088\u3046\u3068\u306f\u3057\u307e\u305b\u3093\uff0e backword \u306e full=true \u5f15\u6570\u3092\u52a0\u3048\u308b\u3053\u3068\u306b\u3088\u3063\u3066 \u624b\u52d5\u3067\u5f37\u5236\u7684\u306b\u8a08\u7b97\u3092\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e const Dim dim() const \u8868\u73fe\u306e\u6b21\u5143\u3092\u6c42\u3081\u307e\u3059\uff0e \u8a08\u7b97\u30b0\u30e9\u30d5\u304c\u5229\u7528\u53ef\u80fd\u3067\u306a\u3044\u5834\u5408\u306fruntime_error\u304c\u6295\u3052\u3089\u308c\u307e\u3059\uff0e Return \u8868\u73fe(expression)\u306e\u6b21\u5143","title":"Operation Interface"},{"location":"reference/#input-operation","text":"\u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f\u3042\u306a\u305f\u306b\u4f55\u304b\u3092computationgraph\u306b\u6295\u5165\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\uff0e \u305d\u308c\u306f\u7c21\u5358\u306afloat\u578b\u306escalar/vector/matrix\u306e\u5165\u529b\u304b, \u3082\u3057\u304f\u306fdynet parameter object\u304b\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5165\u529b\u306e\u3069\u3061\u3089\u304b\u3067\u3059\uff0e \u305d\u308c\u3089\u306f\u5168\u3066computationgraph\u306b\u5165\u529b\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067 \u3042\u306a\u305f\u306f\u3053\u306egraph\u304c\u3069\u306e\u7279\u5b9a\u306e\u8a08\u7b97\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e Expression dynet::input(ComputationGraph g, real s, Device* devide = dynet::default_device) scalar input \u30b9\u30ab\u30e9\u5024\u3092\u8868\u73fe\u3059\u308bexpression(\u5f0f\uff09\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e Return s\u3092\u8868\u73fe\u3059\u308bExpression Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 s : \u5b9f\u6570 device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::(ComputationGraph g, const real ps, Device device = dynet::default_device) \u66f4\u65b0\u53ef\u80fd\u306a\u30b9\u30ab\u30e9\u30fc\u5024\u306e\u5165\u529b \u30b9\u30ab\u30e9\u5024 *ps \u3092\u8868\u73fe\u3059\u308bExpression(\u5f0f\uff09\u3092\u4f5c\u6210\u3059\u308b\uff0e\u3082\u3057\uff0c *ps \u304c\u5909\u66f4\u3055\u308c\uff0c\u304b\u3064\uff0c\u8a08\u7b97\u30b0\u30e9\u30d5\u304c\u518d\u8a08\u7b97\u3055\u308c\u305f\u5834\u5408\uff0c\u6b21\u306e\u9806\u4f1d\u64ad(forward)\u306f\u305d\u306e\u5024\u3092\u53cd\u6620\u3057\u307e\u3059\uff0e Return *ps \u3092\u8868\u3059Expression\uff08\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 ps : \u5b9f\u6570\u306e\u30dd\u30a4\u30f3\u30bf device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::input(ComputationGraph g, const Dim d, const std::vector data, Device* divice = dynet::default_device) \u30d9\u30af\u30bf\u30fc\uff0c\u884c\u5217\uff0c\u30c6\u30f3\u30bd\u30eb\u306e\u5165\u529b vecotr, matrix, tensor\u306e\u5165\u529b\u3092\u8868\u73fe\u3059\u308bExpression(\u5f0f\uff09\u3092\u4f5c\u6210\u3059\u308b\uff0e \u5165\u529b\u306e\u6b21\u5143\u306f d \u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u308b\uff0e\u3088\u3063\u3066\u4f8b\u3048\u3070\uff0c input(g, {50}, data) : \u3068\u3044\u3046\u5f15\u6570\u306f\u8981\u7d20\u657050\u306e\u30d9\u30af\u30bf\u30fc\u3092\u8868\u3059\uff0e input(g, {50, 30}, data) :\u3068\u3044\u3046 \u5f15\u6570\u306f50x30\u306e\u884c\u5217\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\uff0e\u3053\u308c\u306b\u3088\u308a\u4efb\u610f\u306e\u6b21\u5143\u3092\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u3053\u306e\u95a2\u6570\u306f\u30df\u30cb\u30d0\u30c3\u30c1\u306b\u5206\u5272\u3055\u308c\u305f\u5165\u529b\u306e\u8aad\u307f\u8fbc\u307f\u306b\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\uff0e \u305f\u3068\u3048\u3070\uff0c\uff11\u3064\u306e\u30df\u30cb\u30d0\u30c3\u30c1\u306b\uff11\uff10\u500b\u306e\u6559\u5e2b\u30c7\u30fc\u30bf(\u30b5\u30a4\u30ba\u306f50x30)\u304c\u3042\u3063\u305f\u5834\u5408\uff0c input(g, Dim({50, 30}, 10) data) \u3068\u3059\u308b\u3053\u3068\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\uff0e \u30c7\u30fc\u30bf\u30d9\u30af\u30bf\u30fc data \u306f\u5165\u529b\u3067\u4f7f\u7528\u3055\u308c\u308b\u305f\u3081\u306e\u5024\u3067\u6e80\u305f\u3055\u308c\u3066\u304a\u308a\uff0c \u5217\u512a\u5148\u30d9\u30af\u30c8\u30eb\u5f62\u5f0f\u3067\u3059\uff0e d \u306f\u5168\u3066\u306e\u30c7\u30fc\u30bf\u306e\u500b\u6570\u306e\u639b\u3051\u7b97\u3067\u8868\u3055\u308c\u308b\u8981\u7d20\u306e\u30b5\u30a4\u30ba\u3067\u3059\uff0e Return \u30c7\u30fc\u30bf\u3092\u8868\u73fe\u3057\u305fExpression(\u5f0f) Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 d :\u5165\u529b\u884c\u5217\u306e\u6b21\u5143 data :\u30c7\u30fc\u30bf\u70b9(\u4e00\u3064\u306e\u30c7\u30fc\u30bf\uff09\u306e\u30d9\u30af\u30bf\u30fc device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::input(ComputationGraph g, const Dim d, const std::vector padata, Device device = dynet::default_device) \u66f4\u65b0\u53ef\u80fd\u306avector/matrix/tensor\u306e\u5165\u529b vector\u3092\u53c2\u7167\u6e21\u3057\u3067\u6e21\u3059\u5165\u529b\u3068\u4f3c\u3066\u3044\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u3053\u306e\u95a2\u6570\u306f\u30dd\u30a4\u30f3\u30bf\u6e21\u3057\u3092\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30c7\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\uff0e Return *pdata\u306e\u8868\u73fe\u306eExpression(\u5f0f) Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 d : \u884c\u5217\u306e\u6b21\u5143 pdata : \u30dd\u30a4\u30f3\u30bf\u6e21\u3057\u306e(\u66f4\u65b0\u53ef\u80fd\u306a)\u30c7\u30fc\u30bf\u70b9\u306e\u30d9\u30af\u30c8\u30eb device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::input(ComputationGraph g, const Dim d, const std::vector ids, const std::vector data, float defdata = 0.f, Device* device = dynet::default_device) \u30b9\u30d1\u30fc\u30b9\uff08\u758e\uff09\u306a\u30d9\u30af\u30c8\u30eb\u306e\u5165\u529b \u3053\u306e\u64cd\u4f5c\u306f\u5165\u529b\u3068\u3057\u3066\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u5024\u304c\u30da\u30a2\u306b\u306a\u3063\u305f\u30b9\u30d1\u30fc\u30b9\u884c\u5217\u3092\u53d6\u308a\u307e\u3059\uff0e \u3053\u308c\u306f\u30d9\u30af\u30bf\u30fc\u306e\u53c2\u7167\u6e21\u3057\u306e\u6a19\u6e96\u5165\u529b\u3068\u5168\u304f\u540c\u3058\u3067\u3059\uff0e\u3057\u304b\u3057\uff0c\u6307\u5b9a\u3057\u3066\u3044\u306a\u3044\u5168\u3066\u306e\u5024\u3092 defdata \u306b\u8a2d\u5b9a\u3057\uff0c\u305d\u306e\u4ed6\u306e\u5165\u529b\u306e\u5024\u3092\u9069\u5207\u306b\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Return data\u306e\u8868\u73fe\u306eExpression\uff08\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 d : \u5165\u529b\u884c\u5217\u306e\u6b21\u5143 ids : \u66f4\u65b0\u3059\u308b\u30c7\u30fc\u30bf\u70b9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 defdata : \u672a\u6307\u5b9a\u306e\u30c7\u30fc\u30bf\u70b9\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30c7\u30fc\u30bf device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::one_hot(ComputaionGraph g , unsigned int d, unsigned int idx, Device* device = dynet::default_devaice) \u30ef\u30f3\u30fc\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb \u30ef\u30f3\u30db\u30c3\u30c8\u8868\u73fe\u306e\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e Return \u30c7\u30fc\u30bf\u3092\u8868\u73fe\u3057\u305fExpression(\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 d : \u5165\u529b\u30d9\u30af\u30c8\u30eb\u306e\u6b21\u5143 idx : 1\u3092\u30bb\u30c3\u30c8\u3057\u305f\u3044\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dyent::one_hot(ComputationGraph g, unsigned int d, const std::vector ids, Device* device = dynet::default_device) \u30d0\u30c3\u30c1\u7528\u306e\u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb \u3053\u306e\u64cd\u4f5c\u306f\u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u30d0\u30c3\u30c1\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e ids \u306e\u5927\u304d\u3055\u306b\u3088\u308a\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3092\u6c7a\u5b9a\u3057\u307e\u3059\uff0e Return data\u3092\u8868\u73fe\u3057\u305fExpression Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 d : \u5165\u529b\u30d9\u30af\u30c8\u30eb\u306e\u6b21\u5143 ids : \uff11\u3092\u8a2d\u5b9a\u3057\u305f\u3044\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff0c\u30d0\u30c3\u30c1\u30a8\u30ec\u30e1\u30f3\u30c8\u3054\u3068\u306b\u4e00\u3064 device : \u5165\u529b\u5024\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30d0\u30a4\u30b9\uff0cdefault_device\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u308b\uff0e Expression dynet::parameter(ComputationGraph g, Parater p) \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e \u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u4e2d\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u53cd\u6620\u3057\u307e\u3059\uff0e Return \u30d1\u30e9\u30e1\u30fc\u30bfp\u3092\u8868\u73fe\u3057\u305fExpression(\u5f0f) Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 p : \u8aad\u307f\u8fbc\u307e\u308c\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 Expression dynet::parameter(ComputationGraph g, LookupParameter lp) \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5b8c\u5168\u306a\u30c6\u30f3\u30bd\u30eb\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e \u901a\u5e38\uff0c\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306f lookup() \u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\uff0e \u3057\u304b\u3057\uff0c\u3044\u304f\u3064\u304b\u306e\u5834\u5408\u3067\u306f\uff0c\u4f55\u3089\u304b\u306e\u7406\u7531\u306b\u3088\u308a\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u5168\u90e8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e \u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u306f\uff0c\u8fd4\u3055\u308c\u305f\u30c6\u30f3\u30bd\u30eb\u306e\u6700\u521d\u306e\u6b21\u5143\u306f lookup() \u95a2\u6570\u3092\u8aad\u3093\u3060\u5834\u5408\u306b\u793a\u3059\u6b21\u5143\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3059\uff0e \u305d\u3057\u3066\uff0c\u6700\u5f8c\u306e\u6b21\u5143\u306e\u30b5\u30a4\u30ba\u306f\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u306e\u30b5\u30a4\u30ba\u3068\u7b49\u3057\u304f\u306a\u308a\u307e\u3059\uff0e Return lp\u304c\u8868\u73fe\u3055\u308c\u305fExpression\uff08\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 lp : \u8aad\u307f\u8fbc\u307e\u308c\u308bLookupParameters\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 Expression dynet::const_parameter(ComputationGraph g, Parameter p) \u5909\u66f4\u4e0d\u53ef\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u304c\u884c\u308f\u308c\u305f\u969b\u306b \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e Return \u5b9a\u6570p\u304c\u8868\u73fe\u3055\u308c\u305fExpression(\u5f0f) Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 p : \u8aad\u307f\u8fbc\u307e\u308c\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 Expression dynet::const_parameter(ComputatinGraph g, LookupParameter lp) \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u4e2d\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u66f4\u65b0\u306b\u3088\u308b\u5909\u66f4 \u3092\u907f\u3051\u308b\u3053\u3068\u304c\u3067\u304d\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5909\u66f4\u3055\u308c\u307e\u305b\u3093\uff0e Return lp\u304c\u8868\u73fe\u3055\u308c\u305fExpression\uff08\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 lp : \u8aad\u307f\u8fbc\u307e\u308c\u308bLookupParameter\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 Expression dynet::lookup(ComputationGraph g, LookupParameter p, unsigned index) \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u3079\u308b\uff0e \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53c2\u7167\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u3079\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u305d\u308c\u3092\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u4e2d\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff0e Return p[index]\u304c\u8868\u73fe\u3055\u308c\u305fExpression(\u5f0f\uff09 Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 p : \u8aad\u307f\u8fbc\u307e\u308c\u308bLookupParameter\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 index : \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bfp\u306e\u4e2d\u306b\u3042\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Expression dynet::lookup(ComputatinGraph g, LookupParameter p, const std::vector indics) \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u3079\u307e\u3059. \u30df\u30cb\u30d0\u30c3\u30c1\u30d0\u30fc\u30b8\u30e7\u30f3 \u306e lookup() .\u7d50\u679c\u306eExpression(\u5f0f\uff09\u306f\u30df\u30cb\u30d0\u30c3\u30c1\u306b\u5bfe\u5fdc\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\uff0e \u3053\u3053\u3067\u306f\uff0c\u30d0\u30c3\u30c1\u306ei\u756a\u76ee\u306e\u8981\u7d20\u306fi\u756a\u76ee\u306e\u8981\u7d20\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3088\u3063\u3066\u6307\u5b9a\u3055\u308c\u305f\u4f4d\u7f6e\u306b\u3042\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5bfe\u5fdc\u3057\u307e\u3059\uff0e Return p[indics[i]]\u3092\u8868\u73fe\u3059\u308bi\u756a\u76ee\u306e\u8981\u7d20\u306eExpression Parameters g : \u8a08\u7b97\u30b0\u30e9\u30d5 p : \u8aad\u307f\u8fbc\u307e\u308c\u308bLookupParameter\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 indices : \u30d0\u30c3\u30c1\u306e\u305d\u308c\u305e\u308c\u306e\u4f4d\u7f6e\u306b\u304a\u3051\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff0e","title":"Input Operation"},{"location":"reference/#arithmetic-operations","text":"Arighmetic Arithmetic\u306f\u7b97\u8853\uff0c\u6570\u5b66\uff0c\u7b97\u6570\u3068\u3044\u3046\u610f\u5473 \u3053\u308c\u3089\u306e\u64cd\u4f5c\u306fComputationGraph\u5185\u306e\u5024\u306b\u5bfe\u3057\u3066\u57fa\u672c\u7684\u306a\u7b97\u8853\u6f14\u7b97\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e","title":"Arithmetic Operations"},{"location":"reference/#probabilityloss-operations","text":"\u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f\u78ba\u7387\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e \u3082\u3057\u304f\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4e2d\u306b\u640d\u5931\u95a2\u6570\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e","title":"Probability/Loss Operations"},{"location":"reference/#probability-operation","text":"Expression dynet::softmax(const Expression x, unsigned d = 0) \u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570 \u3053\u306e\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570\u306f\u5404\u5217\u3092\u6b63\u898f\u5316\u3057\u3066\uff0c\u5168\u3066\u306e\u5024\u304c\uff10\u304b\u3089\uff11\u306e\u9593\u3092\u53d6\u308b\u3088\u3046\u306b \u3057\u307e\u3059\uff0e\u3053\u308c\u306b\u306f \\frac{e^{x_i}}{\\sum_j e^{x_j}} \\frac{e^{x_i}}{\\sum_j e^{x_j}} \u3068\u3044\u3046\u5f0f\u3092\u5229\u7528\u3057\u307e\u3059\uff0e Return softmax\u3092\u8a08\u7b97\u3057\u305f\u5f8c\u306evector\u304bmatrix Parameters x : vector\u304bmatrix d : \u6b63\u898f\u5316\u3059\u308b\u6b21\u5143(\u30c7\u30d5\u30a9\u30eb\u30c8 = 0) Expression dynet::rectify(const Expression x) \u6b63\u898f\u5316\u7dda\u5f62\u95a2\u6570(rectified linear function) ReLU \u8981\u7d20\u3054\u3068\u306b\u6b63\u898f\u5316\u95a2\u6570(ReLU) y_i = \\max(x_i, 0) y_i = \\max(x_i, 0) \u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e Return i\u756a\u76ee\u306e\u8981\u7d20\u304c \\max(x_i, 0) \\max(x_i, 0) \u3067\u3042\u308b Expression Parameters x : \u5165\u529b\u3055\u308c\u308bExpression","title":"Probability Operation"},{"location":"reference/#loss-operation","text":"Expression dynet::pickneglogsoftmax(const Expression x, unsigned v) Negative softmax log likelihood \u3053\u306e\u95a2\u6570\u306f\u30b9\u30b3\u30a2x\u306e\u30d9\u30af\u30c8\u30eb\u3092\u53d6\u308a\u8fbc\u307f\u307e\u3059\uff0e\u305d\u3057\u3066\uff0clog softmax\u3092\u5b9f\u884c\u3057 -1\u3092\u639b\u3051\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u8981\u7d20v\u306b\u5bfe\u5fdc\u3057\u305f\u78ba\u7acb\u3092\u9078\u3073\u307e\u3059\uff0e\u8fd4\u308a\u5024\u306f\u640d\u5931\u95a2\u6570\u306e Expression \u3067\u3059\uff0e \u3053\u306e\u95a2\u6570\u306f\u3082\u3057\u304b\u3059\u308b\u3068\u96c6\u5408\u304b\u3089\uff11\u3064\u306e\u8981\u7d20\u3092\u4e88\u6e2c\u3059\u308b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u304a\u3044\u3066 \u6700\u3082\u6709\u540d\u306a\u8aa4\u5dee\u95a2\u6570\u304b\u3082\u3057\u308c\u305b\u3093\uff0e Return softmax\u3092\u5b9f\u884c\u3057\u305f\u5f8c\u306e\u8981\u7d20 v \u306enegative log\u306e\u78ba\u7acb Parameters x : \u30b9\u30b3\u30a2\u306evector v : \u640d\u5931\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306e\u8981\u7d20","title":"Loss Operation"},{"location":"reference/#flowshaping-operations","text":"\u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f ComputationGraph \u3092\u6d41\u308c\u308b\u60c5\u5831\u306e\u6d41\u308c\u3092\u5236\u5fa1\u3057\u307e\u3059\uff0e \u3082\u3057\u304f\u306f\uff0cgraph\u5185\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308bvector/tensorh\u306e\u5f62\u3092\u5236\u5fa1\u3057\u307e\u3059\uff0e","title":"Flow/Shaping Operations"},{"location":"reference/#noise-operations","text":"\u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f ComputationGraph \u306b\u30ce\u30a4\u30ba\u3092\u52a0\u3048\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e \u3053\u306e\u76ee\u7684\u306f\u5b66\u7fd2\u3092\u3088\u308a\u9811\u5f37\u306a\u3082\u306e\u306b\u3059\u308b\u305f\u3081\u3067\u3059\uff0e","title":"Noise Operations"},{"location":"reference/#tensor-operations","text":"\u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f\u3088\u308a\u9ad8\u6b21\u5143\u306e\u30c6\u30f3\u30bd\u30eb\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e Note contraction operation \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u306fCUDA\u306b\u304a\u3044\u3066\u591a\u304f\u306e\u6642\u9593\u3092\u8981\u3057\u307e\u3059\uff0e CPU\u5b9f\u88c5\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3068\u304d\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3059\uff0e \u3082\u3057\uff0c\u3042\u306a\u305f\u304c\u3053\u306e\u64cd\u4f5c\u3092\u5fc5\u8981\u3068\u3057\u3066\u3044\u308b\u306a\u3089\u3070\uff0c \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e \u3053\u306e\u884c \u3092 \u30b3\u30e1\u30f3\u30c8\u89e3\u9664\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e","title":"Tensor Operations"},{"location":"reference/#linear-algebra-operations","text":"\u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f\u69d8\u3005\u306a\u4e00\u822c\u7684\u306a\u7dda\u5f62\u4ee3\u6570\u306e\u64cd\u4f5c\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e","title":"Linear Algebra Operations"},{"location":"reference/#convolution-operations","text":"\u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f convolution \u306b\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3059\uff0e","title":"Convolution Operations"},{"location":"reference/#normalization-operation","text":"\u3053\u308c\u306f\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u3084\u305d\u308c\u306b\u95a2\u4fc2\u3057\u305f\u3082\u306e\u3092\u542b\u307f\u307e\u3059\uff0e","title":"Normalization Operation"},{"location":"reference/#device-operation","text":"\u3053\u308c\u3089\u306e\u64cd\u4f5c\u306f\u30c7\u30d0\u30a4\u30b9\u306b\u95a2\u4fc2\u3057\u305f\u3082\u306e\u3067\u3059\uff0e","title":"Device Operation"},{"location":"reference/#builders","text":"","title":"Builders"},{"location":"reference/#softmax-builders","text":"\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u5c64\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3059\uff0e class SoftmaxBuilder #include cfsm-builder.h","title":"Softmax Builders"},{"location":"reference/#optimizers","text":"\u3042\u306a\u305f\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u6574\u3059\u308b\u305f\u3081\u306e\u69d8\u3005\u306a\u6700\u9069\u5316\u95a2\u6570(optimizers)","title":"Optimizers"},{"location":"saving_and_loading/","text":"\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f Note populate \u306f\u5c45\u4f4f\u3059\u308b\uff0c\u751f\u606f\u3059\u308b\uff0c\u4eba\u3092\u5c45\u4f4f\u3055\u305b\u308b\uff0c\u690d\u6c11\u3059\u308b\u3068\u3044\u3046\u610f\u5473\u306e\u52d5\u8a5e\u3067\u3059\uff0e dynet\u306eC++\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u30e6\u30fc\u30b6\u306b\u30e2\u30c7\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4fdd\u5b58\u3068\u305d\u306e\u8aad\u307f\u8fbc\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0e \u30e6\u30fc\u30b6\u306f\u30e2\u30c7\u30eb\u3092\u4fdd\u5b58\u3059\u308b\u969b\u306b\uff12\u3064\u306e\u65b9\u6cd5\u3092\u9078\u629e\u3067\u304d\u307e\u3059\uff0e \u57fa\u672c\u7684\u306a\u4f7f\u7528\u306b\u304a\u3044\u3066\u306f\u307b\u3068\u3093\u3069\u306e\u5834\u5408\uff0c\u5b8c\u5168\u306a ParameterCollection \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u304c \u3067\u304d\u307e\u3059\uff0e\u8aad\u307f\u8fbc\u307f\u6642\u306b\u304a\u3044\u3066\uff0c\u30e6\u30fc\u30b6\u306f\u30e2\u30c7\u30eb\u304c\u4fdd\u5b58\u3055\u308c\u305f\u3068\u304d\u306b\u5b58\u5728\u3057\u3066\u3044\u305f\u306e\u3068 \u540c\u3058\u30d1\u30e9\u30e1\u30fc\u30bf\u5909\u6570\u3092\u5b9a\u7fa9\u3057\uff0c\u5272\u308a\u5f53\u3066\u308b\u3079\u304d\u3067\u3059\uff0e(\u3053\u308c\u306f\u901a\u5e38\uff0c\u4e21\u65b9\u306e\u30b3\u30fc\u30c9\u30d1\u30b9\u306b\u3088\u3063\u3066 \u540c\u3058\u30d1\u30e9\u30e1\u30fc\u30bf\u4f5c\u6210\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\uff0e) \u305d\u3057\u3066\uff0c populate \u3092\u547c\u3073\u51fa\u3057\uff0c\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3079\u304d\u30d1\u30e9\u30fc\u30e1\u30bf\u3092\u6709\u3059\u308b ParameterCollection \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u6e21\u3057\u307e\u3059\uff0e #include dynet/io.h //save end ParameterCollection m; Parameter a = m.add_parameters({100}); LookupParameter b = m.add_lookup_parameters(10, {100}); Parameter c = m.add_parameters({1000}); { dynet::TextFileSaver s( /tmp/tmp.model ); s.save(m); } //load end ParameterCollection m; m.add_parameters({100}); m.add_lookup_parameters(10, {100}); m.add_parameters({1000}); { dynet::TextFileLoader l( /tmp/tmp.model ); l.populate(m); } \u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u3044\u304f\u3064\u304b\u306e\u5834\u5408\u306b\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e00\u90e8\u3060\u3051\u3092\u4fdd\u5b58\u3067\u304d\u308b\u3068\u4fbf\u5229\u3067\u3059\uff0e (\u4f8b\u3048\u3070\uff0c\u4e8b\u524d\u5b66\u7fd2\u306e\u305f\u3081\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u51fa\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u3067\u3059) \u3053\u3053\u3067\u306f\uff0c Parameter \uff0c\u3082\u3057\u304f\u306f LookupParameter \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u967d\u306b\u4fdd\u5b58\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c \u3067\u304d\u308b\u3053\u3068\u3092\u8aac\u660e\u3057\u307e\u3059\uff0e\u30e6\u30fc\u30b6\u306f\u90e8\u5206\u7684\u306a\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f\u306e\u305f\u3081\u306b\u30ad\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e #include dynet/io.h //save end ParameterCollection m1, m2; m1.add_parameters({10}, a ); m1.add_lookup_parameters{10, {2}, la ); Parameter param_b = m2.add_parameters({3, 7}); { dynet::TextFileSaver s( /tmp/tmp.model ); s.save(m1, /namespace_tmp/ ); s.save(param_b, param_b ); } //load end ParameterCollection m; m.add_parameters({10}); m.add_lookup_paramters(10, {2}); { dyent::TextFileLoader l( /tmp/tmp.model ); l.populate(m, /namespace_tmp/ ); Parameter param_b = m.add_parameters({3, 7}); l.populate(param_b, param_b ); } //load end // \u30e6\u30fc\u30b6\u30fc\u306f\u30e2\u30c7\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u306e\u3068\u540c\u7b49\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f7f\u7528\u53ef\u80fd\u3067\u3059\uff0e ParameterCollection m; Parameter parm_a, param_b; LookupParameter l_param; { dynet::TextFileLoader l( /tmp/tmp.model ); param_a = l.load_parm(m, /namespace_tmp/a ); l_param = l.load_lookup_param(m, /namespace_tmp/la ); param_b = l.load_param(m, param_b ); } Worn \u4ee5\u524d\u306edynet\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u30d3\u30eb\u30c0\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\uff0e \u3082\u306f\u3084\u5fc5\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\uff08Python\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u30d3\u30eb\u30c0\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u3092\u8a31\u53ef\u3057\u307e\u3059\uff09 \u73fe\u5728\uff0cdynet\u306f\u7c21\u6613\u306a\u30c6\u30ad\u30b9\u30c8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0e \u3053\u306e\u7c21\u5358\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u53ef\u8aad\u6027\u304c\u9ad8\u3044\u3067\u3059\uff0e\u3053\u306e\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u306f \u57fa\u672c\u7684\u306a\u30b9\u30c8\u30ec\u30fc\u30b8\u30d6\u30ed\u30c3\u30af\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u4e00\u3064\u306e\u57fa\u672c\u7684\u306a\u30d6\u30ed\u30c3\u30af\u306f\uff11\u884c\u76ee\u306e \u30e1\u30bf\u30c7\u30fc\u30bf\u60c5\u5831\u304b\u3089\u59cb\u307e\u308a\u307e\u3059\uff0e #object_type# object_name dimension block_size \u3068\u6b8b\u308a\u306e\u90e8\u5206\u306e\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u304b\u3089\u69cb\u6210 \u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u8aad\u307f\u8fbc\u307f\u30d7\u30ed\u30bb\u30b9\u306e\u9593\uff0cdynet\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066 \u30e6\u30fc\u30b6\u304c\u8aad\u307f\u8fbc\u307f\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u914d\u7f6e\u3092\u884c\u3044\u307e\u3059\uff0e","title":"\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f"},{"location":"saving_and_loading/#_1","text":"Note populate \u306f\u5c45\u4f4f\u3059\u308b\uff0c\u751f\u606f\u3059\u308b\uff0c\u4eba\u3092\u5c45\u4f4f\u3055\u305b\u308b\uff0c\u690d\u6c11\u3059\u308b\u3068\u3044\u3046\u610f\u5473\u306e\u52d5\u8a5e\u3067\u3059\uff0e dynet\u306eC++\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u30e6\u30fc\u30b6\u306b\u30e2\u30c7\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4fdd\u5b58\u3068\u305d\u306e\u8aad\u307f\u8fbc\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0e \u30e6\u30fc\u30b6\u306f\u30e2\u30c7\u30eb\u3092\u4fdd\u5b58\u3059\u308b\u969b\u306b\uff12\u3064\u306e\u65b9\u6cd5\u3092\u9078\u629e\u3067\u304d\u307e\u3059\uff0e \u57fa\u672c\u7684\u306a\u4f7f\u7528\u306b\u304a\u3044\u3066\u306f\u307b\u3068\u3093\u3069\u306e\u5834\u5408\uff0c\u5b8c\u5168\u306a ParameterCollection \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u304c \u3067\u304d\u307e\u3059\uff0e\u8aad\u307f\u8fbc\u307f\u6642\u306b\u304a\u3044\u3066\uff0c\u30e6\u30fc\u30b6\u306f\u30e2\u30c7\u30eb\u304c\u4fdd\u5b58\u3055\u308c\u305f\u3068\u304d\u306b\u5b58\u5728\u3057\u3066\u3044\u305f\u306e\u3068 \u540c\u3058\u30d1\u30e9\u30e1\u30fc\u30bf\u5909\u6570\u3092\u5b9a\u7fa9\u3057\uff0c\u5272\u308a\u5f53\u3066\u308b\u3079\u304d\u3067\u3059\uff0e(\u3053\u308c\u306f\u901a\u5e38\uff0c\u4e21\u65b9\u306e\u30b3\u30fc\u30c9\u30d1\u30b9\u306b\u3088\u3063\u3066 \u540c\u3058\u30d1\u30e9\u30e1\u30fc\u30bf\u4f5c\u6210\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\uff0e) \u305d\u3057\u3066\uff0c populate \u3092\u547c\u3073\u51fa\u3057\uff0c\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3079\u304d\u30d1\u30e9\u30fc\u30e1\u30bf\u3092\u6709\u3059\u308b ParameterCollection \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u6e21\u3057\u307e\u3059\uff0e #include dynet/io.h //save end ParameterCollection m; Parameter a = m.add_parameters({100}); LookupParameter b = m.add_lookup_parameters(10, {100}); Parameter c = m.add_parameters({1000}); { dynet::TextFileSaver s( /tmp/tmp.model ); s.save(m); } //load end ParameterCollection m; m.add_parameters({100}); m.add_lookup_parameters(10, {100}); m.add_parameters({1000}); { dynet::TextFileLoader l( /tmp/tmp.model ); l.populate(m); } \u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u3044\u304f\u3064\u304b\u306e\u5834\u5408\u306b\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e00\u90e8\u3060\u3051\u3092\u4fdd\u5b58\u3067\u304d\u308b\u3068\u4fbf\u5229\u3067\u3059\uff0e (\u4f8b\u3048\u3070\uff0c\u4e8b\u524d\u5b66\u7fd2\u306e\u305f\u3081\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u51fa\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u3067\u3059) \u3053\u3053\u3067\u306f\uff0c Parameter \uff0c\u3082\u3057\u304f\u306f LookupParameter \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u967d\u306b\u4fdd\u5b58\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c \u3067\u304d\u308b\u3053\u3068\u3092\u8aac\u660e\u3057\u307e\u3059\uff0e\u30e6\u30fc\u30b6\u306f\u90e8\u5206\u7684\u306a\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f\u306e\u305f\u3081\u306b\u30ad\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e #include dynet/io.h //save end ParameterCollection m1, m2; m1.add_parameters({10}, a ); m1.add_lookup_parameters{10, {2}, la ); Parameter param_b = m2.add_parameters({3, 7}); { dynet::TextFileSaver s( /tmp/tmp.model ); s.save(m1, /namespace_tmp/ ); s.save(param_b, param_b ); } //load end ParameterCollection m; m.add_parameters({10}); m.add_lookup_paramters(10, {2}); { dyent::TextFileLoader l( /tmp/tmp.model ); l.populate(m, /namespace_tmp/ ); Parameter param_b = m.add_parameters({3, 7}); l.populate(param_b, param_b ); } //load end // \u30e6\u30fc\u30b6\u30fc\u306f\u30e2\u30c7\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u306e\u3068\u540c\u7b49\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f7f\u7528\u53ef\u80fd\u3067\u3059\uff0e ParameterCollection m; Parameter parm_a, param_b; LookupParameter l_param; { dynet::TextFileLoader l( /tmp/tmp.model ); param_a = l.load_parm(m, /namespace_tmp/a ); l_param = l.load_lookup_param(m, /namespace_tmp/la ); param_b = l.load_param(m, param_b ); } Worn \u4ee5\u524d\u306edynet\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u30d3\u30eb\u30c0\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\uff0e \u3082\u306f\u3084\u5fc5\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\uff08Python\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u30d3\u30eb\u30c0\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u3092\u8a31\u53ef\u3057\u307e\u3059\uff09 \u73fe\u5728\uff0cdynet\u306f\u7c21\u6613\u306a\u30c6\u30ad\u30b9\u30c8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0e \u3053\u306e\u7c21\u5358\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u53ef\u8aad\u6027\u304c\u9ad8\u3044\u3067\u3059\uff0e\u3053\u306e\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u306f \u57fa\u672c\u7684\u306a\u30b9\u30c8\u30ec\u30fc\u30b8\u30d6\u30ed\u30c3\u30af\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u4e00\u3064\u306e\u57fa\u672c\u7684\u306a\u30d6\u30ed\u30c3\u30af\u306f\uff11\u884c\u76ee\u306e \u30e1\u30bf\u30c7\u30fc\u30bf\u60c5\u5831\u304b\u3089\u59cb\u307e\u308a\u307e\u3059\uff0e #object_type# object_name dimension block_size \u3068\u6b8b\u308a\u306e\u90e8\u5206\u306e\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u304b\u3089\u69cb\u6210 \u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u8aad\u307f\u8fbc\u307f\u30d7\u30ed\u30bb\u30b9\u306e\u9593\uff0cdynet\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066 \u30e6\u30fc\u30b6\u304c\u8aad\u307f\u8fbc\u307f\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u914d\u7f6e\u3092\u884c\u3044\u307e\u3059\uff0e","title":"\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f"},{"location":"trouble_shorting/","text":"\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0 nvidia-smi\u304c\u3046\u307e\u304f\u8868\u793a\u3055\u308c\u306a\u3044\uff0e apt install \u3092\u52e7\u3081\u3089\u308c\u308b\uff0e \u524d\u65e5\u307e\u3067\u554f\u984c\u306a\u304f\u4f7f\u7528\u3067\u304d\u3066\u3044\u305f\u3068\u3044\u3046\u3053\u3068\u306f\uff0c\u524d\u65e5\u884c\u3063\u305f apt upgrade \u306b\u3088\u3063\u3066 nvidia\u95a2\u9023\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3063\u305f\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\uff0e \u3053\u306e\u5834\u5408\u306f\uff0c\u30d7\u30ed\u30d7\u30e9\u30a4\u30a8\u30bf\u30ea\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u3082\u3046\u4e00\u5ea6\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\uff0e sudo apt install cuda","title":"\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0"},{"location":"trouble_shorting/#_1","text":"","title":"\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0"},{"location":"trouble_shorting/#nvidia-smiapt-install","text":"\u524d\u65e5\u307e\u3067\u554f\u984c\u306a\u304f\u4f7f\u7528\u3067\u304d\u3066\u3044\u305f\u3068\u3044\u3046\u3053\u3068\u306f\uff0c\u524d\u65e5\u884c\u3063\u305f apt upgrade \u306b\u3088\u3063\u3066 nvidia\u95a2\u9023\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3063\u305f\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\uff0e \u3053\u306e\u5834\u5408\u306f\uff0c\u30d7\u30ed\u30d7\u30e9\u30a4\u30a8\u30bf\u30ea\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u3082\u3046\u4e00\u5ea6\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\uff0e sudo apt install cuda","title":"nvidia-smi\u304c\u3046\u307e\u304f\u8868\u793a\u3055\u308c\u306a\u3044\uff0eapt install\u3092\u52e7\u3081\u3089\u308c\u308b\uff0e"},{"location":"unorthodox_design/","text":"Unorthodox Design unorthodox \u975e\u6b63\u7d71\u6d3e\u3068\u3044\u3046\u610f\u5473\uff0e\u3088\u3063\u3066unotrhodox design\u306f\u975e\u6b63\u7d71\u7684\u306a\u30c7\u30b6\u30a4\u30f3\u3068\u8a33\u3055\u308c\u308b \u3044\u304f\u3064\u304b\u306e\u7b87\u6240\u3067\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5b9f\u88c5\u3068\u306f\u7570\u306a\u308b\u3092dynet\u306f\u9078\u629e\u3057\u307e\u3057\u305f\uff0e \u3082\u3057\u304f\u306f\uff0c\u3042\u306a\u305f\u304c\u60f3\u5b9a\u3057\u3066\u3044\u308b\u5b9f\u88c5\u65b9\u6cd5\u3068\u306f\u5e7e\u5206\u7570\u306a\u308b\u7b87\u6240\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e \u4e0b\u8a18\u306b\u975e\u6b63\u7d71\u7684\u306a\u30c7\u30b6\u30a4\u30f3\u3092\u9078\u629e\u3057\u305f\u7b87\u6240\u306e\u30ea\u30b9\u30c8\u3092\u793a\u3057\u307e\u3059\uff0e \u3053\u308c\u3092\u8aad\u3080\u3053\u3068\u306b\u3088\u308a\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u304d\u306b\u9a5a\u304f\u306e\u3092\u907f\u3051\u308b\u3053\u3068\u304c\u304d\u307e\u3059. Sparse Update Note Sparse Update = \u758e\u306a\u66f4\u65b0 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\uff0cdynet\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u306f LookupParameters \u3092\u901a\u3057\u3066 \u758e\u306a\u66f4\u65b0\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e \u3064\u307e\u308a\uff0c\u3053\u306e\u610f\u5473\u306f LookupParameters \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308a\uff0c\u7279\u5b9a\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e \u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u304b\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u66f4\u65b0\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u306f \u4f7f\u7528\u6e08\u307f\u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u30eb\u30fc\u30d7\u3057\uff0c\u672a\u4f7f\u7528\u306e\u5024\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\uff0e \u3053\u308c\u306f\u3044\u304f\u3064\u304b\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u52b9\u7387\u3092\u6539\u5584\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u3042\u306a\u305f\u304c10\u4e07\u8a9e\u306e\u8a9e\u5f59\u306e\u305f\u3081\u306e\u57cb\u3081\u8fbc\u307f\u3092\u6301\u3063\u3066\u3044\u3066\uff0c\u3042\u306a\u305f\u3054\u7279\u5b9a\u306e\u66f4\u65b0\u3067 \u305d\u308c\u3089\u306e\u3046\u3061\uff15\u3064\u3060\u3051\u3092\u4f7f\u3046\u306a\u3089\u3070\uff0c\u3053\u308c\u306b\u3088\u308a\u5168\u3066\u306e10\u4e07\u8a9e\u4ee5\u4e0a\u306e\u66f4\u65b0\u3092 \u907f\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\uff0e\u305f\u3060\u3057\uff0c\u6ce8\u610f\u3059\u308b\u3053\u3068\u304c\uff12\u3064\u3042\u308a\u307e\u3059\uff0e \uff11\u3064\u3081\u306f\uff0c MomentumSDGTrainer \u3068 AdamTrainer \u306e\u3088\u3046\u306a\u30e2\u30fc\u30e1\u30f3\u30bf\u30e0\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b \u66f4\u65b0\u5247\u306f\u53b3\u5bc6\u306b\u6b63\u3057\u3044\u3082\u306e\u3067\u306f\u306a\u304f\u306a\u308a\u307e\u3059\uff0e(\u3044\u304f\u3064\u304b\u306e\u52aa\u529b\u306b\u3088\u308a\u6b63\u3057\u304f\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059 \u304c\uff0c\u305d\u308c\u306f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u8907\u96d1\u306b\u3057\u307e\u3059\uff0e\u6211\u3005\u306f\u305d\u308c\u3092\u9078\u629e\u3057\u307e\u305b\u3093\u3067\u3057\u305f\uff0e)","title":"Unorthodox Design"},{"location":"unorthodox_design/#unorthodox-design","text":"unorthodox \u975e\u6b63\u7d71\u6d3e\u3068\u3044\u3046\u610f\u5473\uff0e\u3088\u3063\u3066unotrhodox design\u306f\u975e\u6b63\u7d71\u7684\u306a\u30c7\u30b6\u30a4\u30f3\u3068\u8a33\u3055\u308c\u308b \u3044\u304f\u3064\u304b\u306e\u7b87\u6240\u3067\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5b9f\u88c5\u3068\u306f\u7570\u306a\u308b\u3092dynet\u306f\u9078\u629e\u3057\u307e\u3057\u305f\uff0e \u3082\u3057\u304f\u306f\uff0c\u3042\u306a\u305f\u304c\u60f3\u5b9a\u3057\u3066\u3044\u308b\u5b9f\u88c5\u65b9\u6cd5\u3068\u306f\u5e7e\u5206\u7570\u306a\u308b\u7b87\u6240\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e \u4e0b\u8a18\u306b\u975e\u6b63\u7d71\u7684\u306a\u30c7\u30b6\u30a4\u30f3\u3092\u9078\u629e\u3057\u305f\u7b87\u6240\u306e\u30ea\u30b9\u30c8\u3092\u793a\u3057\u307e\u3059\uff0e \u3053\u308c\u3092\u8aad\u3080\u3053\u3068\u306b\u3088\u308a\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u304d\u306b\u9a5a\u304f\u306e\u3092\u907f\u3051\u308b\u3053\u3068\u304c\u304d\u307e\u3059.","title":"Unorthodox Design"},{"location":"unorthodox_design/#sparse-update","text":"Note Sparse Update = \u758e\u306a\u66f4\u65b0 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\uff0cdynet\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u306f LookupParameters \u3092\u901a\u3057\u3066 \u758e\u306a\u66f4\u65b0\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e \u3064\u307e\u308a\uff0c\u3053\u306e\u610f\u5473\u306f LookupParameters \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308a\uff0c\u7279\u5b9a\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e \u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u304b\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u66f4\u65b0\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u306f \u4f7f\u7528\u6e08\u307f\u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u30eb\u30fc\u30d7\u3057\uff0c\u672a\u4f7f\u7528\u306e\u5024\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\uff0e \u3053\u308c\u306f\u3044\u304f\u3064\u304b\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u52b9\u7387\u3092\u6539\u5584\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u3042\u306a\u305f\u304c10\u4e07\u8a9e\u306e\u8a9e\u5f59\u306e\u305f\u3081\u306e\u57cb\u3081\u8fbc\u307f\u3092\u6301\u3063\u3066\u3044\u3066\uff0c\u3042\u306a\u305f\u3054\u7279\u5b9a\u306e\u66f4\u65b0\u3067 \u305d\u308c\u3089\u306e\u3046\u3061\uff15\u3064\u3060\u3051\u3092\u4f7f\u3046\u306a\u3089\u3070\uff0c\u3053\u308c\u306b\u3088\u308a\u5168\u3066\u306e10\u4e07\u8a9e\u4ee5\u4e0a\u306e\u66f4\u65b0\u3092 \u907f\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\uff0e\u305f\u3060\u3057\uff0c\u6ce8\u610f\u3059\u308b\u3053\u3068\u304c\uff12\u3064\u3042\u308a\u307e\u3059\uff0e \uff11\u3064\u3081\u306f\uff0c MomentumSDGTrainer \u3068 AdamTrainer \u306e\u3088\u3046\u306a\u30e2\u30fc\u30e1\u30f3\u30bf\u30e0\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b \u66f4\u65b0\u5247\u306f\u53b3\u5bc6\u306b\u6b63\u3057\u3044\u3082\u306e\u3067\u306f\u306a\u304f\u306a\u308a\u307e\u3059\uff0e(\u3044\u304f\u3064\u304b\u306e\u52aa\u529b\u306b\u3088\u308a\u6b63\u3057\u304f\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059 \u304c\uff0c\u305d\u308c\u306f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u8907\u96d1\u306b\u3057\u307e\u3059\uff0e\u6211\u3005\u306f\u305d\u308c\u3092\u9078\u629e\u3057\u307e\u305b\u3093\u3067\u3057\u305f\uff0e)","title":"Sparse Update"},{"location":"xor/","text":"XOR \u8ad6\u7406\u30b2\u30fc\u30c8 A----++++ ++++++-----Z B----++++ AND(\u8ad6\u7406\u7a4d\uff09 \u8ad6\u7406\u5f0f: Z = AB A B Z 0 0 0 0 1 0 1 0 0 1 1 1 OR\uff08\u8ad6\u7406\u548c\uff09 \u8ad6\u7406\u5f0f: Z = A+B A B Z 0 0 0 0 1 1 1 0 1 1 1 1 NOT\uff08\u8ad6\u7406\u5426\u5b9a\uff09 A-----+++++----Z A Z 0 1 1 0 NAND (NOT of AND) \u5168\u3066\u304c\uff11\u306e\u3068\u304d\u306e\u307f\uff10 A B Z 0 0 1 0 1 1 1 0 1 1 1 0 XOR(eXclusive OR:\u6392\u4ed6\u7684\u8ad6\u7406\u548c\uff09 \u4e0d\u4e00\u81f4\u548c\uff08A != B\u306e\u3068\u304d\uff11\uff09 A B Z 0 0 0 0 1 1 1 0 1 1 1 0 Deeplearning\u304b\u3089\u898b\u305fXOR \u9069\u5f53\u306a\u5165\u529b\u30d9\u30af\u30c8\u30ebx\u3092\u5165\u308c\u308b\u3068\uff0c\u305d\u308c\u304c1\u304b0\u304b\u3092\u5224\u5b9a\u3059\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f5c\u6210\u3059\u308b\uff0e \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf \\begin{equation} X= \\begin{bmatrix} 0 0 \\\\ 0 1 \\\\ 1 0 \\\\ 1 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} X= \\begin{bmatrix} 0 & 0 \\\\ 0 & 1 \\\\ 1 & 0 \\\\ 1 & 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} y= \\begin{bmatrix} 0 \\\\ 1 \\\\ 1 \\\\ 0 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} y= \\begin{bmatrix} 0 \\\\ 1 \\\\ 1 \\\\ 0 \\\\ \\end{bmatrix} \\end{equation} Computation Graph \u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u308bXOR \uff11\uff0e\u96a0\u308c\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u304c\uff13\u3064\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\uff08\u5358\u7d14\uff09 1.1 \u8a08\u7b97\u5f0f \u4e0b\u8a18\u306e\u3088\u3046\u306a\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3057\u3066XOR\u3092\u89e3\u3044\u3066\u307f\u308b\uff0e \u307e\u305f\uff0c\u5404\u5909\u6570\u306e\u5b9a\u7fa9\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\uff0e Note \u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u8868\u73fe\u3068\u7dda\u5f62\u4ee3\u6570\u7684\u306a\u8868\u73fe\u306e\u9055\u3044\u306b\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\uff0e \u4f8b\u3048\u3070\uff0c\u8a08\u7b97\u30b0\u30e9\u30d5\u3067\u306f\u30d0\u30a4\u30a2\u30b9 \\boldsymbol{b^1} \\boldsymbol{b^1} \u306f\uff11\u3064\u306e\u30ce\u30fc\u30c9\u3067\u3059\u304c\uff0c \u7dda\u5f62\u4ee3\u6570\u306e\u8868\u73fe\u306b\u304a\u3044\u3066\u306f\u8981\u7d20\u6570\uff12\u306e\u30d9\u30af\u30c8\u30eb\u3067\u3059\uff0e dynet\u3067\u306f\u7dda\u5f62\u4ee3\u6570\u7684\u306a\u8868\u73fe\u3092\u7528\u3044\u3066\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3057\u3066\u3044\u304d\u307e\u3059\uff0e \\begin{equation} \\boldsymbol{x} = \\begin{bmatrix} x_1 \\\\ x_2 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{x} = \\begin{bmatrix} x_1 \\\\ x_2 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(1)}} = \\begin{bmatrix} \\omega^1_{11} \\omega^1_{12}\\\\ \\omega^1_{21} \\omega^1_{22}\\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(1)}} = \\begin{bmatrix} \\omega^1_{11} & \\omega^1_{12}\\\\ \\omega^1_{21} & \\omega^1_{22}\\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(1)}} = \\begin{bmatrix} b^1_{1} \\\\ b^1_{2}\\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(1)}} = \\begin{bmatrix} b^1_{1} \\\\ b^1_{2}\\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(2)}} = \\begin{bmatrix} \\omega^2{11} \\omega^2_{12}\\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(2)}} = \\begin{bmatrix} \\omega^2{11} & \\omega^2_{12}\\\\ \\end{bmatrix} \\end{equation} Note \u91cd\u307f\u884c\u5217\u306f \u884c\u5217 \u3067\u3059\uff0e\u3057\u305f\u304c\u3063\u3066 \\boldsymbol{W^{(2)}} \\boldsymbol{W^{(2)}} \u306f\u884c\u5217\u306b\u306a\u308a\u307e\u3059\uff0e \u8981\u7d20\u6570\u304c\uff12\u3064\u3057\u304b\u306a\u3044\u3068\u306f\u8a00\u3048\u884c\u5217\u3067\u3059\u306e\u3067\uff0c\u6a2a\u9577\u306e\u5f62\u306b\u306a\u308a\u307e\u3059\uff0e \\boldsymbol{W^{(2)}} \\boldsymbol{W^{(2)}} \u3092\u8981\u7d20\u6570\uff12\u306e\u30d9\u30af\u30c8\u30eb\u3060\u3068\u52d8\u9055\u3044\u3059\u308b\u3068\uff0c \u7e26\u9577\u306e\u5f62\u3092\u60f3\u50cf\u3057\uff0c \\boldsymbol{W^{(2)}z^{(1)}} \\boldsymbol{W^{(2)}z^{(1)}} \u306e\u8a08\u7b97\u304c\u3046\u307e\u304f\u884c\u304b\u306a\u304f\u306a\u308a\u307e\u3059. \\begin{equation} \\boldsymbol{b^{(2)}} = \\begin{bmatrix} b^2_{1} \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(2)}} = \\begin{bmatrix} b^2_{1} \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{z^{(1)}} = \\begin{bmatrix} z^1_1 \\\\ z^1_2 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{z^{(1)}} = \\begin{bmatrix} z^1_1 \\\\ z^1_2 \\\\ \\end{bmatrix} \\end{equation} f^{(1)} = ReLU \\\\ f^{(2)} = 1 f^{(1)} = ReLU \\\\ f^{(2)} = 1 \u3053\u306e\u5185\uff0c \\boldsymbol{W^1} \\boldsymbol{W^1} , \\boldsymbol{W^2} \\boldsymbol{W^2} , \\boldsymbol{b^1} \\boldsymbol{b^1} ,\u305d\u3057\u3066 \\boldsymbol{b^2} \\boldsymbol{b^2} \u306fdynet\u3067\u3044\u3046 Parameter \u3067\u3042\u308a\u5b66\u7fd2\u306b\u3088\u3063\u3066\u7372\u5f97\u3055\u308c\u307e\u3059\uff0e \u8a08\u7b97\u5f0f\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e \\boldsymbol{z^1} = f^{(1)} ( \\boldsymbol{W^1x} + \\boldsymbol{b^1} ) \\\\ \\hat{y} = f^{(2)} ( \\boldsymbol{W^2x} + \\boldsymbol{b^2} ) \\boldsymbol{z^1} = f^{(1)} ( \\boldsymbol{W^1x} + \\boldsymbol{b^1} ) \\\\ \\hat{y} = f^{(2)} ( \\boldsymbol{W^2x} + \\boldsymbol{b^2} ) 1.2 \u5b9f\u88c5\u306e\u524d\u306b\u624b\u3067\u89e3\u3044\u3066\u307f\u308b dynet\u306b\u8a08\u7b97\u3055\u305b\u308b\u524d\u306b\uff0c\u81ea\u5206\u3067XOR\u554f\u984c\u3092\u3053\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u89e3\u3051\u308b\u304b\u3069\u3046\u304b \u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u307e\u305a\uff0c\u4e0b\u8a18\u306e\u3088\u3046\u306b\u305d\u308c\u305e\u308c\u5024\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u3057\u307e\u3059\uff0e y = 1 y = 1 \\begin{equation} \\boldsymbol{x} = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{x} = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(1)}} = \\begin{bmatrix} 1 1 \\\\ 1 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(1)}} = \\begin{bmatrix} 1 & 1 \\\\ 1 & 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(1)}} = \\begin{bmatrix} 0 \\\\ 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(1)}} = \\begin{bmatrix} 0 \\\\ 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(2)}} = \\begin{bmatrix} 1 -2 \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(2)}} = \\begin{bmatrix} 1 & -2 \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(2)}} = \\begin{bmatrix} 0 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(2)}} = \\begin{bmatrix} 0 \\\\ \\end{bmatrix} \\end{equation} \u3059\u308b\u3068\uff0c \\begin{equation} \\boldsymbol{u^{(1)}} = \\boldsymbol{W^{(1)}x} = \\begin{bmatrix} 1 1 \\\\ 1 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix} \\begin{equation} \\boldsymbol{u^{(1)}} = \\boldsymbol{W^{(1)}x} = \\begin{bmatrix} 1 & 1 \\\\ 1 & 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix} \\begin{equation} \\boldsymbol{z^{(1)}} = f^{(1)}(\\boldsymbol{u^{(1)}} + \\boldsymbol{b^{(1)}}) \\end{equation} = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} \\begin{equation} \\boldsymbol{z^{(1)}} = f^{(1)}(\\boldsymbol{u^{(1)}} + \\boldsymbol{b^{(1)}}) \\end{equation} = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} \\begin{equation} \\boldsymbol{u^{(2)}} = \\boldsymbol{W^{(1)}x} = \\begin{bmatrix} 1 -2 \\\\ \\end{bmatrix} \\end{equation} \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} = 1 \\begin{equation} \\boldsymbol{u^{(2)}} = \\boldsymbol{W^{(1)}x} = \\begin{bmatrix} 1 & -2 \\\\ \\end{bmatrix} \\end{equation} \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} = 1 \\boldsymbol{z^{(2)}} = f^{(2)}(1) = 1 \\boldsymbol{z^{(2)}} = f^{(2)}(1) = 1 \u3088\u3063\u3066 y = \\hat{y} y = \\hat{y} \u3068\u306a\u308a\uff0c\u5c11\u306a\u304f\u3068\u3082 \\boldsymbol{x}=(0,1)^T \\boldsymbol{x}=(0,1)^T \u306b\u304a\u3044\u3066\u306f \u5b66\u7fd2\u304c\u53ef\u80fd\u306a\u3053\u3068\u304c\u793a\u3055\u308c\u305f\uff0e\u3061\u306a\u307f\u306b\uff0c \\boldsymbol{x} \\boldsymbol{x} \u304c\u4ed6\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u3082 \u3084\u3063\u3066\u307f\u308b\u3068\u3046\u307e\u304f\u884c\u304f\u3053\u3068\u304c\u308f\u304b\u308b\uff0e 1.3 \u5b9f\u88c5 \u304a\u307e\u305f\u305b\u3057\u307e\u3057\u305f\uff0edynet\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e \u6ce8\u610f\u3059\u308b\u3053\u3068\u304c\uff11\u3064\u3042\u308a\u307e\u3059\uff0e\u6211\u3005\u306f\u3053\u308c\u304b\u3089\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8868\u73fe \u3059\u308b\u306e\u3067\u306f\u306a\u304f\uff0c\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u8868\u73fe\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e\u3064\u307e\u308a\u5c64\u3092\u7a4d\u3093\u3067\u3044\u304f\u306e\u3067\u306f\u306a\u304f \u7dda\u5f62\u4ee3\u6570\u3092\u5229\u7528\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u611f\u899a\u3067\u3059\uff0e \u4eca\u56de\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff0e #include iostream #include vector #include dynet/training.h #include dynet/expr.h #include dynet/model.h #include gpop/Series.hpp int main(int argc, char* argv[]) { // dynet\u306e\u521d\u671f\u5316 dynet::initialize(argc, argv); // \u8a2d\u5b9a const int ITERATIONS = 30; const int HIDDEN_L1_SIZE = 2; // \u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9 dynet::ParameterCollection model; dynet::SimpleSGDTrainer trainer(model); // \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a (\u30d1\u30e9\u30e1\u30fc\u30bf = \u6700\u9069\u5316\u3055\u308c\u308b\u5909\u6570\uff09 // W1 (2x2) \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210 dynet::Parameter p_W1 = model.add_parameters({HIDDEN_L1_SIZE, 2}); // b1 (2x1) \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210 dynet::Parameter p_b1 = model.add_parameters({HIDDEN_L1_SIZE}); // W2 (1x2) \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210 dynet::Parameter p_W2 = model.add_parameters({1, HIDDEN_L1_SIZE}); // b2 (1x1) \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210 dynet::Parameter p_b2 = model.add_parameters({1}); // \u30ce\u30fc\u30c9\u306e\u4f5c\u6210\u3068\u8a08\u7b97\u30b0\u30e9\u30d5\u3078\u306e\u767b\u9332 dynet::ComputationGraph cg; dynet::Expression W1 = dynet::parameter(cg, p_W1); dynet::Expression b1 = dynet::parameter(cg, p_b1); dynet::Expression W2 = dynet::parameter(cg, p_W2); dynet::Expression b2 = dynet::parameter(cg, p_b2); // \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u53ca\u3073\uff0c\u8a08\u7b97\u30b0\u30e9\u30d5\u3078\u306e\u5165\u529b\u5909\u6570x_value\u3092\u5ba3\u8a00\u3057\uff0c\u5909\u66f4\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b\u53c2\u7167\u6e21\u3057\u3092\u3057\u307e\u3059\uff0e std::vector dynet::real x_value(2); dynet::Expression x = dynet::input(cg, {2}, x_value); // \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u53ca\u3073\uff0c\u8a08\u7b97\u30b0\u30e9\u30d5\u3078\u306e\u5165\u529b\u5909\u6570y_value\u3092\u5ba3\u8a00\u3057\uff0c\u5909\u66f4\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b\u53c2\u7167\u6e21\u3057\u3092\u3057\u307e\u3059\uff0e dynet::real y_value; dynet::Expression y = dynet::input(cg, y_value); // \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30ce\u30fc\u30c9\u306e\u63a5\u7d9a\u95a2\u4fc2\u3092\u5ba3\u8a00\u3059\u308b\uff0e dynet::Expression z1 = dynet::rectify(W1*x+b1); dynet::Expression y_pred = W2*z1+b2; dynet::Expression loss_expr = dynet::squared_distance(y_pred, y); // \u69cb\u7bc9\u3057\u305f\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u63cf\u3044\u3066\u307f\u308b\uff0e\u305d\u308c\u304c\u50d5\u306b\u306f\u697d\u3057\u304b\u3063\u305f\u304b\u3089 cg.print_graphviz(); // \u8aa4\u5dee\u3092\u8a18\u9332\u3059\u308b std::vector double loss_vec; // \u6559\u5e2b\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\uff0c\u5b66\u7fd2\u3055\u305b\u3066\u307f\u308b for (int iter = 0; iter ITERATIONS; iter++) { double loss_value = 0; for (int mi = 0; mi 4; mi++) { //\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\u958b\u59cb(x,y) bool x1 = mi%2; bool x2 = (mi / 2)%2; std::cout x1 : x2 std::boolalpha x1 \\t x2 std::endl; x_value[0] = x1 ? 1 : -1; x_value[1] = x2 ? 1 : -1; std::cout x_value[0] : x_value[0] \\t x_value[1] : x_value[1] std::endl; y_value = (x1 != x2) ? 1 : -1; //\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\u7d42\u4e86(x,y) //\u5b66\u7fd2\u5b9f\u884c loss_value += dynet::as_scalar(cg.forward(loss_expr)); cg.backward(loss_expr); trainer.update(); } loss_value /= 4; std::cout E = loss_value std::endl; loss_vec.push_back(loss_value); } // \u8aa4\u5dee\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b Series plot( error ); plot.plot(loss_vec); plot.show(); std::cin.get(); // \u7d50\u679c\u3092\u78ba\u304b\u3081\u308b x_value[0] = -1; x_value[1] = -1; cg.forward(loss_expr); std::cout [-1,-1] -1 : dynet::as_scalar(y_pred.value()) std::endl; x_value[0] = -1; x_value[1] = 1; cg.forward(loss_expr); std::cout [-1,1] 1 : dynet::as_scalar(y_pred.value()) std::endl; x_value[0] = 1; x_value[1] = -1; cg.forward(loss_expr); std::cout [1,-1] 1 : dynet::as_scalar(y_pred.value()) std::endl; x_value[0] = 1; x_value[1] = 1; cg.forward(loss_expr); std::cout [1,1] -1 : dynet::as_scalar(y_pred.value()) std::endl; return 0; } 1.4 \u7d50\u679c \u3046\u307e\u304f\u884c\u304f\u3068\uff0c\u8aa4\u5dee\u306f\u4e0b\u8a18\u306e\u56f3\u306e\u3088\u3046\u306b\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u304d\u307e\u3059\uff0e \u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u3053\u308c\u306f\u304b\u306a\u308a\u3046\u307e\u304f\u3044\u3063\u305f\u7d50\u679c\u3067\u3059\uff0e\u3053\u306e\u3088\u3046\u306b\u306a\u3089\u306a\u304f\u3066\u3082 \u5fc3\u914d\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff0e\u3053\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306f\u3068\u3066\u3082\u5c0f\u3055\u3044\u306e\u3067\u3046\u307e\u304f\u5b66\u7fd2\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u306f \u521d\u671f\u30e9\u30f3\u30c0\u30e0\u30b7\u30fc\u30c9\u306b\u4f9d\u5b58\u3057\u307e\u3059\uff0e\u6570\u56de\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e 2\uff0e\u96a0\u308c\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u304c8\u3064\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\uff08\u516c\u5f0f\uff09 Note xor example \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5168\u4f53\u50cf Note xor\u306e\u6570\u5b66\u7684\u89e3\u8aac \u30e2\u30c7\u30eb\u306e\u5f0f \\hat{y} = \\sigma ( \\textbf{v} \\cdot \\tanh(\\textbf{Ux} + \\textbf{b})) #include dynet/training.h #include dynet/expr.h #include dynet/io.h #include dynet/model.h #include fstream using namespace std; using namespace dynet; int main(int argc, char** argv) { dynet::initialize(argc, argv); const unsigned ITERATIONS = 30; // ParameterCollection (all the model parameters) ParameterCollection m; SimpleSGDTrainer trainer(m); //MomentumSGDTrainer trainer(m); Parameter p_W, p_b, p_V, p_a; const unsigned HIDDEN_SIZE = 3; p_W = m.add_parameters({HIDDEN_SIZE, 2}); p_b = m.add_parameters({HIDDEN_SIZE}); p_V = m.add_parameters({1, HIDDEN_SIZE}); p_a = m.add_parameters({1}); // train the parameters for (unsigned iter = 0; iter ITERATIONS; ++iter) { ComputationGraph cg; Expression W = parameter(cg, p_W); Expression b = parameter(cg, p_b); Expression V = parameter(cg, p_V); Expression a = parameter(cg, p_a); vector Expression losses; for (unsigned mi = 0; mi 4; ++mi) { bool x1 = mi % 2; bool x2 = (mi / 2) % 2; vector dynet::real x_values(2); x_values[0] = x1 ? 1 : -1; x_values[1] = x2 ? 1 : -1; float y_value = (x1 != x2) ? 1 : -1; Expression x = input(cg, {2}, x_values); Expression y = input(cg, y_value); //Expression h = tanh(W*x + b); Expression h = tanh(affine_transform({b, W, x})); //Expression h = softsign(W*x + b); Expression y_pred = affine_transform({a, V, h}); losses.push_back(squared_distance(y_pred, y)); } Expression loss_expr = sum(losses); // Print the graph, just for fun. if(iter == 0) { cg.print_graphviz(); } // Calculate the loss. Batching will automatically be done here. float loss = as_scalar(cg.forward(loss_expr)) / 4; cg.backward(loss_expr); trainer.update(); cerr E = loss endl; } } Todo reference\u3092\u8abf\u3079\u3066\uff0c\u5404\u95a2\u6570\u306e\u8aac\u660e\u3092\u4ed8\u3051\u52a0\u3048\u308b include #include dynet/training.h #include dynet/expr.h #include iostream #include fstream namespace using namespace std; using namespace dynet; initialize dynet::initialize(argc, argv); parameter setting1 \u5168\u3066\u306e\u91cd\u307f\u30d1\u30e9\u30e1\u30fc\u30bfw\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b ParameterCollection w\u3092\u4f5c\u6210\u3059\u308b\uff0e \u305d\u3057\u3066\uff0c\u305d\u306e\u91cd\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\u305f\u3081\u306e SGDTrainer \u3092\u4f5c\u6210\u3057\uff0c SGDTrainer \u306b ParameterCollection \u3092\u6e21\u3059\uff0e const unsigned ITERATIONS = 30; ParameterCollection m; SimpleSGDTrainer trainer(m); parameter setting Prameter p_W, p_b, p_V, p_a; const unsigned HIDDEN_SIZE = 3; p_W = m.add_parameters({HIDDEN_SIZE, 2}); p_b = m.add_parameters({HIDDEN_SIZE}); p_V = m.add_parameters({1, HIDDEN_SIZE}); p_a = m.add_parameters({1}); train the parameters dynet\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d5\u30a7\u30fc\u30ba\u306f for\u6587 \u3067\u56de\u3057\u307e\u3059\uff0e for (unsigned inter = 0 iter ITERATIONS; ++iter) { ComputationGraph cg; Expression W = parameter(cg, p_W); Expression b = parameter(cg, p_b); Expression V = parameter(cg, p_V); Expression a = parameter(cg, p_a); vector Expression losses; } \u6559\u5e2b\u30c7\u30fc\u30bf\u4f5c\u6210 \u4e09\u9805\u6f14\u7b97\u5b50 [?:\u6587]\u306f\u6761\u4ef6\u5206\u5c90\u51e6\u7406\u306e\uff11\u3064\u3067\uff0c\u6761\u4ef6\u304c\u771f\u304b\u507d\u306b\u3088\u308a\u51e6\u7406\u3092\u5206\u5c90\u3057\u307e\u3059\uff0e [if\u6587]\u3092\u77ed\u7e2e\u3057\u3066\u66f8\u3044\u305f\u3088\u3046\u306a\u8a18\u8ff0\u65b9\u6cd5\u306b\u306a\u308a\u307e\u3059\uff0e \u6761\u4ef6\u5f0f ? \u771f\u306e\u5834\u5408\u306e\u6587 : \u507d\u306e\u5834\u5408\u306e\u6587 \u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u6761\u4ef6\u306e\u5206\u5c90\u7d50\u679c\u304c\u5909\u6570\u3084\u30ea\u30c6\u30e9\u30eb\u306a\u3069\u306e \u5024 \u306b\u306a\u3063\u3066\u3044\u306a\u3051\u308c\u3070 \u306a\u3089\u306a\u3044\u3053\u3068\u3067\u3059\uff0e\u3088\u304f\u4ee3\u5165\u6f14\u7b97\u5b50\u3068\u4e00\u7dd2\u306b\u5229\u7528\u3055\u308c\u307e\u3059\uff0e bool variable = (result) ? true : false; for (unsigned mi = 0; mi 4; ++mi) { // \u5165\u529b\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u6210 bool x1 = mi % 2; // 0 - false, 1 - true, 2 - false, 3 - true \u5076\u5947\u5224\u5b9a bool x2 = (mi / 2) % 2; // 0 - false, 1 - false, 2 - true, 3 - true vector dynet::real x_values(2); // dynet::real\u306ffloat\u3068\u540c\u7b49 x_value[0] = x1 ? 1 : -1; x_value[1] = x2 ? 1 : -1; float y_value = (x1 != x2) ? 1 : -1; XOR\u3092[0,1]\u3067\u306f\u306a\u304f[-1,1]\u3067\u3042\u308f\u3089\u3057\u3066\u3044\u308b\u3068\u601d\u308f\u308c\u308b\uff0e\uff14\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u5168\u90e8\u3092 \u8a08\u7b97\u3059\u308b\u3068\u4e0b\u8a18\u306e\u8868\u306e\u3088\u3046\u306b\u306a\u308b\uff0e (indecs)mi x_value[0] x_value[1] y_value 0 -1 -1 -1 1 1 -1 1 2 -1 1 1 3 1 1 -1 A B Z 0 0 0 0 1 1 1 0 1 1 1 0 expression Expression x = input(cg, {2}, x_values); Expression y = input(cg, y_value);","title":"XOR"},{"location":"xor/#xor","text":"","title":"XOR"},{"location":"xor/#_1","text":"A----++++ ++++++-----Z B----++++","title":"\u8ad6\u7406\u30b2\u30fc\u30c8"},{"location":"xor/#and","text":"\u8ad6\u7406\u5f0f: Z = AB A B Z 0 0 0 0 1 0 1 0 0 1 1 1","title":"AND(\u8ad6\u7406\u7a4d\uff09"},{"location":"xor/#or","text":"\u8ad6\u7406\u5f0f: Z = A+B A B Z 0 0 0 0 1 1 1 0 1 1 1 1","title":"OR\uff08\u8ad6\u7406\u548c\uff09"},{"location":"xor/#not","text":"A-----+++++----Z A Z 0 1 1 0","title":"NOT\uff08\u8ad6\u7406\u5426\u5b9a\uff09"},{"location":"xor/#nand-not-of-and","text":"\u5168\u3066\u304c\uff11\u306e\u3068\u304d\u306e\u307f\uff10 A B Z 0 0 1 0 1 1 1 0 1 1 1 0","title":"NAND (NOT of AND)"},{"location":"xor/#xorexclusive-or","text":"\u4e0d\u4e00\u81f4\u548c\uff08A != B\u306e\u3068\u304d\uff11\uff09 A B Z 0 0 0 0 1 1 1 0 1 1 1 0","title":"XOR(eXclusive OR:\u6392\u4ed6\u7684\u8ad6\u7406\u548c\uff09"},{"location":"xor/#deeplearningxor","text":"\u9069\u5f53\u306a\u5165\u529b\u30d9\u30af\u30c8\u30ebx\u3092\u5165\u308c\u308b\u3068\uff0c\u305d\u308c\u304c1\u304b0\u304b\u3092\u5224\u5b9a\u3059\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f5c\u6210\u3059\u308b\uff0e","title":"Deeplearning\u304b\u3089\u898b\u305fXOR"},{"location":"xor/#_2","text":"\\begin{equation} X= \\begin{bmatrix} 0 0 \\\\ 0 1 \\\\ 1 0 \\\\ 1 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} X= \\begin{bmatrix} 0 & 0 \\\\ 0 & 1 \\\\ 1 & 0 \\\\ 1 & 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} y= \\begin{bmatrix} 0 \\\\ 1 \\\\ 1 \\\\ 0 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} y= \\begin{bmatrix} 0 \\\\ 1 \\\\ 1 \\\\ 0 \\\\ \\end{bmatrix} \\end{equation}","title":"\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf"},{"location":"xor/#computation-graph","text":"","title":"Computation Graph"},{"location":"xor/#xor_1","text":"","title":"\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u308bXOR"},{"location":"xor/#13","text":"","title":"\uff11\uff0e\u96a0\u308c\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u304c\uff13\u3064\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\uff08\u5358\u7d14\uff09"},{"location":"xor/#11","text":"\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3057\u3066XOR\u3092\u89e3\u3044\u3066\u307f\u308b\uff0e \u307e\u305f\uff0c\u5404\u5909\u6570\u306e\u5b9a\u7fa9\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\uff0e Note \u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u8868\u73fe\u3068\u7dda\u5f62\u4ee3\u6570\u7684\u306a\u8868\u73fe\u306e\u9055\u3044\u306b\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\uff0e \u4f8b\u3048\u3070\uff0c\u8a08\u7b97\u30b0\u30e9\u30d5\u3067\u306f\u30d0\u30a4\u30a2\u30b9 \\boldsymbol{b^1} \\boldsymbol{b^1} \u306f\uff11\u3064\u306e\u30ce\u30fc\u30c9\u3067\u3059\u304c\uff0c \u7dda\u5f62\u4ee3\u6570\u306e\u8868\u73fe\u306b\u304a\u3044\u3066\u306f\u8981\u7d20\u6570\uff12\u306e\u30d9\u30af\u30c8\u30eb\u3067\u3059\uff0e dynet\u3067\u306f\u7dda\u5f62\u4ee3\u6570\u7684\u306a\u8868\u73fe\u3092\u7528\u3044\u3066\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3057\u3066\u3044\u304d\u307e\u3059\uff0e \\begin{equation} \\boldsymbol{x} = \\begin{bmatrix} x_1 \\\\ x_2 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{x} = \\begin{bmatrix} x_1 \\\\ x_2 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(1)}} = \\begin{bmatrix} \\omega^1_{11} \\omega^1_{12}\\\\ \\omega^1_{21} \\omega^1_{22}\\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(1)}} = \\begin{bmatrix} \\omega^1_{11} & \\omega^1_{12}\\\\ \\omega^1_{21} & \\omega^1_{22}\\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(1)}} = \\begin{bmatrix} b^1_{1} \\\\ b^1_{2}\\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(1)}} = \\begin{bmatrix} b^1_{1} \\\\ b^1_{2}\\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(2)}} = \\begin{bmatrix} \\omega^2{11} \\omega^2_{12}\\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(2)}} = \\begin{bmatrix} \\omega^2{11} & \\omega^2_{12}\\\\ \\end{bmatrix} \\end{equation} Note \u91cd\u307f\u884c\u5217\u306f \u884c\u5217 \u3067\u3059\uff0e\u3057\u305f\u304c\u3063\u3066 \\boldsymbol{W^{(2)}} \\boldsymbol{W^{(2)}} \u306f\u884c\u5217\u306b\u306a\u308a\u307e\u3059\uff0e \u8981\u7d20\u6570\u304c\uff12\u3064\u3057\u304b\u306a\u3044\u3068\u306f\u8a00\u3048\u884c\u5217\u3067\u3059\u306e\u3067\uff0c\u6a2a\u9577\u306e\u5f62\u306b\u306a\u308a\u307e\u3059\uff0e \\boldsymbol{W^{(2)}} \\boldsymbol{W^{(2)}} \u3092\u8981\u7d20\u6570\uff12\u306e\u30d9\u30af\u30c8\u30eb\u3060\u3068\u52d8\u9055\u3044\u3059\u308b\u3068\uff0c \u7e26\u9577\u306e\u5f62\u3092\u60f3\u50cf\u3057\uff0c \\boldsymbol{W^{(2)}z^{(1)}} \\boldsymbol{W^{(2)}z^{(1)}} \u306e\u8a08\u7b97\u304c\u3046\u307e\u304f\u884c\u304b\u306a\u304f\u306a\u308a\u307e\u3059. \\begin{equation} \\boldsymbol{b^{(2)}} = \\begin{bmatrix} b^2_{1} \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(2)}} = \\begin{bmatrix} b^2_{1} \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{z^{(1)}} = \\begin{bmatrix} z^1_1 \\\\ z^1_2 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{z^{(1)}} = \\begin{bmatrix} z^1_1 \\\\ z^1_2 \\\\ \\end{bmatrix} \\end{equation} f^{(1)} = ReLU \\\\ f^{(2)} = 1 f^{(1)} = ReLU \\\\ f^{(2)} = 1 \u3053\u306e\u5185\uff0c \\boldsymbol{W^1} \\boldsymbol{W^1} , \\boldsymbol{W^2} \\boldsymbol{W^2} , \\boldsymbol{b^1} \\boldsymbol{b^1} ,\u305d\u3057\u3066 \\boldsymbol{b^2} \\boldsymbol{b^2} \u306fdynet\u3067\u3044\u3046 Parameter \u3067\u3042\u308a\u5b66\u7fd2\u306b\u3088\u3063\u3066\u7372\u5f97\u3055\u308c\u307e\u3059\uff0e \u8a08\u7b97\u5f0f\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e \\boldsymbol{z^1} = f^{(1)} ( \\boldsymbol{W^1x} + \\boldsymbol{b^1} ) \\\\ \\hat{y} = f^{(2)} ( \\boldsymbol{W^2x} + \\boldsymbol{b^2} ) \\boldsymbol{z^1} = f^{(1)} ( \\boldsymbol{W^1x} + \\boldsymbol{b^1} ) \\\\ \\hat{y} = f^{(2)} ( \\boldsymbol{W^2x} + \\boldsymbol{b^2} )","title":"1.1 \u8a08\u7b97\u5f0f"},{"location":"xor/#12","text":"dynet\u306b\u8a08\u7b97\u3055\u305b\u308b\u524d\u306b\uff0c\u81ea\u5206\u3067XOR\u554f\u984c\u3092\u3053\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u89e3\u3051\u308b\u304b\u3069\u3046\u304b \u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u307e\u305a\uff0c\u4e0b\u8a18\u306e\u3088\u3046\u306b\u305d\u308c\u305e\u308c\u5024\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u3057\u307e\u3059\uff0e y = 1 y = 1 \\begin{equation} \\boldsymbol{x} = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{x} = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(1)}} = \\begin{bmatrix} 1 1 \\\\ 1 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(1)}} = \\begin{bmatrix} 1 & 1 \\\\ 1 & 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(1)}} = \\begin{bmatrix} 0 \\\\ 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(1)}} = \\begin{bmatrix} 0 \\\\ 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(2)}} = \\begin{bmatrix} 1 -2 \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{W^{(2)}} = \\begin{bmatrix} 1 & -2 \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(2)}} = \\begin{bmatrix} 0 \\\\ \\end{bmatrix} \\end{equation} \\begin{equation} \\boldsymbol{b^{(2)}} = \\begin{bmatrix} 0 \\\\ \\end{bmatrix} \\end{equation} \u3059\u308b\u3068\uff0c \\begin{equation} \\boldsymbol{u^{(1)}} = \\boldsymbol{W^{(1)}x} = \\begin{bmatrix} 1 1 \\\\ 1 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix} \\begin{equation} \\boldsymbol{u^{(1)}} = \\boldsymbol{W^{(1)}x} = \\begin{bmatrix} 1 & 1 \\\\ 1 & 1 \\\\ \\end{bmatrix} \\end{equation} \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix} \\begin{equation} \\boldsymbol{z^{(1)}} = f^{(1)}(\\boldsymbol{u^{(1)}} + \\boldsymbol{b^{(1)}}) \\end{equation} = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} \\begin{equation} \\boldsymbol{z^{(1)}} = f^{(1)}(\\boldsymbol{u^{(1)}} + \\boldsymbol{b^{(1)}}) \\end{equation} = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} \\begin{equation} \\boldsymbol{u^{(2)}} = \\boldsymbol{W^{(1)}x} = \\begin{bmatrix} 1 -2 \\\\ \\end{bmatrix} \\end{equation} \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} = 1 \\begin{equation} \\boldsymbol{u^{(2)}} = \\boldsymbol{W^{(1)}x} = \\begin{bmatrix} 1 & -2 \\\\ \\end{bmatrix} \\end{equation} \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} = 1 \\boldsymbol{z^{(2)}} = f^{(2)}(1) = 1 \\boldsymbol{z^{(2)}} = f^{(2)}(1) = 1 \u3088\u3063\u3066 y = \\hat{y} y = \\hat{y} \u3068\u306a\u308a\uff0c\u5c11\u306a\u304f\u3068\u3082 \\boldsymbol{x}=(0,1)^T \\boldsymbol{x}=(0,1)^T \u306b\u304a\u3044\u3066\u306f \u5b66\u7fd2\u304c\u53ef\u80fd\u306a\u3053\u3068\u304c\u793a\u3055\u308c\u305f\uff0e\u3061\u306a\u307f\u306b\uff0c \\boldsymbol{x} \\boldsymbol{x} \u304c\u4ed6\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u3082 \u3084\u3063\u3066\u307f\u308b\u3068\u3046\u307e\u304f\u884c\u304f\u3053\u3068\u304c\u308f\u304b\u308b\uff0e","title":"1.2 \u5b9f\u88c5\u306e\u524d\u306b\u624b\u3067\u89e3\u3044\u3066\u307f\u308b"},{"location":"xor/#13_1","text":"\u304a\u307e\u305f\u305b\u3057\u307e\u3057\u305f\uff0edynet\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e \u6ce8\u610f\u3059\u308b\u3053\u3068\u304c\uff11\u3064\u3042\u308a\u307e\u3059\uff0e\u6211\u3005\u306f\u3053\u308c\u304b\u3089\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8868\u73fe \u3059\u308b\u306e\u3067\u306f\u306a\u304f\uff0c\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u8868\u73fe\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e\u3064\u307e\u308a\u5c64\u3092\u7a4d\u3093\u3067\u3044\u304f\u306e\u3067\u306f\u306a\u304f \u7dda\u5f62\u4ee3\u6570\u3092\u5229\u7528\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u611f\u899a\u3067\u3059\uff0e \u4eca\u56de\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff0e #include iostream #include vector #include dynet/training.h #include dynet/expr.h #include dynet/model.h #include gpop/Series.hpp int main(int argc, char* argv[]) { // dynet\u306e\u521d\u671f\u5316 dynet::initialize(argc, argv); // \u8a2d\u5b9a const int ITERATIONS = 30; const int HIDDEN_L1_SIZE = 2; // \u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9 dynet::ParameterCollection model; dynet::SimpleSGDTrainer trainer(model); // \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a (\u30d1\u30e9\u30e1\u30fc\u30bf = \u6700\u9069\u5316\u3055\u308c\u308b\u5909\u6570\uff09 // W1 (2x2) \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210 dynet::Parameter p_W1 = model.add_parameters({HIDDEN_L1_SIZE, 2}); // b1 (2x1) \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210 dynet::Parameter p_b1 = model.add_parameters({HIDDEN_L1_SIZE}); // W2 (1x2) \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210 dynet::Parameter p_W2 = model.add_parameters({1, HIDDEN_L1_SIZE}); // b2 (1x1) \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210 dynet::Parameter p_b2 = model.add_parameters({1}); // \u30ce\u30fc\u30c9\u306e\u4f5c\u6210\u3068\u8a08\u7b97\u30b0\u30e9\u30d5\u3078\u306e\u767b\u9332 dynet::ComputationGraph cg; dynet::Expression W1 = dynet::parameter(cg, p_W1); dynet::Expression b1 = dynet::parameter(cg, p_b1); dynet::Expression W2 = dynet::parameter(cg, p_W2); dynet::Expression b2 = dynet::parameter(cg, p_b2); // \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u53ca\u3073\uff0c\u8a08\u7b97\u30b0\u30e9\u30d5\u3078\u306e\u5165\u529b\u5909\u6570x_value\u3092\u5ba3\u8a00\u3057\uff0c\u5909\u66f4\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b\u53c2\u7167\u6e21\u3057\u3092\u3057\u307e\u3059\uff0e std::vector dynet::real x_value(2); dynet::Expression x = dynet::input(cg, {2}, x_value); // \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u53ca\u3073\uff0c\u8a08\u7b97\u30b0\u30e9\u30d5\u3078\u306e\u5165\u529b\u5909\u6570y_value\u3092\u5ba3\u8a00\u3057\uff0c\u5909\u66f4\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b\u53c2\u7167\u6e21\u3057\u3092\u3057\u307e\u3059\uff0e dynet::real y_value; dynet::Expression y = dynet::input(cg, y_value); // \u8a08\u7b97\u30b0\u30e9\u30d5\u306b\u30ce\u30fc\u30c9\u306e\u63a5\u7d9a\u95a2\u4fc2\u3092\u5ba3\u8a00\u3059\u308b\uff0e dynet::Expression z1 = dynet::rectify(W1*x+b1); dynet::Expression y_pred = W2*z1+b2; dynet::Expression loss_expr = dynet::squared_distance(y_pred, y); // \u69cb\u7bc9\u3057\u305f\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u63cf\u3044\u3066\u307f\u308b\uff0e\u305d\u308c\u304c\u50d5\u306b\u306f\u697d\u3057\u304b\u3063\u305f\u304b\u3089 cg.print_graphviz(); // \u8aa4\u5dee\u3092\u8a18\u9332\u3059\u308b std::vector double loss_vec; // \u6559\u5e2b\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\uff0c\u5b66\u7fd2\u3055\u305b\u3066\u307f\u308b for (int iter = 0; iter ITERATIONS; iter++) { double loss_value = 0; for (int mi = 0; mi 4; mi++) { //\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\u958b\u59cb(x,y) bool x1 = mi%2; bool x2 = (mi / 2)%2; std::cout x1 : x2 std::boolalpha x1 \\t x2 std::endl; x_value[0] = x1 ? 1 : -1; x_value[1] = x2 ? 1 : -1; std::cout x_value[0] : x_value[0] \\t x_value[1] : x_value[1] std::endl; y_value = (x1 != x2) ? 1 : -1; //\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\u7d42\u4e86(x,y) //\u5b66\u7fd2\u5b9f\u884c loss_value += dynet::as_scalar(cg.forward(loss_expr)); cg.backward(loss_expr); trainer.update(); } loss_value /= 4; std::cout E = loss_value std::endl; loss_vec.push_back(loss_value); } // \u8aa4\u5dee\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b Series plot( error ); plot.plot(loss_vec); plot.show(); std::cin.get(); // \u7d50\u679c\u3092\u78ba\u304b\u3081\u308b x_value[0] = -1; x_value[1] = -1; cg.forward(loss_expr); std::cout [-1,-1] -1 : dynet::as_scalar(y_pred.value()) std::endl; x_value[0] = -1; x_value[1] = 1; cg.forward(loss_expr); std::cout [-1,1] 1 : dynet::as_scalar(y_pred.value()) std::endl; x_value[0] = 1; x_value[1] = -1; cg.forward(loss_expr); std::cout [1,-1] 1 : dynet::as_scalar(y_pred.value()) std::endl; x_value[0] = 1; x_value[1] = 1; cg.forward(loss_expr); std::cout [1,1] -1 : dynet::as_scalar(y_pred.value()) std::endl; return 0; }","title":"1.3 \u5b9f\u88c5"},{"location":"xor/#14","text":"\u3046\u307e\u304f\u884c\u304f\u3068\uff0c\u8aa4\u5dee\u306f\u4e0b\u8a18\u306e\u56f3\u306e\u3088\u3046\u306b\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u304d\u307e\u3059\uff0e \u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u3053\u308c\u306f\u304b\u306a\u308a\u3046\u307e\u304f\u3044\u3063\u305f\u7d50\u679c\u3067\u3059\uff0e\u3053\u306e\u3088\u3046\u306b\u306a\u3089\u306a\u304f\u3066\u3082 \u5fc3\u914d\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff0e\u3053\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306f\u3068\u3066\u3082\u5c0f\u3055\u3044\u306e\u3067\u3046\u307e\u304f\u5b66\u7fd2\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u306f \u521d\u671f\u30e9\u30f3\u30c0\u30e0\u30b7\u30fc\u30c9\u306b\u4f9d\u5b58\u3057\u307e\u3059\uff0e\u6570\u56de\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e","title":"1.4 \u7d50\u679c"},{"location":"xor/#28","text":"Note xor example","title":"2\uff0e\u96a0\u308c\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u304c8\u3064\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\uff08\u516c\u5f0f\uff09"},{"location":"xor/#_3","text":"Note xor\u306e\u6570\u5b66\u7684\u89e3\u8aac \u30e2\u30c7\u30eb\u306e\u5f0f \\hat{y} = \\sigma ( \\textbf{v} \\cdot \\tanh(\\textbf{Ux} + \\textbf{b})) #include dynet/training.h #include dynet/expr.h #include dynet/io.h #include dynet/model.h #include fstream using namespace std; using namespace dynet; int main(int argc, char** argv) { dynet::initialize(argc, argv); const unsigned ITERATIONS = 30; // ParameterCollection (all the model parameters) ParameterCollection m; SimpleSGDTrainer trainer(m); //MomentumSGDTrainer trainer(m); Parameter p_W, p_b, p_V, p_a; const unsigned HIDDEN_SIZE = 3; p_W = m.add_parameters({HIDDEN_SIZE, 2}); p_b = m.add_parameters({HIDDEN_SIZE}); p_V = m.add_parameters({1, HIDDEN_SIZE}); p_a = m.add_parameters({1}); // train the parameters for (unsigned iter = 0; iter ITERATIONS; ++iter) { ComputationGraph cg; Expression W = parameter(cg, p_W); Expression b = parameter(cg, p_b); Expression V = parameter(cg, p_V); Expression a = parameter(cg, p_a); vector Expression losses; for (unsigned mi = 0; mi 4; ++mi) { bool x1 = mi % 2; bool x2 = (mi / 2) % 2; vector dynet::real x_values(2); x_values[0] = x1 ? 1 : -1; x_values[1] = x2 ? 1 : -1; float y_value = (x1 != x2) ? 1 : -1; Expression x = input(cg, {2}, x_values); Expression y = input(cg, y_value); //Expression h = tanh(W*x + b); Expression h = tanh(affine_transform({b, W, x})); //Expression h = softsign(W*x + b); Expression y_pred = affine_transform({a, V, h}); losses.push_back(squared_distance(y_pred, y)); } Expression loss_expr = sum(losses); // Print the graph, just for fun. if(iter == 0) { cg.print_graphviz(); } // Calculate the loss. Batching will automatically be done here. float loss = as_scalar(cg.forward(loss_expr)) / 4; cg.backward(loss_expr); trainer.update(); cerr E = loss endl; } } Todo reference\u3092\u8abf\u3079\u3066\uff0c\u5404\u95a2\u6570\u306e\u8aac\u660e\u3092\u4ed8\u3051\u52a0\u3048\u308b","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5168\u4f53\u50cf"},{"location":"xor/#include","text":"#include dynet/training.h #include dynet/expr.h #include iostream #include fstream","title":"include"},{"location":"xor/#namespace","text":"using namespace std; using namespace dynet;","title":"namespace"},{"location":"xor/#initialize","text":"dynet::initialize(argc, argv);","title":"initialize"},{"location":"xor/#parameter-setting1","text":"\u5168\u3066\u306e\u91cd\u307f\u30d1\u30e9\u30e1\u30fc\u30bfw\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b ParameterCollection w\u3092\u4f5c\u6210\u3059\u308b\uff0e \u305d\u3057\u3066\uff0c\u305d\u306e\u91cd\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\u305f\u3081\u306e SGDTrainer \u3092\u4f5c\u6210\u3057\uff0c SGDTrainer \u306b ParameterCollection \u3092\u6e21\u3059\uff0e const unsigned ITERATIONS = 30; ParameterCollection m; SimpleSGDTrainer trainer(m);","title":"parameter setting1"},{"location":"xor/#parameter-setting","text":"Prameter p_W, p_b, p_V, p_a; const unsigned HIDDEN_SIZE = 3; p_W = m.add_parameters({HIDDEN_SIZE, 2}); p_b = m.add_parameters({HIDDEN_SIZE}); p_V = m.add_parameters({1, HIDDEN_SIZE}); p_a = m.add_parameters({1});","title":"parameter setting"},{"location":"xor/#train-the-parameters","text":"dynet\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d5\u30a7\u30fc\u30ba\u306f for\u6587 \u3067\u56de\u3057\u307e\u3059\uff0e for (unsigned inter = 0 iter ITERATIONS; ++iter) { ComputationGraph cg; Expression W = parameter(cg, p_W); Expression b = parameter(cg, p_b); Expression V = parameter(cg, p_V); Expression a = parameter(cg, p_a); vector Expression losses; }","title":"train the parameters"},{"location":"xor/#_4","text":"\u4e09\u9805\u6f14\u7b97\u5b50 [?:\u6587]\u306f\u6761\u4ef6\u5206\u5c90\u51e6\u7406\u306e\uff11\u3064\u3067\uff0c\u6761\u4ef6\u304c\u771f\u304b\u507d\u306b\u3088\u308a\u51e6\u7406\u3092\u5206\u5c90\u3057\u307e\u3059\uff0e [if\u6587]\u3092\u77ed\u7e2e\u3057\u3066\u66f8\u3044\u305f\u3088\u3046\u306a\u8a18\u8ff0\u65b9\u6cd5\u306b\u306a\u308a\u307e\u3059\uff0e \u6761\u4ef6\u5f0f ? \u771f\u306e\u5834\u5408\u306e\u6587 : \u507d\u306e\u5834\u5408\u306e\u6587 \u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u6761\u4ef6\u306e\u5206\u5c90\u7d50\u679c\u304c\u5909\u6570\u3084\u30ea\u30c6\u30e9\u30eb\u306a\u3069\u306e \u5024 \u306b\u306a\u3063\u3066\u3044\u306a\u3051\u308c\u3070 \u306a\u3089\u306a\u3044\u3053\u3068\u3067\u3059\uff0e\u3088\u304f\u4ee3\u5165\u6f14\u7b97\u5b50\u3068\u4e00\u7dd2\u306b\u5229\u7528\u3055\u308c\u307e\u3059\uff0e bool variable = (result) ? true : false; for (unsigned mi = 0; mi 4; ++mi) { // \u5165\u529b\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u6210 bool x1 = mi % 2; // 0 - false, 1 - true, 2 - false, 3 - true \u5076\u5947\u5224\u5b9a bool x2 = (mi / 2) % 2; // 0 - false, 1 - false, 2 - true, 3 - true vector dynet::real x_values(2); // dynet::real\u306ffloat\u3068\u540c\u7b49 x_value[0] = x1 ? 1 : -1; x_value[1] = x2 ? 1 : -1; float y_value = (x1 != x2) ? 1 : -1; XOR\u3092[0,1]\u3067\u306f\u306a\u304f[-1,1]\u3067\u3042\u308f\u3089\u3057\u3066\u3044\u308b\u3068\u601d\u308f\u308c\u308b\uff0e\uff14\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u5168\u90e8\u3092 \u8a08\u7b97\u3059\u308b\u3068\u4e0b\u8a18\u306e\u8868\u306e\u3088\u3046\u306b\u306a\u308b\uff0e (indecs)mi x_value[0] x_value[1] y_value 0 -1 -1 -1 1 1 -1 1 2 -1 1 1 3 1 1 -1 A B Z 0 0 0 0 1 1 1 0 1 1 1 0","title":"\u6559\u5e2b\u30c7\u30fc\u30bf\u4f5c\u6210"},{"location":"xor/#expression","text":"Expression x = input(cg, {2}, x_values); Expression y = input(cg, y_value);","title":"expression"}]}