{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dynet start documentation in Japanese Installation for Ubuntu 18.04 1. cuda (\u304a\u4f7f\u3044\u306ePC\u304cnvidia\u306e\u30b0\u30e9\u30dc\u3092\u7a4d\u3093\u3067\u306a\u3044\u5834\u5408\u306f\uff0c\u3053\u306e\u7ae0\u306f\u98db\u3070\u3057\u307e\u3057\u3087\u3046) Nvidia driver Original web pages are here Download file and details are netwok driver sudo dpkg -i cuda-repo-ubuntu1804_10.1.105-1_amd64.deb sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub sudo apt update sudo apt install cuda After driver installation, try reboot. sudo reboot \u518d\u8d77\u52d5\u306e\u5f8c\uff0c\u554f\u984c\u306a\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u305f\u304b\u3069\u3046\u304b\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\uff0e nvidia-smi \u4e0b\u8a18\u306e\u3088\u3046\u306a\u8868\u793a\u304c\u51fa\u308c\u3070\u6210\u529f\u3067\u3059\uff0e Tue May 7 15:46:06 2019 +-----------------------------------------------------------------------------+ | NVIDIA-SMI 418.56 Driver Version: 418.56 CUDA Version: 10.1 | |-------------------------------+----------------------+----------------------+ | GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC | | Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. | |===============================+======================+======================| | 0 GeForce GTX 108... Off | 00000000:01:00.0 On | N/A | | 23% 29C P8 12W / 250W | 256MiB / 11175MiB | 1% Default | +-------------------------------+----------------------+----------------------+ +-----------------------------------------------------------------------------+ | Processes: GPU Memory | | GPU PID Type Process name Usage | |=============================================================================| | 0 1269 G /usr/lib/xorg/Xorg 162MiB | | 0 1446 G /usr/bin/gnome-shell 90MiB | +-----------------------------------------------------------------------------+ cuDNN \u8a73\u7d30 nvidia\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u5fc5\u8981\u306a\u306e\u3067\u4f5c\u6210\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046. \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30da\u30fc\u30b8 \u306b\u98db\u3093\u3067cuDNN\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u3044\u304f\u3064\u304b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\uff0c cuDNN Runtime Library for Ubuntu18.04 cuDNN Developer Library for Ubuntu18.04 cuDNN Code samples and User Guide for Ubuntu18.04 \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\uff0e sudo dpkg -i libcudnn7_7.5.1.10-1+cuda10.1_amd64.deb sudo dpkg -i libcudnn7-dev_7.5.1.10-1+cuda10.1_amd64.deb sudo dpkg -i libcudnn7-doc_7.5.1.10-1+cuda10.1_amd64.deb \u6b63\u5e38\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b \u8a66\u3057\u306b\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e cp -r /usr/src/cudnn_samples_v7/ $HOME cd $HOME/cudnn_samples_v7/mnistCUDNN make clean make make clean make \u3046\u307e\u304f\u5b9f\u884c\u3067\u304d\u308b\u3068\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e \u79c1\u306e\u74b0\u5883(Geforce GTX1080Ti)\u3067\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3057\u305f\uff0e \u6700\u5f8c\u306b Test passed! \u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308c\u3070\u3046\u307e\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u8a3c\u62e0\u3067\u3059\uff0e cudnnGetVersion() : 7501 , CUDNN_VERSION from cudnn.h : 7501 (7.5.1) Host compiler version : GCC 7.4.0 There are 1 CUDA capable devices on your machine : device 0 : sms 28 Capabilities 6.1, SmClock 1582.0 Mhz, MemSize (Mb) 11175, MemClock 5505.0 Mhz, Ecc=0, boardGroupID=0 Using device 0 Testing single precision Loading image data/one_28x28.pgm Performing forward propagation ... Testing cudnnGetConvolutionForwardAlgorithm ... Fastest algorithm is Algo 1 Testing cudnnFindConvolutionForwardAlgorithm ... ^^^^ CUDNN_STATUS_SUCCESS for Algo 0: 0.066368 time requiring 0 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.077664 time requiring 3464 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.102400 time requiring 57600 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 0.110400 time requiring 2057744 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 5: 0.132096 time requiring 203008 memory Resulting weights from Softmax: 0.0000000 0.9999399 0.0000000 0.0000000 0.0000561 0.0000000 0.0000012 0.0000017 0.0000010 0.0000000 Loading image data/three_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000000 0.0000000 0.9999288 0.0000000 0.0000711 0.0000000 0.0000000 0.0000000 0.0000000 Loading image data/five_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 0.9999820 0.0000154 0.0000000 0.0000012 0.0000006 Result of classification: 1 3 5 Test passed! Testing half precision (math in single precision) Loading image data/one_28x28.pgm Performing forward propagation ... Testing cudnnGetConvolutionForwardAlgorithm ... Fastest algorithm is Algo 1 Testing cudnnFindConvolutionForwardAlgorithm ... ^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.019584 time requiring 3464 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.032768 time requiring 28800 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 0.091136 time requiring 2057744 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 5: 0.092064 time requiring 203008 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 4: 0.094176 time requiring 207360 memory Resulting weights from Softmax: 0.0000001 1.0000000 0.0000001 0.0000000 0.0000563 0.0000001 0.0000012 0.0000017 0.0000010 0.0000001 Loading image data/three_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000714 0.0000000 0.0000000 0.0000000 0.0000000 Loading image data/five_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 1.0000000 0.0000154 0.0000000 0.0000012 0.0000006 Result of classification: 1 3 5 Test passed! \u6700\u5f8c\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u691c\u8a3c\u30c6\u30b9\u30c8\u3067\u4f7f\u7528\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u3082\u3046\u5fc5\u8981\u306a\u3044\u306e\u3067\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\uff0e cd ~/ rm -rf cudnn_samples_v7 2.Eigen (\u304a\u4f7f\u3044\u306ePC\u304cnvidia\u306e\u30b0\u30e9\u30dc\u3092\u7a4d\u3093\u3067\u306a\u3044\u5834\u5408\u306f\uff0c\u3053\u306e\u7ae0\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046) Eigen \u304b\u3089 \u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306eEigen\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fEigen\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u3066\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3061\u307e\u3057\u3087\u3046\uff0e mkdir build_dir cd build_dir sudo make install 3. dynet \u3053\u306e\u7ae0\u3092\u5b9f\u884c\u3059\u308b\u524d\u306bcuda\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304beigen\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u9078\u629e\u3057\uff0c \u3042\u306a\u305f\u306ePC\u306e\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\uff0e git clone https://github.com/clab/dynet.git cd dynet mkdir build cd build \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304ccuda\u306e\u5834\u5408\u306f\u3053\u3061\u3089 cmake .. -DENABLE_BOOST=ON -DENABLE_CPP_EXAMPLES=ON -DEIGEN3_INCLUDE_DIR=/usr/local/include/eigen3 -DCUDNN_ROOT=/usr/local/cuda/ -DBACKEND=cuda \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304ceigen\u306e\u5834\u5408\u306f\u3053\u3061\u3089 cmake .. -DENABLE_BOOST=ON -DENABLE_CPP_EXAMPLES=ON -DEIGEN3_INCLUDE_DIR=/usr/local/include/eigen3 make -j10 sudo make install \u6700\u5f8c\u306b\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u78ba\u8a8d\u306e\u305f\u3081\u306b\u7c21\u5358\u306a\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e cd example ./xor-autobatch \u30a8\u30e9\u30fc\u306a\u304f\u5b9f\u884c\u3055\u308c\u305f\u5b8c\u4e86\u3067\u3059\uff0e \u306f\u3044\uff0c\u3053\u308c\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u5b8c\u4e86\u3067\u3059\uff0e \u304a\u3064\u304b\u308c\u3055\u307e\u3067\u3057\u305f\uff0e","title":"dynet start documentation in Japanese"},{"location":"#dynet-start-documentation-in-japanese","text":"","title":"dynet start documentation in Japanese"},{"location":"#installation-for-ubuntu-1804","text":"","title":"Installation for Ubuntu 18.04"},{"location":"#1-cuda","text":"(\u304a\u4f7f\u3044\u306ePC\u304cnvidia\u306e\u30b0\u30e9\u30dc\u3092\u7a4d\u3093\u3067\u306a\u3044\u5834\u5408\u306f\uff0c\u3053\u306e\u7ae0\u306f\u98db\u3070\u3057\u307e\u3057\u3087\u3046)","title":"1. cuda"},{"location":"#nvidia-driver","text":"Original web pages are here Download file and details are netwok driver sudo dpkg -i cuda-repo-ubuntu1804_10.1.105-1_amd64.deb sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub sudo apt update sudo apt install cuda After driver installation, try reboot. sudo reboot \u518d\u8d77\u52d5\u306e\u5f8c\uff0c\u554f\u984c\u306a\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u305f\u304b\u3069\u3046\u304b\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\uff0e nvidia-smi \u4e0b\u8a18\u306e\u3088\u3046\u306a\u8868\u793a\u304c\u51fa\u308c\u3070\u6210\u529f\u3067\u3059\uff0e Tue May 7 15:46:06 2019 +-----------------------------------------------------------------------------+ | NVIDIA-SMI 418.56 Driver Version: 418.56 CUDA Version: 10.1 | |-------------------------------+----------------------+----------------------+ | GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC | | Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. | |===============================+======================+======================| | 0 GeForce GTX 108... Off | 00000000:01:00.0 On | N/A | | 23% 29C P8 12W / 250W | 256MiB / 11175MiB | 1% Default | +-------------------------------+----------------------+----------------------+ +-----------------------------------------------------------------------------+ | Processes: GPU Memory | | GPU PID Type Process name Usage | |=============================================================================| | 0 1269 G /usr/lib/xorg/Xorg 162MiB | | 0 1446 G /usr/bin/gnome-shell 90MiB | +-----------------------------------------------------------------------------+","title":"Nvidia driver"},{"location":"#cudnn","text":"\u8a73\u7d30 nvidia\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u5fc5\u8981\u306a\u306e\u3067\u4f5c\u6210\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046. \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30da\u30fc\u30b8 \u306b\u98db\u3093\u3067cuDNN\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u3044\u304f\u3064\u304b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\uff0c cuDNN Runtime Library for Ubuntu18.04 cuDNN Developer Library for Ubuntu18.04 cuDNN Code samples and User Guide for Ubuntu18.04 \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\uff0e sudo dpkg -i libcudnn7_7.5.1.10-1+cuda10.1_amd64.deb sudo dpkg -i libcudnn7-dev_7.5.1.10-1+cuda10.1_amd64.deb sudo dpkg -i libcudnn7-doc_7.5.1.10-1+cuda10.1_amd64.deb \u6b63\u5e38\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b \u8a66\u3057\u306b\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e cp -r /usr/src/cudnn_samples_v7/ $HOME cd $HOME/cudnn_samples_v7/mnistCUDNN make clean make make clean make \u3046\u307e\u304f\u5b9f\u884c\u3067\u304d\u308b\u3068\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e \u79c1\u306e\u74b0\u5883(Geforce GTX1080Ti)\u3067\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3057\u305f\uff0e \u6700\u5f8c\u306b Test passed! \u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308c\u3070\u3046\u307e\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u8a3c\u62e0\u3067\u3059\uff0e cudnnGetVersion() : 7501 , CUDNN_VERSION from cudnn.h : 7501 (7.5.1) Host compiler version : GCC 7.4.0 There are 1 CUDA capable devices on your machine : device 0 : sms 28 Capabilities 6.1, SmClock 1582.0 Mhz, MemSize (Mb) 11175, MemClock 5505.0 Mhz, Ecc=0, boardGroupID=0 Using device 0 Testing single precision Loading image data/one_28x28.pgm Performing forward propagation ... Testing cudnnGetConvolutionForwardAlgorithm ... Fastest algorithm is Algo 1 Testing cudnnFindConvolutionForwardAlgorithm ... ^^^^ CUDNN_STATUS_SUCCESS for Algo 0: 0.066368 time requiring 0 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.077664 time requiring 3464 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.102400 time requiring 57600 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 0.110400 time requiring 2057744 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 5: 0.132096 time requiring 203008 memory Resulting weights from Softmax: 0.0000000 0.9999399 0.0000000 0.0000000 0.0000561 0.0000000 0.0000012 0.0000017 0.0000010 0.0000000 Loading image data/three_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000000 0.0000000 0.9999288 0.0000000 0.0000711 0.0000000 0.0000000 0.0000000 0.0000000 Loading image data/five_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 0.9999820 0.0000154 0.0000000 0.0000012 0.0000006 Result of classification: 1 3 5 Test passed! Testing half precision (math in single precision) Loading image data/one_28x28.pgm Performing forward propagation ... Testing cudnnGetConvolutionForwardAlgorithm ... Fastest algorithm is Algo 1 Testing cudnnFindConvolutionForwardAlgorithm ... ^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.019584 time requiring 3464 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.032768 time requiring 28800 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 0.091136 time requiring 2057744 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 5: 0.092064 time requiring 203008 memory ^^^^ CUDNN_STATUS_SUCCESS for Algo 4: 0.094176 time requiring 207360 memory Resulting weights from Softmax: 0.0000001 1.0000000 0.0000001 0.0000000 0.0000563 0.0000001 0.0000012 0.0000017 0.0000010 0.0000001 Loading image data/three_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000714 0.0000000 0.0000000 0.0000000 0.0000000 Loading image data/five_28x28.pgm Performing forward propagation ... Resulting weights from Softmax: 0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 1.0000000 0.0000154 0.0000000 0.0000012 0.0000006 Result of classification: 1 3 5 Test passed! \u6700\u5f8c\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u691c\u8a3c\u30c6\u30b9\u30c8\u3067\u4f7f\u7528\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u3082\u3046\u5fc5\u8981\u306a\u3044\u306e\u3067\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\uff0e cd ~/ rm -rf cudnn_samples_v7","title":"cuDNN"},{"location":"#2eigen","text":"(\u304a\u4f7f\u3044\u306ePC\u304cnvidia\u306e\u30b0\u30e9\u30dc\u3092\u7a4d\u3093\u3067\u306a\u3044\u5834\u5408\u306f\uff0c\u3053\u306e\u7ae0\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046) Eigen \u304b\u3089 \u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306eEigen\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\uff0e \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fEigen\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u3066\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3061\u307e\u3057\u3087\u3046\uff0e mkdir build_dir cd build_dir sudo make install","title":"2.Eigen"},{"location":"#3-dynet","text":"\u3053\u306e\u7ae0\u3092\u5b9f\u884c\u3059\u308b\u524d\u306bcuda\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304beigen\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u9078\u629e\u3057\uff0c \u3042\u306a\u305f\u306ePC\u306e\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\uff0e git clone https://github.com/clab/dynet.git cd dynet mkdir build cd build \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304ccuda\u306e\u5834\u5408\u306f\u3053\u3061\u3089 cmake .. -DENABLE_BOOST=ON -DENABLE_CPP_EXAMPLES=ON -DEIGEN3_INCLUDE_DIR=/usr/local/include/eigen3 -DCUDNN_ROOT=/usr/local/cuda/ -DBACKEND=cuda \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304ceigen\u306e\u5834\u5408\u306f\u3053\u3061\u3089 cmake .. -DENABLE_BOOST=ON -DENABLE_CPP_EXAMPLES=ON -DEIGEN3_INCLUDE_DIR=/usr/local/include/eigen3 make -j10 sudo make install \u6700\u5f8c\u306b\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u78ba\u8a8d\u306e\u305f\u3081\u306b\u7c21\u5358\u306a\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e cd example ./xor-autobatch \u30a8\u30e9\u30fc\u306a\u304f\u5b9f\u884c\u3055\u308c\u305f\u5b8c\u4e86\u3067\u3059\uff0e \u306f\u3044\uff0c\u3053\u308c\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u5b8c\u4e86\u3067\u3059\uff0e \u304a\u3064\u304b\u308c\u3055\u307e\u3067\u3057\u305f\uff0e","title":"3. dynet"}]}